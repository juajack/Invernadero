

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Wed Apr 27 17:44:28 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           	psect	idataCOMRAM
    64  000EA2                     __pidataCOMRAM:
    65                           	opt stack 0
    66                           
    67                           ;initializer for _firstbyte
    68  000EA2  23                 	db	35
    69  000EA3  25                 	db	37
    70  000EA4  40                 	db	64
    71                           
    72                           ;initializer for _MaxLightValue
    73  000EA5  E8                 	db	232
    74                           
    75                           ;initializer for _MinLightValue
    76  000EA6  C8                 	db	200
    77                           
    78                           ;initializer for _endbyte
    79  000EA7  24                 	db	36
    80                           
    81                           ;initializer for _prescaler
    82  000EA8  04                 	db	4
    83                           
    84                           ;initializer for _splitbyte
    85  000EA9  2B                 	db	43
    86                           
    87                           	psect	idataBANK0
    88  000E5C                     __pidataBANK0:
    89                           	opt stack 0
    90                           
    91                           ;initializer for _DHT_StateMachine
    92  000E5C  E6                 	db	low _Idle
    93  000E5D  0E                 	db	high _Idle
    94  000E5E  E8                 	db	low _FirstStateRequest
    95  000E5F  0C                 	db	high _FirstStateRequest
    96  000E60  50                 	db	low _SecondStateRequest
    97  000E61  0E                 	db	high _SecondStateRequest
    98  000E62  8C                 	db	low _DHTSignalResponse
    99  000E63  0D                 	db	high _DHTSignalResponse
   100  000E64  D2                 	db	low _RecievingData
   101  000E65  0B                 	db	high _RecievingData
   102                           
   103                           	psect	smallconst
   104  000800                     __psmallconst:
   105                           	opt stack 0
   106  000800  00                 	db	0
   107  000801                     SerialCOM@_SPBRG:
   108                           	opt stack 0
   109  000801  0C                 	db	12
   110  000802                     __end_ofSerialCOM@_SPBRG:
   111                           	opt stack 0
   112  000802  0C                 	db	12
   113  000803                     __end_of__SPBRG:
   114                           	opt stack 0
   115  0000                     _ADRES	set	4035
   116  0000                     _CCPR1	set	4030
   117  0000                     _TMR0	set	4054
   118  0000                     _TMR1	set	4046
   119  0000                     _CCP1CON	set	4029
   120  0000                     _CCP2CON	set	4026
   121  0000                     _CCPR1H	set	4031
   122  0000                     _CCPR1L	set	4030
   123  0000                     _CCPR2L	set	4027
   124  0000                     _INTCON2bits	set	4081
   125  0000                     _INTCON3bits	set	4080
   126  0000                     _INTCONbits	set	4082
   127  0000                     _IPR1bits	set	3999
   128  0000                     _IPR2bits	set	4002
   129  0000                     _OSCCON	set	4051
   130  0000                     _PIE1bits	set	3997
   131  0000                     _PIE2bits	set	4000
   132  0000                     _PORTAbits	set	3968
   133  0000                     _PR2	set	4043
   134  0000                     _RCONbits	set	4048
   135  0000                     _SPBRG	set	4015
   136  0000                     _T0CON	set	4053
   137  0000                     _T1CON	set	4045
   138  0000                     _T1CONbits	set	4045
   139  0000                     _T2CON	set	4042
   140  0000                     _T3CON	set	4017
   141  0000                     _TMR0H	set	4055
   142  0000                     _TMR0L	set	4054
   143  0000                     _TMR1H	set	4047
   144  0000                     _TMR1L	set	4046
   145  0000                     _TRISAbits	set	3986
   146  0000                     _TRISBbits	set	3987
   147  0000                     _TRISCbits	set	3988
   148  0000                     _ADDEN	set	32091
   149  0000                     _ADIF	set	31990
   150  0000                     _BRG16	set	32195
   151  0000                     _BRGH	set	32098
   152  0000                     _CCP1IE	set	31978
   153  0000                     _CCP1IF	set	31986
   154  0000                     _CREN	set	32092
   155  0000                     _CSRC	set	32103
   156  0000                     _INT2IF	set	32641
   157  0000                     _INTEDG2	set	32652
   158  0000                     _LATA0	set	31816
   159  0000                     _LATB3	set	31827
   160  0000                     _LATC2	set	31834
   161  0000                     _RX9	set	32094
   162  0000                     _SENDB	set	32099
   163  0000                     _SPEN	set	32095
   164  0000                     _SREN	set	32093
   165  0000                     _SYNC	set	32100
   166  0000                     _T0IF	set	32658
   167  0000                     _T1OSCEN	set	32363
   168  0000                     _T1RUN	set	32366
   169  0000                     _TMR0IF	set	32658
   170  0000                     _TMR0ON	set	32431
   171  0000                     _TMR1CS	set	32361
   172  0000                     _TMR1ON	set	32360
   173  0000                     _TX9	set	32102
   174  0000                     _TXEN	set	32101
   175                           
   176                           ; #config settings
   177  000803  00                 	db	0	; dummy byte at the end
   178  0000                     
   179                           	psect	cinit
   180  000B08                     __pcinit:
   181                           	opt stack 0
   182  000B08                     start_initialization:
   183                           	opt stack 0
   184  000B08                     __initialization:
   185                           	opt stack 0
   186                           
   187                           ; Clear objects allocated to BANK0 (86 bytes)
   188  000B08  EE00  F060         	lfsr	0,__pbssBANK0
   189  000B0C  0E56               	movlw	86
   190  000B0E                     clear_0:
   191  000B0E  6AEE               	clrf	postinc0,c
   192  000B10  06E8               	decf	wreg,f,c
   193  000B12  E1FD               	bnz	clear_0
   194                           
   195                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   196  000B14  6A4B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   197                           
   198                           ; Clear objects allocated to COMRAM (32 bytes)
   199  000B16  EE00  F023         	lfsr	0,__pbssCOMRAM
   200  000B1A  0E20               	movlw	32
   201  000B1C                     clear_1:
   202  000B1C  6AEE               	clrf	postinc0,c
   203  000B1E  06E8               	decf	wreg,f,c
   204  000B20  E1FD               	bnz	clear_1
   205                           
   206                           ; Initialize objects allocated to BANK0 (10 bytes)
   207                           ; load TBLPTR registers with __pidataBANK0
   208  000B22  0E5C               	movlw	low __pidataBANK0
   209  000B24  6EF6               	movwf	tblptrl,c
   210  000B26  0E0E               	movlw	high __pidataBANK0
   211  000B28  6EF7               	movwf	tblptrh,c
   212  000B2A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   213  000B2C  6EF8               	movwf	tblptru,c
   214  000B2E  EE00  F0C8         	lfsr	0,__pdataBANK0
   215  000B32  EE10 F00A          	lfsr	1,10
   216  000B36                     copy_data0:
   217  000B36  0009               	tblrd		*+
   218  000B38  CFF5 FFEE          	movff	tablat,postinc0
   219  000B3C  50E5               	movf	postdec1,w,c
   220  000B3E  50E1               	movf	fsr1l,w,c
   221  000B40  E1FA               	bnz	copy_data0
   222                           
   223                           ; Initialize objects allocated to COMRAM (8 bytes)
   224                           ; load TBLPTR registers with __pidataCOMRAM
   225  000B42  0EA2               	movlw	low __pidataCOMRAM
   226  000B44  6EF6               	movwf	tblptrl,c
   227  000B46  0E0E               	movlw	high __pidataCOMRAM
   228  000B48  6EF7               	movwf	tblptrh,c
   229  000B4A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   230  000B4C  6EF8               	movwf	tblptru,c
   231  000B4E  EE00  F043         	lfsr	0,__pdataCOMRAM
   232  000B52  EE10 F008          	lfsr	1,8
   233  000B56                     copy_data1:
   234  000B56  0009               	tblrd		*+
   235  000B58  CFF5 FFEE          	movff	tablat,postinc0
   236  000B5C  50E5               	movf	postdec1,w,c
   237  000B5E  50E1               	movf	fsr1l,w,c
   238  000B60  E1FA               	bnz	copy_data1
   239  000B62                     end_of_initialization:
   240                           	opt stack 0
   241  000B62                     __end_of__initialization:
   242                           	opt stack 0
   243  000B62  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   244  000B64  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   245  000B66  0E00               	movlw	low (__Lmediumconst shr (0+16))
   246  000B68  6EF8               	movwf	tblptru,c
   247  000B6A  0100               	movlb	0
   248  000B6C  EF13  F006         	goto	_main	;jump to C main() function
   249                           tblptru	equ	0xFF8
   250                           tblptrh	equ	0xFF7
   251                           tblptrl	equ	0xFF6
   252                           tablat	equ	0xFF5
   253                           postinc0	equ	0xFEE
   254                           wreg	equ	0xFE8
   255                           postdec1	equ	0xFE5
   256                           fsr1l	equ	0xFE1
   257                           
   258                           	psect	bitbssCOMRAM
   259  000258                     __pbitbssCOMRAM:
   260                           	opt stack 0
   261  000258                     _Door_f:
   262                           	opt stack 0
   263  000258                     	ds	1
   264  000259                     _Light_f:
   265                           	opt stack 0
   266  000259                     	ds	1
   267  00025A                     _Night_f:
   268                           	opt stack 0
   269  00025A                     	ds	1
   270  00025B                     _f_SSPReady:
   271                           	opt stack 0
   272  00025B                     	ds	1
   273  00025C                     _f_Send2Bytes:
   274                           	opt stack 0
   275  00025C                     	ds	1
   276  00025D                     _f_SendByte:
   277                           	opt stack 0
   278  00025D                     	ds	1
   279                           tblptru	equ	0xFF8
   280                           tblptrh	equ	0xFF7
   281                           tblptrl	equ	0xFF6
   282                           tablat	equ	0xFF5
   283                           postinc0	equ	0xFEE
   284                           wreg	equ	0xFE8
   285                           postdec1	equ	0xFE5
   286                           fsr1l	equ	0xFE1
   287                           
   288                           	psect	bssCOMRAM
   289  000023                     __pbssCOMRAM:
   290                           	opt stack 0
   291  000023                     _LSb:
   292                           	opt stack 0
   293  000023                     	ds	2
   294  000025                     _LightValue:
   295                           	opt stack 0
   296  000025                     	ds	2
   297  000027                     _MSb:
   298                           	opt stack 0
   299  000027                     	ds	2
   300  000029                     _PWMValue:
   301                           	opt stack 0
   302  000029                     	ds	2
   303  00002B                     _counts:
   304                           	opt stack 0
   305  00002B                     	ds	2
   306  00002D                     _lasttime:
   307                           	opt stack 0
   308  00002D                     	ds	2
   309  00002F                     _DecimalHumidity:
   310                           	opt stack 0
   311  00002F                     	ds	1
   312  000030                     _DecimalTemperature:
   313                           	opt stack 0
   314  000030                     	ds	1
   315  000031                     _IntegerHumidity:
   316                           	opt stack 0
   317  000031                     	ds	1
   318  000032                     _IntegerTemperature:
   319                           	opt stack 0
   320  000032                     	ds	1
   321  000033                     _TimerCounter:
   322                           	opt stack 0
   323  000033                     	ds	1
   324  000034                     _bitcount:
   325                           	opt stack 0
   326  000034                     	ds	1
   327  000035                     _bytecount:
   328                           	opt stack 0
   329  000035                     	ds	1
   330  000036                     _counter:
   331                           	opt stack 0
   332  000036                     	ds	1
   333  000037                     _dummy:
   334                           	opt stack 0
   335  000037                     	ds	1
   336  000038                     _f_frameready:
   337                           	opt stack 0
   338  000038                     	ds	1
   339  000039                     _f_slave1:
   340                           	opt stack 0
   341  000039                     	ds	1
   342  00003A                     _f_slave2:
   343                           	opt stack 0
   344  00003A                     	ds	1
   345  00003B                     _firstvalue:
   346                           	opt stack 0
   347  00003B                     	ds	1
   348  00003C                     _firstvaluespaces:
   349                           	opt stack 0
   350  00003C                     	ds	1
   351  00003D                     _frame:
   352                           	opt stack 0
   353  00003D                     	ds	1
   354  00003E                     _mask:
   355                           	opt stack 0
   356  00003E                     	ds	1
   357  00003F                     _secondvalue:
   358                           	opt stack 0
   359  00003F                     	ds	1
   360  000040                     _secondvaluespaces:
   361                           	opt stack 0
   362  000040                     	ds	1
   363  000041                     _state:
   364                           	opt stack 0
   365  000041                     	ds	1
   366  000042                     _time:
   367                           	opt stack 0
   368  000042                     	ds	1
   369                           tblptru	equ	0xFF8
   370                           tblptrh	equ	0xFF7
   371                           tblptrl	equ	0xFF6
   372                           tablat	equ	0xFF5
   373                           postinc0	equ	0xFEE
   374                           wreg	equ	0xFE8
   375                           postdec1	equ	0xFE5
   376                           fsr1l	equ	0xFE1
   377                           
   378                           	psect	dataCOMRAM
   379  000043                     __pdataCOMRAM:
   380                           	opt stack 0
   381  000043                     _firstbyte:
   382                           	opt stack 0
   383  000043                     	ds	3
   384  000046                     _MaxLightValue:
   385                           	opt stack 0
   386  000046                     	ds	1
   387  000047                     _MinLightValue:
   388                           	opt stack 0
   389  000047                     	ds	1
   390  000048                     _endbyte:
   391                           	opt stack 0
   392  000048                     	ds	1
   393  000049                     _prescaler:
   394                           	opt stack 0
   395  000049                     	ds	1
   396  00004A                     _splitbyte:
   397                           	opt stack 0
   398  00004A                     	ds	1
   399                           tblptru	equ	0xFF8
   400                           tblptrh	equ	0xFF7
   401                           tblptrl	equ	0xFF6
   402                           tablat	equ	0xFF5
   403                           postinc0	equ	0xFEE
   404                           wreg	equ	0xFE8
   405                           postdec1	equ	0xFE5
   406                           fsr1l	equ	0xFE1
   407                           
   408                           	psect	bssBANK0
   409  000060                     __pbssBANK0:
   410                           	opt stack 0
   411  000060                     _times:
   412                           	opt stack 0
   413  000060                     	ds	80
   414  0000B0                     _temp:
   415                           	opt stack 0
   416  0000B0                     	ds	6
   417                           tblptru	equ	0xFF8
   418                           tblptrh	equ	0xFF7
   419                           tblptrl	equ	0xFF6
   420                           tablat	equ	0xFF5
   421                           postinc0	equ	0xFEE
   422                           wreg	equ	0xFE8
   423                           postdec1	equ	0xFE5
   424                           fsr1l	equ	0xFE1
   425                           
   426                           	psect	dataBANK0
   427  0000C8                     __pdataBANK0:
   428                           	opt stack 0
   429  0000C8                     _DHT_StateMachine:
   430                           	opt stack 0
   431  0000C8                     	ds	10
   432                           tblptru	equ	0xFF8
   433                           tblptrh	equ	0xFF7
   434                           tblptrl	equ	0xFF6
   435                           tablat	equ	0xFF5
   436                           postinc0	equ	0xFEE
   437                           wreg	equ	0xFE8
   438                           postdec1	equ	0xFE5
   439                           fsr1l	equ	0xFE1
   440                           
   441                           	psect	cstackBANK0
   442  0000B6                     __pcstackBANK0:
   443                           	opt stack 0
   444  0000B6                     ?___wmul:
   445                           	opt stack 0
   446  0000B6                     TMR0_INIT@bits:
   447                           	opt stack 0
   448  0000B6                     TMR0_WRITE_HIGH@valorHigh:
   449                           	opt stack 0
   450  0000B6                     TMR0_WRITE_LOW@valorLow:
   451                           	opt stack 0
   452  0000B6                     ___wmul@multiplier:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x0
   456  0000B6                     	ds	1
   457  0000B7                     TMR0_INIT@T0PS:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x1
   461  0000B7                     	ds	1
   462  0000B8                     ___wmul@multiplicand:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x2
   466  0000B8                     	ds	2
   467  0000BA                     ___wmul@product:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x4
   471  0000BA                     	ds	2
   472  0000BC                     ?___awdiv:
   473                           	opt stack 0
   474  0000BC                     ___awdiv@dividend:
   475                           	opt stack 0
   476                           
   477                           ; 2 bytes @ 0x6
   478  0000BC                     	ds	2
   479  0000BE                     ___awdiv@divisor:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0x8
   483  0000BE                     	ds	2
   484  0000C0                     ___awdiv@counter:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0xA
   488  0000C0                     	ds	1
   489  0000C1                     ___awdiv@sign:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0xB
   493  0000C1                     	ds	1
   494  0000C2                     ___awdiv@quotient:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0xC
   498  0000C2                     	ds	2
   499  0000C4                     ??_SetDutyCycle:
   500                           
   501                           ; 1 bytes @ 0xE
   502  0000C4                     	ds	2
   503  0000C6                     SetDutyCycle@dutycycle:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0x10
   507  0000C6                     	ds	1
   508  0000C7                     SetPWM@dutycycle:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x11
   512  0000C7                     	ds	1
   513  0000C8                     tblptru	equ	0xFF8
   514                           tblptrh	equ	0xFF7
   515                           tblptrl	equ	0xFF6
   516                           tablat	equ	0xFF5
   517                           postinc0	equ	0xFEE
   518                           wreg	equ	0xFE8
   519                           postdec1	equ	0xFE5
   520                           fsr1l	equ	0xFE1
   521                           
   522                           ; 1 bytes @ 0x12
   523                           
   524                           	psect	cstackCOMRAM
   525  000001                     __pcstackCOMRAM:
   526                           	opt stack 0
   527  000001                     ??_RecievingData:
   528  000001                     ?i2___wmul:
   529                           	opt stack 0
   530  000001                     i2TMR0_WRITE_HIGH@valorHigh:
   531                           	opt stack 0
   532  000001                     i2TMR0_WRITE_LOW@valorLow:
   533                           	opt stack 0
   534  000001                     i2___wmul@multiplier:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0x0
   538  000001                     	ds	2
   539  000003                     i2___wmul@multiplicand:
   540                           	opt stack 0
   541                           
   542                           ; 2 bytes @ 0x2
   543  000003                     	ds	2
   544  000005                     i2___wmul@product:
   545                           	opt stack 0
   546                           
   547                           ; 2 bytes @ 0x4
   548  000005                     	ds	2
   549  000007                     ?i2___awdiv:
   550                           	opt stack 0
   551  000007                     i2___awdiv@dividend:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x6
   555  000007                     	ds	2
   556  000009                     i2___awdiv@divisor:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0x8
   560  000009                     	ds	2
   561  00000B                     i2___awdiv@counter:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0xA
   565  00000B                     	ds	1
   566  00000C                     i2___awdiv@sign:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0xB
   570  00000C                     	ds	1
   571  00000D                     i2___awdiv@quotient:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0xC
   575  00000D                     	ds	2
   576  00000F                     ??i2_SetDutyCycle:
   577                           
   578                           ; 1 bytes @ 0xE
   579  00000F                     	ds	2
   580  000011                     i2SetDutyCycle@dutycycle:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x10
   584  000011                     	ds	1
   585  000012                     i2SetPWM@dutycycle:
   586                           	opt stack 0
   587                           
   588                           ; 1 bytes @ 0x11
   589  000012                     	ds	1
   590  000013                     ??_HighISR:
   591  000013                     
   592                           ; 1 bytes @ 0x12
   593  000013                     	ds	16
   594                           tblptru	equ	0xFF8
   595                           tblptrh	equ	0xFF7
   596                           tblptrl	equ	0xFF6
   597                           tablat	equ	0xFF5
   598                           postinc0	equ	0xFEE
   599                           wreg	equ	0xFE8
   600                           postdec1	equ	0xFE5
   601                           fsr1l	equ	0xFE1
   602                           
   603 ;;
   604 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   605 ;;
   606 ;; *************** function _main *****************
   607 ;; Defined at:
   608 ;;		line 113 in file "Main.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   622 ;;      Params:         0       0       0       0       0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0       0       0       0       0
   625 ;;      Totals:         0       0       0       0       0       0       0       0       0
   626 ;;Total ram usage:        0 bytes
   627 ;; Hardware stack levels required when called:    9
   628 ;; This function calls:
   629 ;;		_InitDHT11Driver
   630 ;;		_Interrupt_Init
   631 ;;		_TMR0_INIT
   632 ;;		_TMR0_WRITE_HIGH
   633 ;;		_TMR0_WRITE_LOW
   634 ;;		_TurnOffLights
   635 ;;		_TurnOnLights
   636 ;; This function is called by:
   637 ;;		Startup code after reset
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           	psect	text0
   642  000C26                     __ptext0:
   643                           	opt stack 0
   644  000C26                     _main:
   645                           	opt stack 22
   646                           
   647                           ;Main.c: 116: OSCCON=0b01101100;
   648                           
   649                           ;incstack = 0
   650  000C26  0E6C               	movlw	108
   651  000C28  6ED3               	movwf	4051,c	;volatile
   652                           
   653                           ;Main.c: 117: Interrupt_Init();
   654  000C2A  ECB5  F006         	call	_Interrupt_Init	;wreg free
   655                           
   656                           ;Main.c: 120: TMR0_INIT();
   657  000C2E  EC8E  F006         	call	_TMR0_INIT	;wreg free
   658                           
   659                           ;Main.c: 121: TMR0ON = 0;
   660  000C32  9ED5               	bcf	4053,7,c	;volatile
   661                           
   662                           ;Main.c: 122: TMR0_WRITE_HIGH(0xF0);
   663  000C34  0EF0               	movlw	240
   664  000C36  EC3D  F007         	call	_TMR0_WRITE_HIGH
   665                           
   666                           ;Main.c: 123: TMR0_WRITE_LOW(0xBD);
   667  000C3A  0EBD               	movlw	189
   668  000C3C  EC38  F007         	call	_TMR0_WRITE_LOW
   669                           
   670                           ;Main.c: 124: TMR0ON = 1;
   671  000C40  8ED5               	bsf	4053,7,c	;volatile
   672                           
   673                           ;Main.c: 127: InitDHT11Driver();
   674  000C42  EC47  F007         	call	_InitDHT11Driver	;wreg free
   675                           
   676                           ;Main.c: 130: (TRISAbits.TRISA0 = 0);
   677  000C46  9092               	bcf	3986,0,c	;volatile
   678  000C48                     l1961:
   679                           
   680                           ;Main.c: 133: if((0u != PORTAbits.RA0) && Light_f==0){
   681  000C48  B080               	btfsc	3968,0,c	;volatile
   682  000C4A  B24B               	btfsc	_Light_f/(0+8),_Light_f& (0+7),c
   683  000C4C  D006               	goto	l123
   684                           
   685                           ;Main.c: 134: (LATA0=1U);
   686  000C4E  8089               	bsf	3977,0,c	;volatile
   687                           
   688                           ;Main.c: 135: TurnOnLights();
   689  000C50  EC16  F007         	call	_TurnOnLights	;wreg free
   690                           
   691                           ;Main.c: 136: INTEDG2=0U;
   692  000C54  98F1               	bcf	intcon2,4,c	;volatile
   693                           
   694                           ;Main.c: 137: Light_f=1;
   695  000C56  824B               	bsf	_Light_f/(0+8),_Light_f& (0+7),c
   696                           
   697                           ;Main.c: 138: }
   698  000C58  D7F7               	goto	l1961
   699  000C5A                     l123:
   700                           
   701                           ;Main.c: 139: else if((0u == PORTAbits.RA0) && Light_f==1){
   702  000C5A  A080               	btfss	3968,0,c	;volatile
   703  000C5C  A24B               	btfss	_Light_f/(0+8),_Light_f& (0+7),c
   704  000C5E  D7F4               	goto	l1961
   705                           
   706                           ;Main.c: 140: (LATA0=0U);
   707  000C60  9089               	bcf	3977,0,c	;volatile
   708                           
   709                           ;Main.c: 141: TurnOffLights();
   710  000C62  EC68  F007         	call	_TurnOffLights	;wreg free
   711                           
   712                           ;Main.c: 142: INTEDG2=1U;
   713  000C66  88F1               	bsf	intcon2,4,c	;volatile
   714                           
   715                           ;Main.c: 143: Light_f=0;
   716  000C68  924B               	bcf	_Light_f/(0+8),_Light_f& (0+7),c
   717  000C6A  D7EE               	goto	l1961
   718  000C6C                     __end_of_main:
   719                           	opt stack 0
   720                           tblptru	equ	0xFF8
   721                           tblptrh	equ	0xFF7
   722                           tblptrl	equ	0xFF6
   723                           tablat	equ	0xFF5
   724                           intcon2	equ	0xFF1
   725                           postinc0	equ	0xFEE
   726                           wreg	equ	0xFE8
   727                           postdec1	equ	0xFE5
   728                           fsr1l	equ	0xFE1
   729                           
   730 ;; *************** function _TurnOnLights *****************
   731 ;; Defined at:
   732 ;;		line 7 in file "LedDriver.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;		None
   735 ;; Auto vars:     Size  Location     Type
   736 ;;		None
   737 ;; Return value:  Size  Location     Type
   738 ;;                  2   20[None  ] int 
   739 ;; Registers used:
   740 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   746 ;;      Params:         0       0       0       0       0       0       0       0       0
   747 ;;      Locals:         0       0       0       0       0       0       0       0       0
   748 ;;      Temps:          0       0       0       0       0       0       0       0       0
   749 ;;      Totals:         0       0       0       0       0       0       0       0       0
   750 ;;Total ram usage:        0 bytes
   751 ;; Hardware stack levels used:    1
   752 ;; Hardware stack levels required when called:    8
   753 ;; This function calls:
   754 ;;		_SetPWM
   755 ;;		_StartPWM
   756 ;; This function is called by:
   757 ;;		_main
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           	psect	text1
   762  000E2C                     __ptext1:
   763                           	opt stack 0
   764  000E2C                     _TurnOnLights:
   765                           	opt stack 22
   766                           
   767                           ;LedDriver.c: 8: SetPWM(50);
   768                           
   769                           ;incstack = 0
   770  000E2C  0E32               	movlw	50
   771  000E2E  ECD7  F006         	call	_SetPWM
   772                           
   773                           ;LedDriver.c: 9: StartPWM();
   774  000E32  EC55  F007         	call	_StartPWM	;wreg free
   775  000E36  0012               	return		;funcret
   776  000E38                     __end_of_TurnOnLights:
   777                           	opt stack 0
   778                           tblptru	equ	0xFF8
   779                           tblptrh	equ	0xFF7
   780                           tblptrl	equ	0xFF6
   781                           tablat	equ	0xFF5
   782                           intcon2	equ	0xFF1
   783                           postinc0	equ	0xFEE
   784                           wreg	equ	0xFE8
   785                           postdec1	equ	0xFE5
   786                           fsr1l	equ	0xFE1
   787                           
   788 ;; *************** function _StartPWM *****************
   789 ;; Defined at:
   790 ;;		line 16 in file "PWM.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;		None
   793 ;; Auto vars:     Size  Location     Type
   794 ;;		None
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg, status,2
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   804 ;;      Params:         0       0       0       0       0       0       0       0       0
   805 ;;      Locals:         0       0       0       0       0       0       0       0       0
   806 ;;      Temps:          0       0       0       0       0       0       0       0       0
   807 ;;      Totals:         0       0       0       0       0       0       0       0       0
   808 ;;Total ram usage:        0 bytes
   809 ;; Hardware stack levels used:    1
   810 ;; Hardware stack levels required when called:    5
   811 ;; This function calls:
   812 ;;		Nothing
   813 ;; This function is called by:
   814 ;;		_TurnOnLights
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           	psect	text2
   819  000EAA                     __ptext2:
   820                           	opt stack 0
   821  000EAA                     _StartPWM:
   822                           	opt stack 24
   823                           
   824                           ;PWM.c: 17: CCP2CON=0x0C;
   825                           
   826                           ;incstack = 0
   827  000EAA  0E0C               	movlw	12
   828  000EAC  6EBA               	movwf	4026,c	;volatile
   829                           
   830                           ;PWM.c: 18: T1OSCEN=1U;
   831  000EAE  86CD               	bsf	4045,3,c	;volatile
   832  000EB0  0012               	return		;funcret
   833  000EB2                     __end_of_StartPWM:
   834                           	opt stack 0
   835                           tblptru	equ	0xFF8
   836                           tblptrh	equ	0xFF7
   837                           tblptrl	equ	0xFF6
   838                           tablat	equ	0xFF5
   839                           intcon2	equ	0xFF1
   840                           postinc0	equ	0xFEE
   841                           wreg	equ	0xFE8
   842                           postdec1	equ	0xFE5
   843                           fsr1l	equ	0xFE1
   844                           
   845 ;; *************** function _SetPWM *****************
   846 ;; Defined at:
   847 ;;		line 43 in file "PWM.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;  dutycycle       1    wreg     unsigned char 
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  dutycycle       1   17[BANK0 ] unsigned char 
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   861 ;;      Params:         0       0       0       0       0       0       0       0       0
   862 ;;      Locals:         0       1       0       0       0       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0       0       0       0       0
   864 ;;      Totals:         0       1       0       0       0       0       0       0       0
   865 ;;Total ram usage:        1 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; Hardware stack levels required when called:    7
   868 ;; This function calls:
   869 ;;		_SetDutyCycle
   870 ;;		_SetPeriod
   871 ;; This function is called by:
   872 ;;		_TurnOnLights
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           	psect	text3
   877  000DAE                     __ptext3:
   878                           	opt stack 0
   879  000DAE                     _SetPWM:
   880                           	opt stack 22
   881                           
   882                           ;incstack = 0
   883                           ;SetPWM@dutycycle stored from wreg
   884  000DAE  0100               	movlb	0	; () banked
   885  000DB0  6FC7               	movwf	SetPWM@dutycycle& (0+255),b
   886                           
   887                           ;PWM.c: 44: T2CON=0x00;
   888  000DB2  0E00               	movlw	0
   889  000DB4  6ECA               	movwf	4042,c	;volatile
   890                           
   891                           ;PWM.c: 45: SetPeriod();
   892  000DB6  EC65  F007         	call	_SetPeriod	;wreg free
   893                           
   894                           ;PWM.c: 46: SetDutyCycle(dutycycle);
   895  000DBA  0100               	movlb	0	; () banked
   896  000DBC  51C7               	movf	SetPWM@dutycycle& (0+255),w,b
   897  000DBE  EC4D  F005         	call	_SetDutyCycle
   898                           
   899                           ;PWM.c: 47: (TRISBbits.TRISB3 = 0);
   900  000DC2  9693               	bcf	3987,3,c	;volatile
   901                           
   902                           ;PWM.c: 48: T2CON=0b110;
   903  000DC4  0E06               	movlw	6
   904  000DC6  6ECA               	movwf	4042,c	;volatile
   905  000DC8  0012               	return		;funcret
   906  000DCA                     __end_of_SetPWM:
   907                           	opt stack 0
   908                           tblptru	equ	0xFF8
   909                           tblptrh	equ	0xFF7
   910                           tblptrl	equ	0xFF6
   911                           tablat	equ	0xFF5
   912                           intcon2	equ	0xFF1
   913                           postinc0	equ	0xFEE
   914                           wreg	equ	0xFE8
   915                           postdec1	equ	0xFE5
   916                           fsr1l	equ	0xFE1
   917                           
   918 ;; *************** function _SetPeriod *****************
   919 ;; Defined at:
   920 ;;		line 27 in file "PWM.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;		None
   923 ;; Auto vars:     Size  Location     Type
   924 ;;		None
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      void 
   927 ;; Registers used:
   928 ;;		wreg, status,2
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   934 ;;      Params:         0       0       0       0       0       0       0       0       0
   935 ;;      Locals:         0       0       0       0       0       0       0       0       0
   936 ;;      Temps:          0       0       0       0       0       0       0       0       0
   937 ;;      Totals:         0       0       0       0       0       0       0       0       0
   938 ;;Total ram usage:        0 bytes
   939 ;; Hardware stack levels used:    1
   940 ;; Hardware stack levels required when called:    5
   941 ;; This function calls:
   942 ;;		Nothing
   943 ;; This function is called by:
   944 ;;		_SetPWM
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text4
   949  000ECA                     __ptext4:
   950                           	opt stack 0
   951  000ECA                     _SetPeriod:
   952                           	opt stack 23
   953                           
   954                           ;PWM.c: 29: PR2=124;
   955                           
   956                           ;incstack = 0
   957  000ECA  0E7C               	movlw	124
   958  000ECC  6ECB               	movwf	4043,c	;volatile
   959  000ECE  0012               	return		;funcret
   960  000ED0                     __end_of_SetPeriod:
   961                           	opt stack 0
   962                           tblptru	equ	0xFF8
   963                           tblptrh	equ	0xFF7
   964                           tblptrl	equ	0xFF6
   965                           tablat	equ	0xFF5
   966                           intcon2	equ	0xFF1
   967                           postinc0	equ	0xFEE
   968                           wreg	equ	0xFE8
   969                           postdec1	equ	0xFE5
   970                           fsr1l	equ	0xFE1
   971                           
   972 ;; *************** function _SetDutyCycle *****************
   973 ;; Defined at:
   974 ;;		line 32 in file "PWM.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;  dutycycle       1    wreg     unsigned char 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  dutycycle       1   16[BANK0 ] unsigned char 
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   988 ;;      Params:         0       0       0       0       0       0       0       0       0
   989 ;;      Locals:         0       1       0       0       0       0       0       0       0
   990 ;;      Temps:          0       2       0       0       0       0       0       0       0
   991 ;;      Totals:         0       3       0       0       0       0       0       0       0
   992 ;;Total ram usage:        3 bytes
   993 ;; Hardware stack levels used:    1
   994 ;; Hardware stack levels required when called:    6
   995 ;; This function calls:
   996 ;;		___awdiv
   997 ;;		___wmul
   998 ;; This function is called by:
   999 ;;		_SetPWM
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           	psect	text5
  1004  000A9A                     __ptext5:
  1005                           	opt stack 0
  1006  000A9A                     _SetDutyCycle:
  1007                           	opt stack 22
  1008                           
  1009                           ;incstack = 0
  1010                           ;SetDutyCycle@dutycycle stored from wreg
  1011  000A9A  0100               	movlb	0	; () banked
  1012  000A9C  6FC6               	movwf	SetDutyCycle@dutycycle& (0+255),b
  1013                           
  1014                           ;PWM.c: 33: PWMValue=((dutycycle)*470)/100;
  1015  000A9E  C0C6  F0B6         	movff	SetDutyCycle@dutycycle,___wmul@multiplier
  1016  000AA2  0100               	movlb	0	; () banked
  1017  000AA4  6BB7               	clrf	(___wmul@multiplier+1)& (0+255),b
  1018  000AA6  0E01               	movlw	1
  1019  000AA8  0100               	movlb	0	; () banked
  1020  000AAA  6FB9               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1021  000AAC  0ED6               	movlw	214
  1022  000AAE  6FB8               	movwf	___wmul@multiplicand& (0+255),b
  1023  000AB0  EC59  F006         	call	___wmul	;wreg free
  1024  000AB4  C0B6  F0BC         	movff	?___wmul,___awdiv@dividend
  1025  000AB8  C0B7  F0BD         	movff	?___wmul+1,___awdiv@dividend+1
  1026  000ABC  0E00               	movlw	0
  1027  000ABE  0100               	movlb	0	; () banked
  1028  000AC0  6FBF               	movwf	(___awdiv@divisor+1)& (0+255),b
  1029  000AC2  0E64               	movlw	100
  1030  000AC4  6FBE               	movwf	___awdiv@divisor& (0+255),b
  1031  000AC6  ECAC  F004         	call	___awdiv	;wreg free
  1032  000ACA  C0BC  F029         	movff	?___awdiv,_PWMValue
  1033  000ACE  C0BD  F02A         	movff	?___awdiv+1,_PWMValue+1
  1034                           
  1035                           ;PWM.c: 34: LSb=PWMValue&0x03;
  1036  000AD2  0E03               	movlw	3
  1037  000AD4  1429               	andwf	_PWMValue,w,c
  1038  000AD6  6E23               	movwf	_LSb,c
  1039  000AD8  6A24               	clrf	_LSb+1,c
  1040                           
  1041                           ;PWM.c: 35: MSb=PWMValue>>2;
  1042  000ADA  C029  F0C4         	movff	_PWMValue,??_SetDutyCycle
  1043  000ADE  C02A  F0C5         	movff	_PWMValue+1,??_SetDutyCycle+1
  1044  000AE2  0100               	movlb	0	; () banked
  1045  000AE4  90D8               	bcf	status,0,c
  1046  000AE6  33C5               	rrcf	(??_SetDutyCycle+1)& (0+255),f,b
  1047  000AE8  33C4               	rrcf	??_SetDutyCycle& (0+255),f,b
  1048  000AEA  0100               	movlb	0	; () banked
  1049  000AEC  90D8               	bcf	status,0,c
  1050  000AEE  33C5               	rrcf	(??_SetDutyCycle+1)& (0+255),f,b
  1051  000AF0  33C4               	rrcf	??_SetDutyCycle& (0+255),f,b
  1052  000AF2  C0C4  F027         	movff	??_SetDutyCycle,_MSb
  1053  000AF6  C0C5  F028         	movff	??_SetDutyCycle+1,_MSb+1
  1054                           
  1055                           ; BSR set to: 0
  1056                           ;PWM.c: 37: CCPR2L=MSb;
  1057  000AFA  C027  FFBB         	movff	_MSb,4027	;volatile
  1058                           
  1059                           ; BSR set to: 0
  1060                           ;PWM.c: 38: CCP2CON=CCP2CON|(LSb<<4);
  1061  000AFE  3823               	swapf	_LSb,w,c
  1062  000B00  0BF0               	andlw	240
  1063  000B02  10BA               	iorwf	4026,w,c
  1064  000B04  6EBA               	movwf	4026,c	;volatile
  1065                           
  1066                           ; BSR set to: 0
  1067  000B06  0012               	return		;funcret
  1068  000B08                     __end_of_SetDutyCycle:
  1069                           	opt stack 0
  1070                           tblptru	equ	0xFF8
  1071                           tblptrh	equ	0xFF7
  1072                           tblptrl	equ	0xFF6
  1073                           tablat	equ	0xFF5
  1074                           intcon2	equ	0xFF1
  1075                           postinc0	equ	0xFEE
  1076                           wreg	equ	0xFE8
  1077                           postdec1	equ	0xFE5
  1078                           fsr1l	equ	0xFE1
  1079                           status	equ	0xFD8
  1080                           
  1081 ;; *************** function ___wmul *****************
  1082 ;; Defined at:
  1083 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1086 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  product         2    4[BANK0 ] unsigned int 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  2    0[BANK0 ] unsigned int 
  1091 ;; Registers used:
  1092 ;;		wreg, status,2, status,0, prodl, prodh
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1098 ;;      Params:         0       4       0       0       0       0       0       0       0
  1099 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1100 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1101 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1102 ;;Total ram usage:        6 bytes
  1103 ;; Hardware stack levels used:    1
  1104 ;; Hardware stack levels required when called:    5
  1105 ;; This function calls:
  1106 ;;		Nothing
  1107 ;; This function is called by:
  1108 ;;		_SetDutyCycle
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text6
  1113  000CB2                     __ptext6:
  1114                           	opt stack 0
  1115  000CB2                     ___wmul:
  1116                           	opt stack 22
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;incstack = 0
  1120  000CB2  0100               	movlb	0	; () banked
  1121  000CB4  51B6               	movf	___wmul@multiplier& (0+255),w,b
  1122  000CB6  0100               	movlb	0	; () banked
  1123  000CB8  03B8               	mulwf	___wmul@multiplicand& (0+255),b
  1124  000CBA  CFF3 F0BA          	movff	prodl,___wmul@product
  1125  000CBE  CFF4 F0BB          	movff	prodh,___wmul@product+1
  1126  000CC2  0100               	movlb	0	; () banked
  1127  000CC4  51B6               	movf	___wmul@multiplier& (0+255),w,b
  1128  000CC6  0100               	movlb	0	; () banked
  1129  000CC8  03B9               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1130  000CCA  50F3               	movf	prodl,w,c
  1131  000CCC  0100               	movlb	0	; () banked
  1132  000CCE  27BB               	addwf	(___wmul@product+1)& (0+255),f,b
  1133  000CD0  0100               	movlb	0	; () banked
  1134  000CD2  51B7               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1135  000CD4  0100               	movlb	0	; () banked
  1136  000CD6  03B8               	mulwf	___wmul@multiplicand& (0+255),b
  1137  000CD8  50F3               	movf	prodl,w,c
  1138  000CDA  0100               	movlb	0	; () banked
  1139  000CDC  27BB               	addwf	(___wmul@product+1)& (0+255),f,b
  1140                           
  1141                           ; BSR set to: 0
  1142  000CDE  C0BA  F0B6         	movff	___wmul@product,?___wmul
  1143  000CE2  C0BB  F0B7         	movff	___wmul@product+1,?___wmul+1
  1144  000CE6  0012               	return	
  1145  000CE8                     __end_of___wmul:
  1146                           	opt stack 0
  1147                           tblptru	equ	0xFF8
  1148                           tblptrh	equ	0xFF7
  1149                           tblptrl	equ	0xFF6
  1150                           tablat	equ	0xFF5
  1151                           prodh	equ	0xFF4
  1152                           prodl	equ	0xFF3
  1153                           intcon2	equ	0xFF1
  1154                           postinc0	equ	0xFEE
  1155                           wreg	equ	0xFE8
  1156                           postdec1	equ	0xFE5
  1157                           fsr1l	equ	0xFE1
  1158                           status	equ	0xFD8
  1159                           
  1160 ;; *************** function ___awdiv *****************
  1161 ;; Defined at:
  1162 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;  dividend        2    6[BANK0 ] int 
  1165 ;;  divisor         2    8[BANK0 ] int 
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;  quotient        2   12[BANK0 ] int 
  1168 ;;  sign            1   11[BANK0 ] unsigned char 
  1169 ;;  counter         1   10[BANK0 ] unsigned char 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  2    6[BANK0 ] int 
  1172 ;; Registers used:
  1173 ;;		wreg, status,2, status,0
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1179 ;;      Params:         0       4       0       0       0       0       0       0       0
  1180 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1182 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1183 ;;Total ram usage:        8 bytes
  1184 ;; Hardware stack levels used:    1
  1185 ;; Hardware stack levels required when called:    5
  1186 ;; This function calls:
  1187 ;;		Nothing
  1188 ;; This function is called by:
  1189 ;;		_SetDutyCycle
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text7
  1194  000958                     __ptext7:
  1195                           	opt stack 0
  1196  000958                     ___awdiv:
  1197                           	opt stack 22
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;incstack = 0
  1201  000958  0E00               	movlw	0
  1202  00095A  0100               	movlb	0	; () banked
  1203  00095C  6FC1               	movwf	___awdiv@sign& (0+255),b
  1204                           
  1205                           ; BSR set to: 0
  1206  00095E  0100               	movlb	0	; () banked
  1207  000960  AFBF               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1208  000962  D008               	goto	l1801
  1209                           
  1210                           ; BSR set to: 0
  1211  000964  0100               	movlb	0	; () banked
  1212  000966  6DBE               	negf	___awdiv@divisor& (0+255),b
  1213  000968  1FBF               	comf	(___awdiv@divisor+1)& (0+255),f,b
  1214  00096A  B0D8               	btfsc	status,0,c
  1215  00096C  2BBF               	incf	(___awdiv@divisor+1)& (0+255),f,b
  1216                           
  1217                           ; BSR set to: 0
  1218  00096E  0E01               	movlw	1
  1219  000970  0100               	movlb	0	; () banked
  1220  000972  6FC1               	movwf	___awdiv@sign& (0+255),b
  1221  000974                     l1801:
  1222                           
  1223                           ; BSR set to: 0
  1224  000974  0100               	movlb	0	; () banked
  1225  000976  AFBD               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  1226  000978  D008               	goto	l1807
  1227                           
  1228                           ; BSR set to: 0
  1229  00097A  0100               	movlb	0	; () banked
  1230  00097C  6DBC               	negf	___awdiv@dividend& (0+255),b
  1231  00097E  1FBD               	comf	(___awdiv@dividend+1)& (0+255),f,b
  1232  000980  B0D8               	btfsc	status,0,c
  1233  000982  2BBD               	incf	(___awdiv@dividend+1)& (0+255),f,b
  1234                           
  1235                           ; BSR set to: 0
  1236  000984  0E01               	movlw	1
  1237  000986  0100               	movlb	0	; () banked
  1238  000988  1BC1               	xorwf	___awdiv@sign& (0+255),f,b
  1239  00098A                     l1807:
  1240                           
  1241                           ; BSR set to: 0
  1242  00098A  0E00               	movlw	0
  1243  00098C  0100               	movlb	0	; () banked
  1244  00098E  6FC3               	movwf	(___awdiv@quotient+1)& (0+255),b
  1245  000990  0E00               	movlw	0
  1246  000992  6FC2               	movwf	___awdiv@quotient& (0+255),b
  1247                           
  1248                           ; BSR set to: 0
  1249  000994  0100               	movlb	0	; () banked
  1250  000996  51BE               	movf	___awdiv@divisor& (0+255),w,b
  1251  000998  0100               	movlb	0	; () banked
  1252  00099A  11BF               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  1253  00099C  B4D8               	btfsc	status,2,c
  1254  00099E  D02C               	goto	l1829
  1255                           
  1256                           ; BSR set to: 0
  1257  0009A0  0E01               	movlw	1
  1258  0009A2  0100               	movlb	0	; () banked
  1259  0009A4  6FC0               	movwf	___awdiv@counter& (0+255),b
  1260  0009A6  D006               	goto	l1815
  1261  0009A8                     l1813:
  1262                           
  1263                           ; BSR set to: 0
  1264  0009A8  0100               	movlb	0	; () banked
  1265  0009AA  90D8               	bcf	status,0,c
  1266  0009AC  37BE               	rlcf	___awdiv@divisor& (0+255),f,b
  1267  0009AE  37BF               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  1268  0009B0  0100               	movlb	0	; () banked
  1269  0009B2  2BC0               	incf	___awdiv@counter& (0+255),f,b
  1270  0009B4                     l1815:
  1271                           
  1272                           ; BSR set to: 0
  1273  0009B4  0100               	movlb	0	; () banked
  1274  0009B6  AFBF               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1275  0009B8  D7F7               	goto	l1813
  1276  0009BA                     l1817:
  1277                           
  1278                           ; BSR set to: 0
  1279  0009BA  0100               	movlb	0	; () banked
  1280  0009BC  90D8               	bcf	status,0,c
  1281  0009BE  37C2               	rlcf	___awdiv@quotient& (0+255),f,b
  1282  0009C0  37C3               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  1283                           
  1284                           ; BSR set to: 0
  1285  0009C2  0100               	movlb	0	; () banked
  1286  0009C4  51BE               	movf	___awdiv@divisor& (0+255),w,b
  1287  0009C6  0100               	movlb	0	; () banked
  1288  0009C8  5DBC               	subwf	___awdiv@dividend& (0+255),w,b
  1289  0009CA  0100               	movlb	0	; () banked
  1290  0009CC  51BF               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1291  0009CE  0100               	movlb	0	; () banked
  1292  0009D0  59BD               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  1293  0009D2  A0D8               	btfss	status,0,c
  1294  0009D4  D00A               	goto	l1825
  1295                           
  1296                           ; BSR set to: 0
  1297  0009D6  0100               	movlb	0	; () banked
  1298  0009D8  51BE               	movf	___awdiv@divisor& (0+255),w,b
  1299  0009DA  0100               	movlb	0	; () banked
  1300  0009DC  5FBC               	subwf	___awdiv@dividend& (0+255),f,b
  1301  0009DE  0100               	movlb	0	; () banked
  1302  0009E0  51BF               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1303  0009E2  0100               	movlb	0	; () banked
  1304  0009E4  5BBD               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  1305                           
  1306                           ; BSR set to: 0
  1307  0009E6  0100               	movlb	0	; () banked
  1308  0009E8  81C2               	bsf	___awdiv@quotient& (0+255),0,b
  1309  0009EA                     l1825:
  1310                           
  1311                           ; BSR set to: 0
  1312  0009EA  0100               	movlb	0	; () banked
  1313  0009EC  90D8               	bcf	status,0,c
  1314  0009EE  33BF               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  1315  0009F0  33BE               	rrcf	___awdiv@divisor& (0+255),f,b
  1316                           
  1317                           ; BSR set to: 0
  1318  0009F2  0100               	movlb	0	; () banked
  1319  0009F4  2FC0               	decfsz	___awdiv@counter& (0+255),f,b
  1320  0009F6  D7E1               	goto	l1817
  1321  0009F8                     l1829:
  1322                           
  1323                           ; BSR set to: 0
  1324  0009F8  0100               	movlb	0	; () banked
  1325  0009FA  51C1               	movf	___awdiv@sign& (0+255),w,b
  1326  0009FC  0100               	movlb	0	; () banked
  1327  0009FE  B4D8               	btfsc	status,2,c
  1328  000A00  D005               	goto	l1833
  1329                           
  1330                           ; BSR set to: 0
  1331  000A02  0100               	movlb	0	; () banked
  1332  000A04  6DC2               	negf	___awdiv@quotient& (0+255),b
  1333  000A06  1FC3               	comf	(___awdiv@quotient+1)& (0+255),f,b
  1334  000A08  B0D8               	btfsc	status,0,c
  1335  000A0A  2BC3               	incf	(___awdiv@quotient+1)& (0+255),f,b
  1336  000A0C                     l1833:
  1337                           
  1338                           ; BSR set to: 0
  1339  000A0C  C0C2  F0BC         	movff	___awdiv@quotient,?___awdiv
  1340  000A10  C0C3  F0BD         	movff	___awdiv@quotient+1,?___awdiv+1
  1341  000A14  0012               	return	
  1342  000A16                     __end_of___awdiv:
  1343                           	opt stack 0
  1344                           tblptru	equ	0xFF8
  1345                           tblptrh	equ	0xFF7
  1346                           tblptrl	equ	0xFF6
  1347                           tablat	equ	0xFF5
  1348                           prodh	equ	0xFF4
  1349                           prodl	equ	0xFF3
  1350                           intcon2	equ	0xFF1
  1351                           postinc0	equ	0xFEE
  1352                           wreg	equ	0xFE8
  1353                           postdec1	equ	0xFE5
  1354                           fsr1l	equ	0xFE1
  1355                           status	equ	0xFD8
  1356                           
  1357 ;; *************** function _TurnOffLights *****************
  1358 ;; Defined at:
  1359 ;;		line 3 in file "LedDriver.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;		None
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;		None
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  2   16[None  ] int 
  1366 ;; Registers used:
  1367 ;;		wreg, status,2, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1373 ;;      Params:         0       0       0       0       0       0       0       0       0
  1374 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1375 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1376 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1377 ;;Total ram usage:        0 bytes
  1378 ;; Hardware stack levels used:    1
  1379 ;; Hardware stack levels required when called:    6
  1380 ;; This function calls:
  1381 ;;		_StopPWM
  1382 ;; This function is called by:
  1383 ;;		_main
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text8
  1388  000ED0                     __ptext8:
  1389                           	opt stack 0
  1390  000ED0                     _TurnOffLights:
  1391                           	opt stack 24
  1392                           
  1393                           ;LedDriver.c: 4: StopPWM();
  1394                           
  1395                           ; BSR set to: 0
  1396                           ;incstack = 0
  1397  000ED0  EC33  F007         	call	_StopPWM	;wreg free
  1398  000ED4  0012               	return		;funcret
  1399  000ED6                     __end_of_TurnOffLights:
  1400                           	opt stack 0
  1401                           tblptru	equ	0xFF8
  1402                           tblptrh	equ	0xFF7
  1403                           tblptrl	equ	0xFF6
  1404                           tablat	equ	0xFF5
  1405                           prodh	equ	0xFF4
  1406                           prodl	equ	0xFF3
  1407                           intcon2	equ	0xFF1
  1408                           postinc0	equ	0xFEE
  1409                           wreg	equ	0xFE8
  1410                           postdec1	equ	0xFE5
  1411                           fsr1l	equ	0xFE1
  1412                           status	equ	0xFD8
  1413                           
  1414 ;; *************** function _StopPWM *****************
  1415 ;; Defined at:
  1416 ;;		line 21 in file "PWM.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;		None
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;		None
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		wreg, status,2
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1430 ;;      Params:         0       0       0       0       0       0       0       0       0
  1431 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1432 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1433 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1434 ;;Total ram usage:        0 bytes
  1435 ;; Hardware stack levels used:    1
  1436 ;; Hardware stack levels required when called:    5
  1437 ;; This function calls:
  1438 ;;		Nothing
  1439 ;; This function is called by:
  1440 ;;		_TurnOffLights
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           	psect	text9
  1445  000E66                     __ptext9:
  1446                           	opt stack 0
  1447  000E66                     _StopPWM:
  1448                           	opt stack 24
  1449                           
  1450                           ;PWM.c: 22: CCP2CON=0x00;
  1451                           
  1452                           ;incstack = 0
  1453  000E66  0E00               	movlw	0
  1454  000E68  6EBA               	movwf	4026,c	;volatile
  1455                           
  1456                           ;PWM.c: 23: T1OSCEN=0U;
  1457  000E6A  96CD               	bcf	4045,3,c	;volatile
  1458                           
  1459                           ;PWM.c: 24: (LATB3=0U);
  1460  000E6C  968A               	bcf	3978,3,c	;volatile
  1461  000E6E  0012               	return		;funcret
  1462  000E70                     __end_of_StopPWM:
  1463                           	opt stack 0
  1464                           tblptru	equ	0xFF8
  1465                           tblptrh	equ	0xFF7
  1466                           tblptrl	equ	0xFF6
  1467                           tablat	equ	0xFF5
  1468                           prodh	equ	0xFF4
  1469                           prodl	equ	0xFF3
  1470                           intcon2	equ	0xFF1
  1471                           postinc0	equ	0xFEE
  1472                           wreg	equ	0xFE8
  1473                           postdec1	equ	0xFE5
  1474                           fsr1l	equ	0xFE1
  1475                           status	equ	0xFD8
  1476                           
  1477 ;; *************** function _TMR0_WRITE_LOW *****************
  1478 ;; Defined at:
  1479 ;;		line 79 in file "Timer_0.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;  valorLow        1    wreg     unsigned char 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;  valorLow        1    0[BANK0 ] unsigned char 
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      void 
  1486 ;; Registers used:
  1487 ;;		wreg
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1493 ;;      Params:         0       0       0       0       0       0       0       0       0
  1494 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1495 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1496 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1497 ;;Total ram usage:        1 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; Hardware stack levels required when called:    5
  1500 ;; This function calls:
  1501 ;;		Nothing
  1502 ;; This function is called by:
  1503 ;;		_main
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           	psect	text10
  1508  000E70                     __ptext10:
  1509                           	opt stack 0
  1510  000E70                     _TMR0_WRITE_LOW:
  1511                           	opt stack 25
  1512                           
  1513                           ;incstack = 0
  1514                           ;TMR0_WRITE_LOW@valorLow stored from wreg
  1515  000E70  0100               	movlb	0	; () banked
  1516  000E72  6FB6               	movwf	TMR0_WRITE_LOW@valorLow& (0+255),b
  1517                           
  1518                           ;Timer_0.c: 81: TMR0L=valorLow;
  1519  000E74  C0B6  FFD6         	movff	TMR0_WRITE_LOW@valorLow,4054	;volatile
  1520  000E78  0012               	return		;funcret
  1521  000E7A                     __end_of_TMR0_WRITE_LOW:
  1522                           	opt stack 0
  1523                           tblptru	equ	0xFF8
  1524                           tblptrh	equ	0xFF7
  1525                           tblptrl	equ	0xFF6
  1526                           tablat	equ	0xFF5
  1527                           prodh	equ	0xFF4
  1528                           prodl	equ	0xFF3
  1529                           intcon2	equ	0xFF1
  1530                           postinc0	equ	0xFEE
  1531                           wreg	equ	0xFE8
  1532                           postdec1	equ	0xFE5
  1533                           fsr1l	equ	0xFE1
  1534                           status	equ	0xFD8
  1535                           
  1536 ;; *************** function _TMR0_WRITE_HIGH *****************
  1537 ;; Defined at:
  1538 ;;		line 66 in file "Timer_0.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;  valorHigh       1    wreg     unsigned char 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  valorHigh       1    0[BANK0 ] unsigned char 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1552 ;;      Params:         0       0       0       0       0       0       0       0       0
  1553 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1555 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1556 ;;Total ram usage:        1 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:    5
  1559 ;; This function calls:
  1560 ;;		Nothing
  1561 ;; This function is called by:
  1562 ;;		_main
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text11
  1567  000E7A                     __ptext11:
  1568                           	opt stack 0
  1569  000E7A                     _TMR0_WRITE_HIGH:
  1570                           	opt stack 25
  1571                           
  1572                           ;incstack = 0
  1573                           ;TMR0_WRITE_HIGH@valorHigh stored from wreg
  1574  000E7A  0100               	movlb	0	; () banked
  1575  000E7C  6FB6               	movwf	TMR0_WRITE_HIGH@valorHigh& (0+255),b
  1576                           
  1577                           ;Timer_0.c: 68: TMR0H=valorHigh;
  1578  000E7E  C0B6  FFD7         	movff	TMR0_WRITE_HIGH@valorHigh,4055	;volatile
  1579  000E82  0012               	return		;funcret
  1580  000E84                     __end_of_TMR0_WRITE_HIGH:
  1581                           	opt stack 0
  1582                           tblptru	equ	0xFF8
  1583                           tblptrh	equ	0xFF7
  1584                           tblptrl	equ	0xFF6
  1585                           tablat	equ	0xFF5
  1586                           prodh	equ	0xFF4
  1587                           prodl	equ	0xFF3
  1588                           intcon2	equ	0xFF1
  1589                           postinc0	equ	0xFEE
  1590                           wreg	equ	0xFE8
  1591                           postdec1	equ	0xFE5
  1592                           fsr1l	equ	0xFE1
  1593                           status	equ	0xFD8
  1594                           
  1595 ;; *************** function _TMR0_INIT *****************
  1596 ;; Defined at:
  1597 ;;		line 23 in file "Timer_0.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  T0PS            1    1[BANK0 ] unsigned char 
  1602 ;;  bits            1    0[BANK0 ] unsigned char 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      void 
  1605 ;; Registers used:
  1606 ;;		wreg, status,2, status,0, prodl, prodh
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1612 ;;      Params:         0       0       0       0       0       0       0       0       0
  1613 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1614 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1615 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1616 ;;Total ram usage:        2 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; Hardware stack levels required when called:    5
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_main
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text12
  1627  000D1C                     __ptext12:
  1628                           	opt stack 0
  1629  000D1C                     _TMR0_INIT:
  1630                           	opt stack 25
  1631                           
  1632                           ;Timer_0.c: 33: else {T0PS=7;}
  1633                           
  1634                           ; BSR set to: 0
  1635                           
  1636                           ; BSR set to: 0
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;Timer_0.c: 32: else if (256 == 128){T0PS=6;}
  1640                           
  1641                           ; BSR set to: 0
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;Timer_0.c: 31: else if (256 == 64){T0PS=5;}
  1645                           
  1646                           ; BSR set to: 0
  1647                           
  1648                           ; BSR set to: 0
  1649                           ;Timer_0.c: 30: else if (256 == 32){T0PS=4;}
  1650                           
  1651                           ; BSR set to: 0
  1652                           
  1653                           ; BSR set to: 0
  1654                           ;Timer_0.c: 29: else if (256 == 16){T0PS=3;}
  1655                           
  1656                           ; BSR set to: 0
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;Timer_0.c: 28: else if (256 == 8){T0PS=2;}
  1660                           
  1661                           ; BSR set to: 0
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;Timer_0.c: 27: else if (256 == 4){T0PS=1;}
  1665                           
  1666                           ;Timer_0.c: 25: u8 T0PS;
  1667                           ;Timer_0.c: 26: if (256 == 2){T0PS=0;}
  1668                           
  1669                           ;incstack = 0
  1670  000D1C  0E07               	movlw	7
  1671  000D1E  0100               	movlb	0	; () banked
  1672  000D20  6FB7               	movwf	TMR0_INIT@T0PS& (0+255),b
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;Timer_0.c: 37: else {bits=0;}
  1676                           
  1677                           ; BSR set to: 0
  1678                           
  1679                           ; BSR set to: 0
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;Timer_0.c: 35: u8 bits;
  1683                           ;Timer_0.c: 36: if (16==8){bits=1;}
  1684                           
  1685                           ; BSR set to: 0
  1686                           
  1687                           ; BSR set to: 0
  1688                           
  1689                           ; BSR set to: 0
  1690                           
  1691                           ; BSR set to: 0
  1692                           
  1693                           ; BSR set to: 0
  1694                           
  1695                           ; BSR set to: 0
  1696  000D22  0E00               	movlw	0
  1697  000D24  0100               	movlb	0	; () banked
  1698  000D26  6FB6               	movwf	TMR0_INIT@bits& (0+255),b
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;Timer_0.c: 39: T0CON=(1*128)+(bits*64)+(0*32)+(0*16)+(0*8)+T0PS;
  1702                           
  1703                           ; BSR set to: 0
  1704  000D28  0100               	movlb	0	; () banked
  1705  000D2A  51B6               	movf	TMR0_INIT@bits& (0+255),w,b
  1706  000D2C  0D40               	mullw	64
  1707  000D2E  50F3               	movf	prodl,w,c
  1708  000D30  0100               	movlb	0	; () banked
  1709  000D32  25B7               	addwf	TMR0_INIT@T0PS& (0+255),w,b
  1710  000D34  0F80               	addlw	128
  1711  000D36  6ED5               	movwf	4053,c	;volatile
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;Timer_0.c: 41: TMR0=0x15;
  1715  000D38  0E00               	movlw	0
  1716  000D3A  6ED7               	movwf	4055,c	;volatile
  1717  000D3C  0E15               	movlw	21
  1718  000D3E  6ED6               	movwf	4054,c	;volatile
  1719                           
  1720                           ; BSR set to: 0
  1721                           ;Timer_0.c: 42: T0IF=0;
  1722  000D40  94F2               	bcf	intcon,2,c	;volatile
  1723                           
  1724                           ; BSR set to: 0
  1725  000D42  0012               	return		;funcret
  1726  000D44                     __end_of_TMR0_INIT:
  1727                           	opt stack 0
  1728                           tblptru	equ	0xFF8
  1729                           tblptrh	equ	0xFF7
  1730                           tblptrl	equ	0xFF6
  1731                           tablat	equ	0xFF5
  1732                           prodh	equ	0xFF4
  1733                           prodl	equ	0xFF3
  1734                           intcon	equ	0xFF2
  1735                           intcon2	equ	0xFF1
  1736                           postinc0	equ	0xFEE
  1737                           wreg	equ	0xFE8
  1738                           postdec1	equ	0xFE5
  1739                           fsr1l	equ	0xFE1
  1740                           status	equ	0xFD8
  1741                           
  1742 ;; *************** function _Interrupt_Init *****************
  1743 ;; Defined at:
  1744 ;;		line 94 in file "Interrupts.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;		None
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;		None
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1758 ;;      Params:         0       0       0       0       0       0       0       0       0
  1759 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1760 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1761 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1762 ;;Total ram usage:        0 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    6
  1765 ;; This function calls:
  1766 ;;		_INIT_INTCON
  1767 ;;		_INIT_INTCON2
  1768 ;;		_INIT_INTCON3
  1769 ;;		_INIT_IPR1
  1770 ;;		_INIT_IPR2
  1771 ;;		_INIT_PIE1
  1772 ;;		_INIT_PIE2
  1773 ;;		_INIT_RCON
  1774 ;; This function is called by:
  1775 ;;		_main
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           	psect	text13
  1780  000D6A                     __ptext13:
  1781                           	opt stack 0
  1782  000D6A                     _Interrupt_Init:
  1783                           	opt stack 24
  1784                           
  1785                           ;Interrupts.c: 95: INIT_RCON();
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;incstack = 0
  1789  000D6A  EC71  F007         	call	_INIT_RCON	;wreg free
  1790                           
  1791                           ;Interrupts.c: 96: INIT_INTCON();
  1792  000D6E  EC1C  F007         	call	_INIT_INTCON	;wreg free
  1793                           
  1794                           ;Interrupts.c: 97: INIT_INTCON2();
  1795  000D72  EC0F  F007         	call	_INIT_INTCON2	;wreg free
  1796                           
  1797                           ;Interrupts.c: 98: INIT_INTCON3();
  1798  000D76  EC42  F007         	call	_INIT_INTCON3	;wreg free
  1799                           
  1800                           ;Interrupts.c: 99: INIT_PIE1();
  1801  000D7A  ECF1  F006         	call	_INIT_PIE1	;wreg free
  1802                           
  1803                           ;Interrupts.c: 100: INIT_PIE2();
  1804  000D7E  EC01  F007         	call	_INIT_PIE2	;wreg free
  1805                           
  1806                           ;Interrupts.c: 101: INIT_IPR1();
  1807  000D82  ECF9  F006         	call	_INIT_IPR1	;wreg free
  1808                           
  1809                           ;Interrupts.c: 102: INIT_IPR2();
  1810  000D86  EC08  F007         	call	_INIT_IPR2	;wreg free
  1811  000D8A  0012               	return		;funcret
  1812  000D8C                     __end_of_Interrupt_Init:
  1813                           	opt stack 0
  1814                           tblptru	equ	0xFF8
  1815                           tblptrh	equ	0xFF7
  1816                           tblptrl	equ	0xFF6
  1817                           tablat	equ	0xFF5
  1818                           prodh	equ	0xFF4
  1819                           prodl	equ	0xFF3
  1820                           intcon	equ	0xFF2
  1821                           intcon2	equ	0xFF1
  1822                           postinc0	equ	0xFEE
  1823                           wreg	equ	0xFE8
  1824                           postdec1	equ	0xFE5
  1825                           fsr1l	equ	0xFE1
  1826                           status	equ	0xFD8
  1827                           
  1828 ;; *************** function _INIT_RCON *****************
  1829 ;; Defined at:
  1830 ;;		line 47 in file "Interrupts.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;		None
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;		None
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		None
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1844 ;;      Params:         0       0       0       0       0       0       0       0       0
  1845 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1847 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1848 ;;Total ram usage:        0 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    5
  1851 ;; This function calls:
  1852 ;;		Nothing
  1853 ;; This function is called by:
  1854 ;;		_Interrupt_Init
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text14
  1859  000EE2                     __ptext14:
  1860                           	opt stack 0
  1861  000EE2                     _INIT_RCON:
  1862                           	opt stack 24
  1863                           
  1864                           ;Interrupts.c: 49: RCONbits.IPEN = 1U;
  1865                           
  1866                           ;incstack = 0
  1867  000EE2  8ED0               	bsf	4048,7,c	;volatile
  1868  000EE4  0012               	return		;funcret
  1869  000EE6                     __end_of_INIT_RCON:
  1870                           	opt stack 0
  1871                           tblptru	equ	0xFF8
  1872                           tblptrh	equ	0xFF7
  1873                           tblptrl	equ	0xFF6
  1874                           tablat	equ	0xFF5
  1875                           prodh	equ	0xFF4
  1876                           prodl	equ	0xFF3
  1877                           intcon	equ	0xFF2
  1878                           intcon2	equ	0xFF1
  1879                           postinc0	equ	0xFEE
  1880                           wreg	equ	0xFE8
  1881                           postdec1	equ	0xFE5
  1882                           fsr1l	equ	0xFE1
  1883                           status	equ	0xFD8
  1884                           
  1885 ;; *************** function _INIT_PIE2 *****************
  1886 ;; Defined at:
  1887 ;;		line 63 in file "Interrupts.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;		None
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;		None
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		None
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1901 ;;      Params:         0       0       0       0       0       0       0       0       0
  1902 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1903 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1904 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1905 ;;Total ram usage:        0 bytes
  1906 ;; Hardware stack levels used:    1
  1907 ;; Hardware stack levels required when called:    5
  1908 ;; This function calls:
  1909 ;;		Nothing
  1910 ;; This function is called by:
  1911 ;;		_Interrupt_Init
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           	psect	text15
  1916  000E02                     __ptext15:
  1917                           	opt stack 0
  1918  000E02                     _INIT_PIE2:
  1919                           	opt stack 24
  1920                           
  1921                           ;Interrupts.c: 65: PIE2bits.OSCFIE=0U;
  1922                           
  1923                           ;incstack = 0
  1924  000E02  9EA0               	bcf	4000,7,c	;volatile
  1925                           
  1926                           ;Interrupts.c: 66: PIE2bits.CMIE=0U;
  1927  000E04  9CA0               	bcf	4000,6,c	;volatile
  1928                           
  1929                           ;Interrupts.c: 67: PIE2bits.EEIE=0U;
  1930  000E06  98A0               	bcf	4000,4,c	;volatile
  1931                           
  1932                           ;Interrupts.c: 68: PIE2bits.HLVDIE=0U;
  1933  000E08  94A0               	bcf	4000,2,c	;volatile
  1934                           
  1935                           ;Interrupts.c: 69: PIE2bits.BCLIE=0U;
  1936  000E0A  96A0               	bcf	4000,3,c	;volatile
  1937                           
  1938                           ;Interrupts.c: 70: PIE2bits.TMR3IE=0U;
  1939  000E0C  92A0               	bcf	4000,1,c	;volatile
  1940  000E0E  0012               	return		;funcret
  1941  000E10                     __end_of_INIT_PIE2:
  1942                           	opt stack 0
  1943                           tblptru	equ	0xFF8
  1944                           tblptrh	equ	0xFF7
  1945                           tblptrl	equ	0xFF6
  1946                           tablat	equ	0xFF5
  1947                           prodh	equ	0xFF4
  1948                           prodl	equ	0xFF3
  1949                           intcon	equ	0xFF2
  1950                           intcon2	equ	0xFF1
  1951                           postinc0	equ	0xFEE
  1952                           wreg	equ	0xFE8
  1953                           postdec1	equ	0xFE5
  1954                           fsr1l	equ	0xFE1
  1955                           status	equ	0xFD8
  1956                           
  1957 ;; *************** function _INIT_PIE1 *****************
  1958 ;; Defined at:
  1959 ;;		line 52 in file "Interrupts.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;		None
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;		None
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		None
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1973 ;;      Params:         0       0       0       0       0       0       0       0       0
  1974 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1975 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1976 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1977 ;;Total ram usage:        0 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; Hardware stack levels required when called:    5
  1980 ;; This function calls:
  1981 ;;		Nothing
  1982 ;; This function is called by:
  1983 ;;		_Interrupt_Init
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text16
  1988  000DE2                     __ptext16:
  1989                           	opt stack 0
  1990  000DE2                     _INIT_PIE1:
  1991                           	opt stack 24
  1992                           
  1993                           ;Interrupts.c: 54: PIE1bits.ADIE = 1U;
  1994                           
  1995                           ;incstack = 0
  1996  000DE2  8C9D               	bsf	3997,6,c	;volatile
  1997                           
  1998                           ;Interrupts.c: 55: PIE1bits.RCIE = 0U;
  1999  000DE4  9A9D               	bcf	3997,5,c	;volatile
  2000                           
  2001                           ;Interrupts.c: 56: PIE1bits.TXIE = 0U;
  2002  000DE6  989D               	bcf	3997,4,c	;volatile
  2003                           
  2004                           ;Interrupts.c: 57: PIE1bits.SSPIE = 0U;
  2005  000DE8  969D               	bcf	3997,3,c	;volatile
  2006                           
  2007                           ;Interrupts.c: 58: PIE1bits.CCP1IE = 0U;
  2008  000DEA  949D               	bcf	3997,2,c	;volatile
  2009                           
  2010                           ;Interrupts.c: 59: PIE1bits.TMR2IE = 0U;
  2011  000DEC  929D               	bcf	3997,1,c	;volatile
  2012                           
  2013                           ;Interrupts.c: 60: PIE1bits.TMR1IE = 0U;
  2014  000DEE  909D               	bcf	3997,0,c	;volatile
  2015  000DF0  0012               	return		;funcret
  2016  000DF2                     __end_of_INIT_PIE1:
  2017                           	opt stack 0
  2018                           tblptru	equ	0xFF8
  2019                           tblptrh	equ	0xFF7
  2020                           tblptrl	equ	0xFF6
  2021                           tablat	equ	0xFF5
  2022                           prodh	equ	0xFF4
  2023                           prodl	equ	0xFF3
  2024                           intcon	equ	0xFF2
  2025                           intcon2	equ	0xFF1
  2026                           postinc0	equ	0xFEE
  2027                           wreg	equ	0xFE8
  2028                           postdec1	equ	0xFE5
  2029                           fsr1l	equ	0xFE1
  2030                           status	equ	0xFD8
  2031                           
  2032 ;; *************** function _INIT_IPR2 *****************
  2033 ;; Defined at:
  2034 ;;		line 84 in file "Interrupts.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;		None
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;		None
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      void 
  2041 ;; Registers used:
  2042 ;;		None
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2048 ;;      Params:         0       0       0       0       0       0       0       0       0
  2049 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2050 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2051 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2052 ;;Total ram usage:        0 bytes
  2053 ;; Hardware stack levels used:    1
  2054 ;; Hardware stack levels required when called:    5
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_Interrupt_Init
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text17
  2063  000E10                     __ptext17:
  2064                           	opt stack 0
  2065  000E10                     _INIT_IPR2:
  2066                           	opt stack 24
  2067                           
  2068                           ;Interrupts.c: 85: IPR2bits.OSCFIP=0U;
  2069                           
  2070                           ;incstack = 0
  2071  000E10  9EA2               	bcf	4002,7,c	;volatile
  2072                           
  2073                           ;Interrupts.c: 86: IPR2bits.CMIP=0U;
  2074  000E12  9CA2               	bcf	4002,6,c	;volatile
  2075                           
  2076                           ;Interrupts.c: 87: IPR2bits.EEIP=0U;
  2077  000E14  98A2               	bcf	4002,4,c	;volatile
  2078                           
  2079                           ;Interrupts.c: 88: IPR2bits.HLVDIP=0U;
  2080  000E16  94A2               	bcf	4002,2,c	;volatile
  2081                           
  2082                           ;Interrupts.c: 89: IPR2bits.BCLIP=0U;
  2083  000E18  96A2               	bcf	4002,3,c	;volatile
  2084                           
  2085                           ;Interrupts.c: 90: IPR2bits.TMR3IP=0U;
  2086  000E1A  92A2               	bcf	4002,1,c	;volatile
  2087  000E1C  0012               	return		;funcret
  2088  000E1E                     __end_of_INIT_IPR2:
  2089                           	opt stack 0
  2090                           tblptru	equ	0xFF8
  2091                           tblptrh	equ	0xFF7
  2092                           tblptrl	equ	0xFF6
  2093                           tablat	equ	0xFF5
  2094                           prodh	equ	0xFF4
  2095                           prodl	equ	0xFF3
  2096                           intcon	equ	0xFF2
  2097                           intcon2	equ	0xFF1
  2098                           postinc0	equ	0xFEE
  2099                           wreg	equ	0xFE8
  2100                           postdec1	equ	0xFE5
  2101                           fsr1l	equ	0xFE1
  2102                           status	equ	0xFD8
  2103                           
  2104 ;; *************** function _INIT_IPR1 *****************
  2105 ;; Defined at:
  2106 ;;		line 74 in file "Interrupts.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;		None
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;		None
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		None
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2120 ;;      Params:         0       0       0       0       0       0       0       0       0
  2121 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2123 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2124 ;;Total ram usage:        0 bytes
  2125 ;; Hardware stack levels used:    1
  2126 ;; Hardware stack levels required when called:    5
  2127 ;; This function calls:
  2128 ;;		Nothing
  2129 ;; This function is called by:
  2130 ;;		_Interrupt_Init
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text18
  2135  000DF2                     __ptext18:
  2136                           	opt stack 0
  2137  000DF2                     _INIT_IPR1:
  2138                           	opt stack 24
  2139                           
  2140                           ;Interrupts.c: 75: IPR1bits.ADIP=1U;
  2141                           
  2142                           ;incstack = 0
  2143  000DF2  8C9F               	bsf	3999,6,c	;volatile
  2144                           
  2145                           ;Interrupts.c: 76: IPR1bits.RCIP=0U;
  2146  000DF4  9A9F               	bcf	3999,5,c	;volatile
  2147                           
  2148                           ;Interrupts.c: 77: IPR1bits.TXIP=0U;
  2149  000DF6  989F               	bcf	3999,4,c	;volatile
  2150                           
  2151                           ;Interrupts.c: 78: IPR1bits.SSPIP=0U;
  2152  000DF8  969F               	bcf	3999,3,c	;volatile
  2153                           
  2154                           ;Interrupts.c: 79: IPR1bits.CCP1IP=1U;
  2155  000DFA  849F               	bsf	3999,2,c	;volatile
  2156                           
  2157                           ;Interrupts.c: 80: IPR1bits.TMR2IP=0U;
  2158  000DFC  929F               	bcf	3999,1,c	;volatile
  2159                           
  2160                           ;Interrupts.c: 81: IPR1bits.TMR1IP=0U;
  2161  000DFE  909F               	bcf	3999,0,c	;volatile
  2162  000E00  0012               	return		;funcret
  2163  000E02                     __end_of_INIT_IPR1:
  2164                           	opt stack 0
  2165                           tblptru	equ	0xFF8
  2166                           tblptrh	equ	0xFF7
  2167                           tblptrl	equ	0xFF6
  2168                           tablat	equ	0xFF5
  2169                           prodh	equ	0xFF4
  2170                           prodl	equ	0xFF3
  2171                           intcon	equ	0xFF2
  2172                           intcon2	equ	0xFF1
  2173                           postinc0	equ	0xFEE
  2174                           wreg	equ	0xFE8
  2175                           postdec1	equ	0xFE5
  2176                           fsr1l	equ	0xFE1
  2177                           status	equ	0xFD8
  2178                           
  2179 ;; *************** function _INIT_INTCON3 *****************
  2180 ;; Defined at:
  2181 ;;		line 39 in file "Interrupts.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;		None
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;		None
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      void 
  2188 ;; Registers used:
  2189 ;;		None
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2195 ;;      Params:         0       0       0       0       0       0       0       0       0
  2196 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2197 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2198 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2199 ;;Total ram usage:        0 bytes
  2200 ;; Hardware stack levels used:    1
  2201 ;; Hardware stack levels required when called:    5
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_Interrupt_Init
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text19
  2210  000E84                     __ptext19:
  2211                           	opt stack 0
  2212  000E84                     _INIT_INTCON3:
  2213                           	opt stack 24
  2214                           
  2215                           ;Interrupts.c: 40: INTCON3bits.INT2IP=1U;
  2216                           
  2217                           ;incstack = 0
  2218  000E84  8EF0               	bsf	intcon3,7,c	;volatile
  2219                           
  2220                           ;Interrupts.c: 41: INTCON3bits.INT1IP=0U;
  2221  000E86  9CF0               	bcf	intcon3,6,c	;volatile
  2222                           
  2223                           ;Interrupts.c: 43: INTCON3bits.INT2IE=1U;
  2224  000E88  88F0               	bsf	intcon3,4,c	;volatile
  2225                           
  2226                           ;Interrupts.c: 44: INTCON3bits.INT1IE=0U;
  2227  000E8A  96F0               	bcf	intcon3,3,c	;volatile
  2228  000E8C  0012               	return		;funcret
  2229  000E8E                     __end_of_INIT_INTCON3:
  2230                           	opt stack 0
  2231                           tblptru	equ	0xFF8
  2232                           tblptrh	equ	0xFF7
  2233                           tblptrl	equ	0xFF6
  2234                           tablat	equ	0xFF5
  2235                           prodh	equ	0xFF4
  2236                           prodl	equ	0xFF3
  2237                           intcon	equ	0xFF2
  2238                           intcon2	equ	0xFF1
  2239                           intcon3	equ	0xFF0
  2240                           postinc0	equ	0xFEE
  2241                           wreg	equ	0xFE8
  2242                           postdec1	equ	0xFE5
  2243                           fsr1l	equ	0xFE1
  2244                           status	equ	0xFD8
  2245                           
  2246 ;; *************** function _INIT_INTCON2 *****************
  2247 ;; Defined at:
  2248 ;;		line 28 in file "Interrupts.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;		None
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;		None
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      void 
  2255 ;; Registers used:
  2256 ;;		None
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2262 ;;      Params:         0       0       0       0       0       0       0       0       0
  2263 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2264 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2265 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2266 ;;Total ram usage:        0 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    5
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_Interrupt_Init
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text20
  2277  000E1E                     __ptext20:
  2278                           	opt stack 0
  2279  000E1E                     _INIT_INTCON2:
  2280                           	opt stack 24
  2281                           
  2282                           ;Interrupts.c: 29: INTCON2bits.nRBPU=0U;
  2283                           
  2284                           ;incstack = 0
  2285  000E1E  9EF1               	bcf	intcon2,7,c	;volatile
  2286                           
  2287                           ;Interrupts.c: 30: INTCON2bits.INTEDG0=0U;
  2288  000E20  9CF1               	bcf	intcon2,6,c	;volatile
  2289                           
  2290                           ;Interrupts.c: 31: INTCON2bits.INTEDG1=0U;
  2291  000E22  9AF1               	bcf	intcon2,5,c	;volatile
  2292                           
  2293                           ;Interrupts.c: 32: INTCON2bits.INTEDG2=1U;
  2294  000E24  88F1               	bsf	intcon2,4,c	;volatile
  2295                           
  2296                           ;Interrupts.c: 34: INTCON2bits.T0IP=1U;
  2297  000E26  84F1               	bsf	intcon2,2,c	;volatile
  2298                           
  2299                           ;Interrupts.c: 36: INTCON2bits.RBIP=0U;
  2300  000E28  90F1               	bcf	intcon2,0,c	;volatile
  2301  000E2A  0012               	return		;funcret
  2302  000E2C                     __end_of_INIT_INTCON2:
  2303                           	opt stack 0
  2304                           tblptru	equ	0xFF8
  2305                           tblptrh	equ	0xFF7
  2306                           tblptrl	equ	0xFF6
  2307                           tablat	equ	0xFF5
  2308                           prodh	equ	0xFF4
  2309                           prodl	equ	0xFF3
  2310                           intcon	equ	0xFF2
  2311                           intcon2	equ	0xFF1
  2312                           intcon3	equ	0xFF0
  2313                           postinc0	equ	0xFEE
  2314                           wreg	equ	0xFE8
  2315                           postdec1	equ	0xFE5
  2316                           fsr1l	equ	0xFE1
  2317                           status	equ	0xFD8
  2318                           
  2319 ;; *************** function _INIT_INTCON *****************
  2320 ;; Defined at:
  2321 ;;		line 11 in file "Interrupts.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;		None
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;		None
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      void 
  2328 ;; Registers used:
  2329 ;;		None
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2335 ;;      Params:         0       0       0       0       0       0       0       0       0
  2336 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2337 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2338 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2339 ;;Total ram usage:        0 bytes
  2340 ;; Hardware stack levels used:    1
  2341 ;; Hardware stack levels required when called:    5
  2342 ;; This function calls:
  2343 ;;		Nothing
  2344 ;; This function is called by:
  2345 ;;		_Interrupt_Init
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           	psect	text21
  2350  000E38                     __ptext21:
  2351                           	opt stack 0
  2352  000E38                     _INIT_INTCON:
  2353                           	opt stack 24
  2354                           
  2355                           ;Interrupts.c: 13: INTCONbits.GIE = 1U;
  2356                           
  2357                           ;incstack = 0
  2358  000E38  8EF2               	bsf	intcon,7,c	;volatile
  2359                           
  2360                           ;Interrupts.c: 14: INTCONbits.PEIE = 0U;
  2361  000E3A  9CF2               	bcf	intcon,6,c	;volatile
  2362                           
  2363                           ;Interrupts.c: 15: INTCONbits.TMR0IE = 1U;
  2364  000E3C  8AF2               	bsf	intcon,5,c	;volatile
  2365                           
  2366                           ;Interrupts.c: 16: INTCONbits.INT0E=0U;
  2367  000E3E  98F2               	bcf	intcon,4,c	;volatile
  2368                           
  2369                           ;Interrupts.c: 17: INTCONbits.RBIE=0U;
  2370  000E40  96F2               	bcf	intcon,3,c	;volatile
  2371  000E42  0012               	return		;funcret
  2372  000E44                     __end_of_INIT_INTCON:
  2373                           	opt stack 0
  2374                           tblptru	equ	0xFF8
  2375                           tblptrh	equ	0xFF7
  2376                           tblptrl	equ	0xFF6
  2377                           tablat	equ	0xFF5
  2378                           prodh	equ	0xFF4
  2379                           prodl	equ	0xFF3
  2380                           intcon	equ	0xFF2
  2381                           intcon2	equ	0xFF1
  2382                           intcon3	equ	0xFF0
  2383                           postinc0	equ	0xFEE
  2384                           wreg	equ	0xFE8
  2385                           postdec1	equ	0xFE5
  2386                           fsr1l	equ	0xFE1
  2387                           status	equ	0xFD8
  2388                           
  2389 ;; *************** function _InitDHT11Driver *****************
  2390 ;; Defined at:
  2391 ;;		line 106 in file "DHT11Driver.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;		None
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;		None
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2405 ;;      Params:         0       0       0       0       0       0       0       0       0
  2406 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2407 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2408 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2409 ;;Total ram usage:        0 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:    6
  2412 ;; This function calls:
  2413 ;;		_ConfigureTimer1
  2414 ;; This function is called by:
  2415 ;;		_main
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           	psect	text22
  2420  000E8E                     __ptext22:
  2421                           	opt stack 0
  2422  000E8E                     _InitDHT11Driver:
  2423                           	opt stack 24
  2424                           
  2425                           ;DHT11Driver.c: 107: (TRISCbits.TRISC2 = 0);
  2426                           
  2427                           ;incstack = 0
  2428  000E8E  9494               	bcf	3988,2,c	;volatile
  2429                           
  2430                           ;DHT11Driver.c: 108: (LATC2=1U);
  2431  000E90  848B               	bsf	3979,2,c	;volatile
  2432                           
  2433                           ;DHT11Driver.c: 109: ConfigureTimer1();
  2434  000E92  EC36  F006         	call	_ConfigureTimer1	;wreg free
  2435  000E96  0012               	return		;funcret
  2436  000E98                     __end_of_InitDHT11Driver:
  2437                           	opt stack 0
  2438                           tblptru	equ	0xFF8
  2439                           tblptrh	equ	0xFF7
  2440                           tblptrl	equ	0xFF6
  2441                           tablat	equ	0xFF5
  2442                           prodh	equ	0xFF4
  2443                           prodl	equ	0xFF3
  2444                           intcon	equ	0xFF2
  2445                           intcon2	equ	0xFF1
  2446                           intcon3	equ	0xFF0
  2447                           postinc0	equ	0xFEE
  2448                           wreg	equ	0xFE8
  2449                           postdec1	equ	0xFE5
  2450                           fsr1l	equ	0xFE1
  2451                           status	equ	0xFD8
  2452                           
  2453 ;; *************** function _ConfigureTimer1 *****************
  2454 ;; Defined at:
  2455 ;;		line 6 in file "CCP1.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;		None
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  2  282[None  ] int 
  2462 ;; Registers used:
  2463 ;;		wreg, status,2, status,0
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2469 ;;      Params:         0       0       0       0       0       0       0       0       0
  2470 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2472 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2473 ;;Total ram usage:        0 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    5
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_InitDHT11Driver
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text23
  2484  000C6C                     __ptext23:
  2485                           	opt stack 0
  2486  000C6C                     _ConfigureTimer1:
  2487                           	opt stack 24
  2488                           
  2489                           ;CCP1.c: 7: T1CONbits.RD16=1;
  2490                           
  2491                           ;incstack = 0
  2492  000C6C  8ECD               	bsf	4045,7,c	;volatile
  2493                           
  2494                           ;CCP1.c: 8: T1RUN=1U;
  2495  000C6E  8CCD               	bsf	4045,6,c	;volatile
  2496                           
  2497                           ;CCP1.c: 9: T1OSCEN=1U;
  2498  000C70  86CD               	bsf	4045,3,c	;volatile
  2499                           
  2500                           ;CCP1.c: 10: TMR1CS=0U;
  2501  000C72  92CD               	bcf	4045,1,c	;volatile
  2502                           
  2503                           ;CCP1.c: 11: TMR1ON=0U;
  2504  000C74  90CD               	bcf	4045,0,c	;volatile
  2505                           
  2506                           ;CCP1.c: 13: mask = T1CON & 0xCF;
  2507  000C76  50CD               	movf	4045,w,c	;volatile
  2508  000C78  0BCF               	andlw	207
  2509  000C7A  6E3E               	movwf	_mask,c
  2510                           
  2511                           ;CCP1.c: 14: if (prescaler == 8) T1CON = mask | 0x30;
  2512  000C7C  0E08               	movlw	8
  2513  000C7E  1849               	xorwf	_prescaler,w,c
  2514  000C80  A4D8               	btfss	status,2,c
  2515  000C82  D004               	goto	l1891
  2516  000C84  503E               	movf	_mask,w,c
  2517  000C86  0930               	iorlw	48
  2518  000C88  6ECD               	movwf	4045,c	;volatile
  2519  000C8A  0012               	return	
  2520  000C8C                     l1891:
  2521                           
  2522                           ;CCP1.c: 15: else if (prescaler == 4) T1CON = mask | 0x20;
  2523  000C8C  0E04               	movlw	4
  2524  000C8E  1849               	xorwf	_prescaler,w,c
  2525  000C90  A4D8               	btfss	status,2,c
  2526  000C92  D004               	goto	l1895
  2527  000C94  503E               	movf	_mask,w,c
  2528  000C96  0920               	iorlw	32
  2529  000C98  6ECD               	movwf	4045,c	;volatile
  2530  000C9A  0012               	return	
  2531  000C9C                     l1895:
  2532                           
  2533                           ;CCP1.c: 16: else if (prescaler == 2) T1CON = mask | 0x10;
  2534  000C9C  0E02               	movlw	2
  2535  000C9E  1849               	xorwf	_prescaler,w,c
  2536  000CA0  A4D8               	btfss	status,2,c
  2537  000CA2  D004               	goto	l358
  2538  000CA4  503E               	movf	_mask,w,c
  2539  000CA6  0910               	iorlw	16
  2540  000CA8  6ECD               	movwf	4045,c	;volatile
  2541  000CAA  0012               	return	
  2542  000CAC                     l358:
  2543                           
  2544                           ;CCP1.c: 17: else T1CON = mask;
  2545  000CAC  C03E  FFCD         	movff	_mask,4045	;volatile
  2546  000CB0  0012               	return	
  2547  000CB2                     __end_of_ConfigureTimer1:
  2548                           	opt stack 0
  2549                           tblptru	equ	0xFF8
  2550                           tblptrh	equ	0xFF7
  2551                           tblptrl	equ	0xFF6
  2552                           tablat	equ	0xFF5
  2553                           prodh	equ	0xFF4
  2554                           prodl	equ	0xFF3
  2555                           intcon	equ	0xFF2
  2556                           intcon2	equ	0xFF1
  2557                           intcon3	equ	0xFF0
  2558                           postinc0	equ	0xFEE
  2559                           wreg	equ	0xFE8
  2560                           postdec1	equ	0xFE5
  2561                           fsr1l	equ	0xFE1
  2562                           status	equ	0xFD8
  2563                           
  2564 ;; *************** function _HighISR *****************
  2565 ;; Defined at:
  2566 ;;		line 48 in file "Main.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;		None
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;		None
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      void 
  2573 ;; Registers used:
  2574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2580 ;;      Params:         0       0       0       0       0       0       0       0       0
  2581 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2582 ;;      Temps:         16       0       0       0       0       0       0       0       0
  2583 ;;      Totals:        16       0       0       0       0       0       0       0       0
  2584 ;;Total ram usage:       16 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    4
  2587 ;; This function calls:
  2588 ;;		_DHTSignalResponse
  2589 ;;		_FirstStateRequest
  2590 ;;		_Idle
  2591 ;;		_RecievingData
  2592 ;;		_SecondStateRequest
  2593 ;;		i2_TMR0_WRITE_HIGH
  2594 ;;		i2_TMR0_WRITE_LOW
  2595 ;;		i2_TurnOffLights
  2596 ;;		i2_TurnOnLights
  2597 ;; This function is called by:
  2598 ;;		Interrupt level 2
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	intcode
  2603  000008                     __pintcode:
  2604                           	opt stack 0
  2605  000008                     _HighISR:
  2606                           	opt stack 22
  2607                           
  2608                           ;incstack = 0
  2609  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2610  00000A  CFFA F015          	movff	pclath,??_HighISR+2
  2611  00000E  CFFB F016          	movff	pclatu,??_HighISR+3
  2612  000012  ED02  F004         	call	int_func,f	;refresh shadow registers
  2613                           pclatu	equ	0xFFB
  2614                           pclath	equ	0xFFA
  2615                           tblptru	equ	0xFF8
  2616                           tblptrh	equ	0xFF7
  2617                           tblptrl	equ	0xFF6
  2618                           tablat	equ	0xFF5
  2619                           prodh	equ	0xFF4
  2620                           prodl	equ	0xFF3
  2621                           intcon	equ	0xFF2
  2622                           intcon2	equ	0xFF1
  2623                           intcon3	equ	0xFF0
  2624                           postinc0	equ	0xFEE
  2625                           wreg	equ	0xFE8
  2626                           postdec1	equ	0xFE5
  2627                           fsr1l	equ	0xFE1
  2628                           status	equ	0xFD8
  2629                           
  2630                           	psect	intcode_body
  2631  000804                     __pintcode_body:
  2632                           	opt stack 22
  2633  000804                     int_func:
  2634                           	opt stack 22
  2635  000804  0006               	pop		; remove dummy address from shadow register refresh
  2636  000806  CFE9 F017          	movff	fsr0l,??_HighISR+4
  2637  00080A  CFEA F018          	movff	fsr0h,??_HighISR+5
  2638  00080E  CFE1 F019          	movff	fsr1l,??_HighISR+6
  2639  000812  CFE2 F01A          	movff	fsr1h,??_HighISR+7
  2640  000816  CFD9 F01B          	movff	fsr2l,??_HighISR+8
  2641  00081A  CFDA F01C          	movff	fsr2h,??_HighISR+9
  2642  00081E  CFF3 F01D          	movff	prodl,??_HighISR+10
  2643  000822  CFF4 F01E          	movff	prodh,??_HighISR+11
  2644  000826  CFF6 F01F          	movff	tblptrl,??_HighISR+12
  2645  00082A  CFF7 F020          	movff	tblptrh,??_HighISR+13
  2646  00082E  CFF8 F021          	movff	tblptru,??_HighISR+14
  2647  000832  CFF5 F022          	movff	tablat,??_HighISR+15
  2648                           
  2649                           ;Main.c: 50: if(INT2IF){
  2650  000836  A2F0               	btfss	intcon3,1,c	;volatile
  2651  000838  D00E               	goto	i2l1693
  2652                           
  2653                           ;Main.c: 51: INT2IF=0;
  2654  00083A  92F0               	bcf	intcon3,1,c	;volatile
  2655                           
  2656                           ;Main.c: 52: if(Light_f){
  2657  00083C  A24B               	btfss	_Light_f/(0+8),_Light_f& (0+7),c
  2658  00083E  D006               	goto	i2l104
  2659                           
  2660                           ;Main.c: 53: (LATA0=0U);
  2661  000840  9089               	bcf	3977,0,c	;volatile
  2662                           
  2663                           ;Main.c: 54: TurnOffLights();
  2664  000842  EC6E  F007         	call	i2_TurnOffLights	;wreg free
  2665                           
  2666                           ;Main.c: 55: INTEDG2=1U;
  2667  000846  88F1               	bsf	intcon2,4,c	;volatile
  2668                           
  2669                           ;Main.c: 56: Light_f=0;
  2670  000848  924B               	bcf	_Light_f/(0+8),_Light_f& (0+7),c
  2671                           
  2672                           ;Main.c: 57: }
  2673  00084A  D005               	goto	i2l1693
  2674  00084C                     i2l104:
  2675                           
  2676                           ;Main.c: 58: else{
  2677                           ;Main.c: 59: (LATA0=1U);
  2678  00084C  8089               	bsf	3977,0,c	;volatile
  2679                           
  2680                           ;Main.c: 60: TurnOnLights();
  2681  00084E  EC22  F007         	call	i2_TurnOnLights	;wreg free
  2682                           
  2683                           ;Main.c: 61: INTEDG2=0U;
  2684  000852  98F1               	bcf	intcon2,4,c	;volatile
  2685                           
  2686                           ;Main.c: 62: Light_f=1;
  2687  000854  824B               	bsf	_Light_f/(0+8),_Light_f& (0+7),c
  2688  000856                     i2l1693:
  2689                           
  2690                           ;Main.c: 63: }
  2691                           ;Main.c: 64: }
  2692                           ;Main.c: 66: if(ADIF){
  2693  000856  AC9E               	btfss	3998,6,c	;volatile
  2694  000858  D02A               	goto	i2l1723
  2695                           
  2696                           ;Main.c: 67: ADIF=0;
  2697  00085A  9C9E               	bcf	3998,6,c	;volatile
  2698                           
  2699                           ;Main.c: 68: if((ADRES>=MaxLightValue) && (Light_f==1)){
  2700  00085C  5046               	movf	_MaxLightValue,w,c
  2701  00085E  6E13               	movwf	??_HighISR& (0+255),c
  2702  000860  6A14               	clrf	(??_HighISR+1)& (0+255),c
  2703  000862  5013               	movf	??_HighISR,w,c
  2704  000864  5CC3               	subwf	4035,w,c	;volatile
  2705  000866  5014               	movf	??_HighISR+1,w,c
  2706  000868  58C4               	subwfb	4036,w,c	;volatile
  2707  00086A  B0D8               	btfsc	status,0,c
  2708  00086C  A24B               	btfss	_Light_f/(0+8),_Light_f& (0+7),c
  2709  00086E  D001               	goto	i2l1703
  2710  000870  D01D               	goto	i2l1721
  2711  000872                     i2l1703:
  2712                           
  2713                           ;Main.c: 72: else if ((ADRES>=MaxLightValue) && (Light_f == 0)){
  2714  000872  5046               	movf	_MaxLightValue,w,c
  2715  000874  6E13               	movwf	??_HighISR& (0+255),c
  2716  000876  6A14               	clrf	(??_HighISR+1)& (0+255),c
  2717  000878  5013               	movf	??_HighISR,w,c
  2718  00087A  5CC3               	subwf	4035,w,c	;volatile
  2719  00087C  5014               	movf	??_HighISR+1,w,c
  2720  00087E  58C4               	subwfb	4036,w,c	;volatile
  2721  000880  B0D8               	btfsc	status,0,c
  2722  000882  B24B               	btfsc	_Light_f/(0+8),_Light_f& (0+7),c
  2723  000884  D001               	goto	i2l1709
  2724  000886  D012               	goto	i2l1721
  2725  000888                     i2l1709:
  2726                           
  2727                           ;Main.c: 76: else if ((ADRES <= MinLightValue) && (Light_f ==1)){
  2728  000888  5047               	movf	_MinLightValue,w,c
  2729  00088A  6E13               	movwf	??_HighISR& (0+255),c
  2730  00088C  6A14               	clrf	(??_HighISR+1)& (0+255),c
  2731  00088E  50C3               	movf	4035,w,c	;volatile
  2732  000890  5C13               	subwf	??_HighISR,w,c
  2733  000892  50C4               	movf	4036,w,c	;volatile
  2734  000894  5814               	subwfb	??_HighISR+1,w,c
  2735  000896  B0D8               	btfsc	status,0,c
  2736  000898  A24B               	btfss	_Light_f/(0+8),_Light_f& (0+7),c
  2737  00089A  D001               	goto	i2l1715
  2738  00089C  D007               	goto	i2l1721
  2739  00089E                     i2l1715:
  2740                           
  2741                           ;Main.c: 80: else if ((ADRES <= MinLightValue) && (Light_f ==1)){
  2742  00089E  5047               	movf	_MinLightValue,w,c
  2743  0008A0  6E13               	movwf	??_HighISR& (0+255),c
  2744  0008A2  6A14               	clrf	(??_HighISR+1)& (0+255),c
  2745  0008A4  50C3               	movf	4035,w,c	;volatile
  2746  0008A6  5C13               	subwf	??_HighISR,w,c
  2747  0008A8  50C4               	movf	4036,w,c	;volatile
  2748  0008AA  5814               	subwfb	??_HighISR+1,w,c
  2749  0008AC                     i2l1721:
  2750                           
  2751                           ;Main.c: 84: else{
  2752                           ;Main.c: 85: dummy++;
  2753  0008AC  2A37               	incf	_dummy,f,c
  2754  0008AE                     i2l1723:
  2755                           
  2756                           ;Main.c: 87: }
  2757                           ;Main.c: 88: }
  2758                           ;Main.c: 91: if(TMR0IF){
  2759  0008AE  A4F2               	btfss	intcon,2,c	;volatile
  2760  0008B0  D01E               	goto	i2l1741
  2761                           
  2762                           ;Main.c: 93: TMR0IF=0;
  2763  0008B2  94F2               	bcf	intcon,2,c	;volatile
  2764                           
  2765                           ;Main.c: 94: if(TimerCounter<2) TimerCounter++;
  2766  0008B4  0E02               	movlw	2
  2767  0008B6  6033               	cpfslt	_TimerCounter,c
  2768  0008B8  D002               	goto	i2l116
  2769  0008BA  2A33               	incf	_TimerCounter,f,c
  2770  0008BC  D011               	goto	i2l1735
  2771  0008BE                     i2l116:
  2772                           
  2773                           ;Main.c: 95: else{
  2774                           ;Main.c: 96: TMR0ON = 0;
  2775  0008BE  9ED5               	bcf	4053,7,c	;volatile
  2776                           
  2777                           ;Main.c: 97: DHT_StateMachine[_FirstStateRequest]();
  2778  0008C0  EE20  F0CA         	lfsr	2,_DHT_StateMachine+2
  2779  0008C4  D801               	call	i2u63_48
  2780  0008C6  D00A               	goto	i2l1733
  2781  0008C8                     i2u63_48:
  2782  0008C8  0005               	push	
  2783  0008CA  6EFA               	movwf	pclath,c
  2784  0008CC  50DE               	movf	postinc2,w,c
  2785  0008CE  6EFD               	movwf	tosl,c
  2786  0008D0  50DE               	movf	postinc2,w,c
  2787  0008D2  6EFE               	movwf	tosh,c
  2788  0008D4  50F8               	movf	tblptru,w,c
  2789  0008D6  6EFF               	movwf	tosu,c
  2790  0008D8  50FA               	movf	pclath,w,c
  2791  0008DA  0012               	return		;indir
  2792  0008DC                     i2l1733:
  2793                           
  2794                           ;Main.c: 98: TimerCounter=0;
  2795  0008DC  0E00               	movlw	0
  2796  0008DE  6E33               	movwf	_TimerCounter,c
  2797  0008E0                     i2l1735:
  2798                           
  2799                           ;Main.c: 99: }
  2800                           ;Main.c: 100: TMR0_WRITE_HIGH(0xF0);
  2801  0008E0  0EF0               	movlw	240
  2802  0008E2  EC61  F007         	call	i2_TMR0_WRITE_HIGH
  2803                           
  2804                           ;Main.c: 101: TMR0_WRITE_LOW(0xBD);
  2805  0008E6  0EBD               	movlw	189
  2806  0008E8  EC5D  F007         	call	i2_TMR0_WRITE_LOW
  2807                           
  2808                           ;Main.c: 102: TMR0ON = 1;
  2809  0008EC  8ED5               	bsf	4053,7,c	;volatile
  2810  0008EE                     i2l1741:
  2811                           
  2812                           ;Main.c: 103: }
  2813                           ;Main.c: 105: if (CCP1IF){
  2814  0008EE  A49E               	btfss	3998,2,c	;volatile
  2815  0008F0  D015               	goto	i2l119
  2816                           
  2817                           ;Main.c: 106: CCP1IF=0;
  2818  0008F2  949E               	bcf	3998,2,c	;volatile
  2819                           
  2820                           ;Main.c: 107: (*DHT_StateMachine[state])();
  2821  0008F4  5041               	movf	_state,w,c
  2822  0008F6  0D02               	mullw	2
  2823  0008F8  0EC8               	movlw	low _DHT_StateMachine
  2824  0008FA  24F3               	addwf	prodl,w,c
  2825  0008FC  6ED9               	movwf	fsr2l,c
  2826  0008FE  0E00               	movlw	high _DHT_StateMachine
  2827  000900  20F4               	addwfc	prodh,w,c
  2828  000902  6EDA               	movwf	fsr2h,c
  2829  000904  D801               	call	i2u65_48
  2830  000906  D00A               	goto	i2l119
  2831  000908                     i2u65_48:
  2832  000908  0005               	push	
  2833  00090A  6EFA               	movwf	pclath,c
  2834  00090C  50DE               	movf	postinc2,w,c
  2835  00090E  6EFD               	movwf	tosl,c
  2836  000910  50DE               	movf	postinc2,w,c
  2837  000912  6EFE               	movwf	tosh,c
  2838  000914  50F8               	movf	tblptru,w,c
  2839  000916  6EFF               	movwf	tosu,c
  2840  000918  50FA               	movf	pclath,w,c
  2841  00091A  0012               	return		;indir
  2842  00091C                     i2l119:
  2843  00091C  C022  FFF5         	movff	??_HighISR+15,tablat
  2844  000920  C021  FFF8         	movff	??_HighISR+14,tblptru
  2845  000924  C020  FFF7         	movff	??_HighISR+13,tblptrh
  2846  000928  C01F  FFF6         	movff	??_HighISR+12,tblptrl
  2847  00092C  C01E  FFF4         	movff	??_HighISR+11,prodh
  2848  000930  C01D  FFF3         	movff	??_HighISR+10,prodl
  2849  000934  C01C  FFDA         	movff	??_HighISR+9,fsr2h
  2850  000938  C01B  FFD9         	movff	??_HighISR+8,fsr2l
  2851  00093C  C01A  FFE2         	movff	??_HighISR+7,fsr1h
  2852  000940  C019  FFE1         	movff	??_HighISR+6,fsr1l
  2853  000944  C018  FFEA         	movff	??_HighISR+5,fsr0h
  2854  000948  C017  FFE9         	movff	??_HighISR+4,fsr0l
  2855  00094C  C016  FFFB         	movff	??_HighISR+3,pclatu
  2856  000950  C015  FFFA         	movff	??_HighISR+2,pclath
  2857  000954  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2858  000956  0011               	retfie		f
  2859  000958                     __end_of_HighISR:
  2860                           	opt stack 0
  2861                           tosu	equ	0xFFF
  2862                           tosh	equ	0xFFE
  2863                           tosl	equ	0xFFD
  2864                           pclatu	equ	0xFFB
  2865                           pclath	equ	0xFFA
  2866                           tblptru	equ	0xFF8
  2867                           tblptrh	equ	0xFF7
  2868                           tblptrl	equ	0xFF6
  2869                           tablat	equ	0xFF5
  2870                           prodh	equ	0xFF4
  2871                           prodl	equ	0xFF3
  2872                           intcon	equ	0xFF2
  2873                           intcon2	equ	0xFF1
  2874                           intcon3	equ	0xFF0
  2875                           postinc0	equ	0xFEE
  2876                           fsr0h	equ	0xFEA
  2877                           fsr0l	equ	0xFE9
  2878                           wreg	equ	0xFE8
  2879                           postdec1	equ	0xFE5
  2880                           fsr1h	equ	0xFE2
  2881                           fsr1l	equ	0xFE1
  2882                           postinc2	equ	0xFDE
  2883                           fsr2h	equ	0xFDA
  2884                           fsr2l	equ	0xFD9
  2885                           status	equ	0xFD8
  2886                           
  2887 ;; *************** function i2_TurnOnLights *****************
  2888 ;; Defined at:
  2889 ;;		line 7 in file "LedDriver.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;		None
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;		None
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  2    0[None  ] int 
  2896 ;; Registers used:
  2897 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2903 ;;      Params:         0       0       0       0       0       0       0       0       0
  2904 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2905 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2906 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2907 ;;Total ram usage:        0 bytes
  2908 ;; Hardware stack levels used:    1
  2909 ;; Hardware stack levels required when called:    3
  2910 ;; This function calls:
  2911 ;;		i2_SetPWM
  2912 ;;		i2_StartPWM
  2913 ;; This function is called by:
  2914 ;;		_HighISR
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text25
  2919  000E44                     __ptext25:
  2920                           	opt stack 0
  2921  000E44                     i2_TurnOnLights:
  2922                           	opt stack 22
  2923                           
  2924                           ;LedDriver.c: 8: SetPWM(50);
  2925                           
  2926                           ;incstack = 0
  2927  000E44  0E32               	movlw	50
  2928  000E46  ECE5  F006         	call	i2_SetPWM
  2929                           
  2930                           ;LedDriver.c: 9: StartPWM();
  2931  000E4A  EC59  F007         	call	i2_StartPWM	;wreg free
  2932  000E4E  0012               	return		;funcret
  2933  000E50                     __end_ofi2_TurnOnLights:
  2934                           	opt stack 0
  2935                           tosu	equ	0xFFF
  2936                           tosh	equ	0xFFE
  2937                           tosl	equ	0xFFD
  2938                           pclatu	equ	0xFFB
  2939                           pclath	equ	0xFFA
  2940                           tblptru	equ	0xFF8
  2941                           tblptrh	equ	0xFF7
  2942                           tblptrl	equ	0xFF6
  2943                           tablat	equ	0xFF5
  2944                           prodh	equ	0xFF4
  2945                           prodl	equ	0xFF3
  2946                           intcon	equ	0xFF2
  2947                           intcon2	equ	0xFF1
  2948                           intcon3	equ	0xFF0
  2949                           postinc0	equ	0xFEE
  2950                           fsr0h	equ	0xFEA
  2951                           fsr0l	equ	0xFE9
  2952                           wreg	equ	0xFE8
  2953                           postdec1	equ	0xFE5
  2954                           fsr1h	equ	0xFE2
  2955                           fsr1l	equ	0xFE1
  2956                           postinc2	equ	0xFDE
  2957                           fsr2h	equ	0xFDA
  2958                           fsr2l	equ	0xFD9
  2959                           status	equ	0xFD8
  2960                           
  2961 ;; *************** function i2_StartPWM *****************
  2962 ;; Defined at:
  2963 ;;		line 16 in file "PWM.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;		None
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;		None
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1    wreg      void 
  2970 ;; Registers used:
  2971 ;;		wreg, status,2
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2977 ;;      Params:         0       0       0       0       0       0       0       0       0
  2978 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2979 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2980 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2981 ;;Total ram usage:        0 bytes
  2982 ;; Hardware stack levels used:    1
  2983 ;; This function calls:
  2984 ;;		Nothing
  2985 ;; This function is called by:
  2986 ;;		i2_TurnOnLights
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           	psect	text26
  2991  000EB2                     __ptext26:
  2992                           	opt stack 0
  2993  000EB2                     i2_StartPWM:
  2994                           	opt stack 24
  2995                           
  2996                           ;PWM.c: 17: CCP2CON=0x0C;
  2997                           
  2998                           ;incstack = 0
  2999  000EB2  0E0C               	movlw	12
  3000  000EB4  6EBA               	movwf	4026,c	;volatile
  3001                           
  3002                           ;PWM.c: 18: T1OSCEN=1U;
  3003  000EB6  86CD               	bsf	4045,3,c	;volatile
  3004  000EB8  0012               	return		;funcret
  3005  000EBA                     __end_ofi2_StartPWM:
  3006                           	opt stack 0
  3007                           tosu	equ	0xFFF
  3008                           tosh	equ	0xFFE
  3009                           tosl	equ	0xFFD
  3010                           pclatu	equ	0xFFB
  3011                           pclath	equ	0xFFA
  3012                           tblptru	equ	0xFF8
  3013                           tblptrh	equ	0xFF7
  3014                           tblptrl	equ	0xFF6
  3015                           tablat	equ	0xFF5
  3016                           prodh	equ	0xFF4
  3017                           prodl	equ	0xFF3
  3018                           intcon	equ	0xFF2
  3019                           intcon2	equ	0xFF1
  3020                           intcon3	equ	0xFF0
  3021                           postinc0	equ	0xFEE
  3022                           fsr0h	equ	0xFEA
  3023                           fsr0l	equ	0xFE9
  3024                           wreg	equ	0xFE8
  3025                           postdec1	equ	0xFE5
  3026                           fsr1h	equ	0xFE2
  3027                           fsr1l	equ	0xFE1
  3028                           postinc2	equ	0xFDE
  3029                           fsr2h	equ	0xFDA
  3030                           fsr2l	equ	0xFD9
  3031                           status	equ	0xFD8
  3032                           
  3033 ;; *************** function i2_SetPWM *****************
  3034 ;; Defined at:
  3035 ;;		line 43 in file "PWM.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;  dutycycle       1    wreg     unsigned char 
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;  dutycycle       1   17[COMRAM] unsigned char 
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  1    wreg      void 
  3042 ;; Registers used:
  3043 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3049 ;;      Params:         0       0       0       0       0       0       0       0       0
  3050 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3051 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3052 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3053 ;;Total ram usage:        1 bytes
  3054 ;; Hardware stack levels used:    1
  3055 ;; Hardware stack levels required when called:    2
  3056 ;; This function calls:
  3057 ;;		i2_SetDutyCycle
  3058 ;;		i2_SetPeriod
  3059 ;; This function is called by:
  3060 ;;		i2_TurnOnLights
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text27
  3065  000DCA                     __ptext27:
  3066                           	opt stack 0
  3067  000DCA                     i2_SetPWM:
  3068                           	opt stack 22
  3069                           
  3070                           ;incstack = 0
  3071                           ;i2SetPWM@dutycycle stored from wreg
  3072  000DCA  6E12               	movwf	i2SetPWM@dutycycle,c
  3073                           
  3074                           ;PWM.c: 44: T2CON=0x00;
  3075  000DCC  0E00               	movlw	0
  3076  000DCE  6ECA               	movwf	4042,c	;volatile
  3077                           
  3078                           ;PWM.c: 45: SetPeriod();
  3079  000DD0  EC6B  F007         	call	i2_SetPeriod	;wreg free
  3080                           
  3081                           ;PWM.c: 46: SetDutyCycle(dutycycle);
  3082  000DD4  5012               	movf	i2SetPWM@dutycycle,w,c
  3083  000DD6  ECB8  F005         	call	i2_SetDutyCycle
  3084                           
  3085                           ;PWM.c: 47: (TRISBbits.TRISB3 = 0);
  3086  000DDA  9693               	bcf	3987,3,c	;volatile
  3087                           
  3088                           ;PWM.c: 48: T2CON=0b110;
  3089  000DDC  0E06               	movlw	6
  3090  000DDE  6ECA               	movwf	4042,c	;volatile
  3091  000DE0  0012               	return		;funcret
  3092  000DE2                     __end_ofi2_SetPWM:
  3093                           	opt stack 0
  3094                           tosu	equ	0xFFF
  3095                           tosh	equ	0xFFE
  3096                           tosl	equ	0xFFD
  3097                           pclatu	equ	0xFFB
  3098                           pclath	equ	0xFFA
  3099                           tblptru	equ	0xFF8
  3100                           tblptrh	equ	0xFF7
  3101                           tblptrl	equ	0xFF6
  3102                           tablat	equ	0xFF5
  3103                           prodh	equ	0xFF4
  3104                           prodl	equ	0xFF3
  3105                           intcon	equ	0xFF2
  3106                           intcon2	equ	0xFF1
  3107                           intcon3	equ	0xFF0
  3108                           postinc0	equ	0xFEE
  3109                           fsr0h	equ	0xFEA
  3110                           fsr0l	equ	0xFE9
  3111                           wreg	equ	0xFE8
  3112                           postdec1	equ	0xFE5
  3113                           fsr1h	equ	0xFE2
  3114                           fsr1l	equ	0xFE1
  3115                           postinc2	equ	0xFDE
  3116                           fsr2h	equ	0xFDA
  3117                           fsr2l	equ	0xFD9
  3118                           status	equ	0xFD8
  3119                           
  3120 ;; *************** function i2_SetPeriod *****************
  3121 ;; Defined at:
  3122 ;;		line 27 in file "PWM.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;		None
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;		None
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		wreg, status,2
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3136 ;;      Params:         0       0       0       0       0       0       0       0       0
  3137 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3138 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3139 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3140 ;;Total ram usage:        0 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; This function calls:
  3143 ;;		Nothing
  3144 ;; This function is called by:
  3145 ;;		i2_SetPWM
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text28
  3150  000ED6                     __ptext28:
  3151                           	opt stack 0
  3152  000ED6                     i2_SetPeriod:
  3153                           	opt stack 23
  3154                           
  3155                           ;PWM.c: 29: PR2=124;
  3156                           
  3157                           ;incstack = 0
  3158  000ED6  0E7C               	movlw	124
  3159  000ED8  6ECB               	movwf	4043,c	;volatile
  3160  000EDA  0012               	return		;funcret
  3161  000EDC                     __end_ofi2_SetPeriod:
  3162                           	opt stack 0
  3163                           tosu	equ	0xFFF
  3164                           tosh	equ	0xFFE
  3165                           tosl	equ	0xFFD
  3166                           pclatu	equ	0xFFB
  3167                           pclath	equ	0xFFA
  3168                           tblptru	equ	0xFF8
  3169                           tblptrh	equ	0xFF7
  3170                           tblptrl	equ	0xFF6
  3171                           tablat	equ	0xFF5
  3172                           prodh	equ	0xFF4
  3173                           prodl	equ	0xFF3
  3174                           intcon	equ	0xFF2
  3175                           intcon2	equ	0xFF1
  3176                           intcon3	equ	0xFF0
  3177                           postinc0	equ	0xFEE
  3178                           fsr0h	equ	0xFEA
  3179                           fsr0l	equ	0xFE9
  3180                           wreg	equ	0xFE8
  3181                           postdec1	equ	0xFE5
  3182                           fsr1h	equ	0xFE2
  3183                           fsr1l	equ	0xFE1
  3184                           postinc2	equ	0xFDE
  3185                           fsr2h	equ	0xFDA
  3186                           fsr2l	equ	0xFD9
  3187                           status	equ	0xFD8
  3188                           
  3189 ;; *************** function i2_SetDutyCycle *****************
  3190 ;; Defined at:
  3191 ;;		line 32 in file "PWM.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  dutycycle       1    wreg     unsigned char 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  dutycycle       1   16[COMRAM] unsigned char 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3205 ;;      Params:         0       0       0       0       0       0       0       0       0
  3206 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3207 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3208 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3209 ;;Total ram usage:        3 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:    1
  3212 ;; This function calls:
  3213 ;;		i2___awdiv
  3214 ;;		i2___wmul
  3215 ;; This function is called by:
  3216 ;;		i2_SetPWM
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text29
  3221  000B70                     __ptext29:
  3222                           	opt stack 0
  3223  000B70                     i2_SetDutyCycle:
  3224                           	opt stack 22
  3225                           
  3226                           ;incstack = 0
  3227                           ;i2SetDutyCycle@dutycycle stored from wreg
  3228  000B70  6E11               	movwf	i2SetDutyCycle@dutycycle,c
  3229                           
  3230                           ;PWM.c: 33: PWMValue=((dutycycle)*470)/100;
  3231  000B72  C011  F001         	movff	i2SetDutyCycle@dutycycle,i2___wmul@multiplier
  3232  000B76  6A02               	clrf	i2___wmul@multiplier+1,c
  3233  000B78  0E01               	movlw	1
  3234  000B7A  6E04               	movwf	i2___wmul@multiplicand+1,c
  3235  000B7C  0ED6               	movlw	214
  3236  000B7E  6E03               	movwf	i2___wmul@multiplicand,c
  3237  000B80  ECA2  F006         	call	i2___wmul	;wreg free
  3238  000B84  C001  F007         	movff	?i2___wmul,i2___awdiv@dividend
  3239  000B88  C002  F008         	movff	?i2___wmul+1,i2___awdiv@dividend+1
  3240  000B8C  0E00               	movlw	0
  3241  000B8E  6E0A               	movwf	i2___awdiv@divisor+1,c
  3242  000B90  0E64               	movlw	100
  3243  000B92  6E09               	movwf	i2___awdiv@divisor,c
  3244  000B94  EC0B  F005         	call	i2___awdiv	;wreg free
  3245  000B98  C007  F029         	movff	?i2___awdiv,_PWMValue
  3246  000B9C  C008  F02A         	movff	?i2___awdiv+1,_PWMValue+1
  3247                           
  3248                           ;PWM.c: 34: LSb=PWMValue&0x03;
  3249  000BA0  0E03               	movlw	3
  3250  000BA2  1429               	andwf	_PWMValue,w,c
  3251  000BA4  6E23               	movwf	_LSb,c
  3252  000BA6  6A24               	clrf	_LSb+1,c
  3253                           
  3254                           ;PWM.c: 35: MSb=PWMValue>>2;
  3255  000BA8  C029  F00F         	movff	_PWMValue,??i2_SetDutyCycle
  3256  000BAC  C02A  F010         	movff	_PWMValue+1,??i2_SetDutyCycle+1
  3257  000BB0  90D8               	bcf	status,0,c
  3258  000BB2  3210               	rrcf	??i2_SetDutyCycle+1,f,c
  3259  000BB4  320F               	rrcf	??i2_SetDutyCycle,f,c
  3260  000BB6  90D8               	bcf	status,0,c
  3261  000BB8  3210               	rrcf	??i2_SetDutyCycle+1,f,c
  3262  000BBA  320F               	rrcf	??i2_SetDutyCycle,f,c
  3263  000BBC  C00F  F027         	movff	??i2_SetDutyCycle,_MSb
  3264  000BC0  C010  F028         	movff	??i2_SetDutyCycle+1,_MSb+1
  3265                           
  3266                           ;PWM.c: 37: CCPR2L=MSb;
  3267  000BC4  C027  FFBB         	movff	_MSb,4027	;volatile
  3268                           
  3269                           ;PWM.c: 38: CCP2CON=CCP2CON|(LSb<<4);
  3270  000BC8  3823               	swapf	_LSb,w,c
  3271  000BCA  0BF0               	andlw	240
  3272  000BCC  10BA               	iorwf	4026,w,c
  3273  000BCE  6EBA               	movwf	4026,c	;volatile
  3274  000BD0  0012               	return		;funcret
  3275  000BD2                     __end_ofi2_SetDutyCycle:
  3276                           	opt stack 0
  3277                           tosu	equ	0xFFF
  3278                           tosh	equ	0xFFE
  3279                           tosl	equ	0xFFD
  3280                           pclatu	equ	0xFFB
  3281                           pclath	equ	0xFFA
  3282                           tblptru	equ	0xFF8
  3283                           tblptrh	equ	0xFF7
  3284                           tblptrl	equ	0xFF6
  3285                           tablat	equ	0xFF5
  3286                           prodh	equ	0xFF4
  3287                           prodl	equ	0xFF3
  3288                           intcon	equ	0xFF2
  3289                           intcon2	equ	0xFF1
  3290                           intcon3	equ	0xFF0
  3291                           postinc0	equ	0xFEE
  3292                           fsr0h	equ	0xFEA
  3293                           fsr0l	equ	0xFE9
  3294                           wreg	equ	0xFE8
  3295                           postdec1	equ	0xFE5
  3296                           fsr1h	equ	0xFE2
  3297                           fsr1l	equ	0xFE1
  3298                           postinc2	equ	0xFDE
  3299                           fsr2h	equ	0xFDA
  3300                           fsr2l	equ	0xFD9
  3301                           status	equ	0xFD8
  3302                           
  3303 ;; *************** function i2___wmul *****************
  3304 ;; Defined at:
  3305 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;  multiplier      2    0[COMRAM] unsigned int 
  3308 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;  __wmul          2    4[COMRAM] unsigned int 
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  2    0[COMRAM] unsigned int 
  3313 ;; Registers used:
  3314 ;;		wreg, status,2, status,0, prodl, prodh
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3320 ;;      Params:         4       0       0       0       0       0       0       0       0
  3321 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3322 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3323 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3324 ;;Total ram usage:        6 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; This function calls:
  3327 ;;		Nothing
  3328 ;; This function is called by:
  3329 ;;		i2_SetDutyCycle
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text30
  3334  000D44                     __ptext30:
  3335                           	opt stack 0
  3336  000D44                     i2___wmul:
  3337                           	opt stack 22
  3338                           
  3339                           ;incstack = 0
  3340  000D44  5001               	movf	i2___wmul@multiplier,w,c
  3341  000D46  0203               	mulwf	i2___wmul@multiplicand,c
  3342  000D48  CFF3 F005          	movff	prodl,i2___wmul@product
  3343  000D4C  CFF4 F006          	movff	prodh,i2___wmul@product+1
  3344  000D50  5001               	movf	i2___wmul@multiplier,w,c
  3345  000D52  0204               	mulwf	i2___wmul@multiplicand+1,c
  3346  000D54  50F3               	movf	prodl,w,c
  3347  000D56  2606               	addwf	i2___wmul@product+1,f,c
  3348  000D58  5002               	movf	i2___wmul@multiplier+1,w,c
  3349  000D5A  0203               	mulwf	i2___wmul@multiplicand,c
  3350  000D5C  50F3               	movf	prodl,w,c
  3351  000D5E  2606               	addwf	i2___wmul@product+1,f,c
  3352  000D60  C005  F001         	movff	i2___wmul@product,?i2___wmul
  3353  000D64  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  3354  000D68  0012               	return	
  3355  000D6A                     __end_ofi2___wmul:
  3356                           	opt stack 0
  3357                           tosu	equ	0xFFF
  3358                           tosh	equ	0xFFE
  3359                           tosl	equ	0xFFD
  3360                           pclatu	equ	0xFFB
  3361                           pclath	equ	0xFFA
  3362                           tblptru	equ	0xFF8
  3363                           tblptrh	equ	0xFF7
  3364                           tblptrl	equ	0xFF6
  3365                           tablat	equ	0xFF5
  3366                           prodh	equ	0xFF4
  3367                           prodl	equ	0xFF3
  3368                           intcon	equ	0xFF2
  3369                           intcon2	equ	0xFF1
  3370                           intcon3	equ	0xFF0
  3371                           postinc0	equ	0xFEE
  3372                           fsr0h	equ	0xFEA
  3373                           fsr0l	equ	0xFE9
  3374                           wreg	equ	0xFE8
  3375                           postdec1	equ	0xFE5
  3376                           fsr1h	equ	0xFE2
  3377                           fsr1l	equ	0xFE1
  3378                           postinc2	equ	0xFDE
  3379                           fsr2h	equ	0xFDA
  3380                           fsr2l	equ	0xFD9
  3381                           status	equ	0xFD8
  3382                           
  3383 ;; *************** function i2___awdiv *****************
  3384 ;; Defined at:
  3385 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  dividend        2    6[COMRAM] int 
  3388 ;;  divisor         2    8[COMRAM] int 
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;  __awdiv         2   12[COMRAM] int 
  3391 ;;  __awdiv         1   11[COMRAM] unsigned char 
  3392 ;;  __awdiv         1   10[COMRAM] unsigned char 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  2    6[COMRAM] int 
  3395 ;; Registers used:
  3396 ;;		wreg, status,2, status,0
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3402 ;;      Params:         4       0       0       0       0       0       0       0       0
  3403 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3405 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3406 ;;Total ram usage:        8 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		i2_SetDutyCycle
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text31
  3416  000A16                     __ptext31:
  3417                           	opt stack 0
  3418  000A16                     i2___awdiv:
  3419                           	opt stack 22
  3420                           
  3421                           ;incstack = 0
  3422  000A16  0E00               	movlw	0
  3423  000A18  6E0C               	movwf	i2___awdiv@sign,c
  3424  000A1A  AE0A               	btfss	i2___awdiv@divisor+1,7,c
  3425  000A1C  D006               	goto	i2l1517
  3426  000A1E  6C09               	negf	i2___awdiv@divisor,c
  3427  000A20  1E0A               	comf	i2___awdiv@divisor+1,f,c
  3428  000A22  B0D8               	btfsc	status,0,c
  3429  000A24  2A0A               	incf	i2___awdiv@divisor+1,f,c
  3430  000A26  0E01               	movlw	1
  3431  000A28  6E0C               	movwf	i2___awdiv@sign,c
  3432  000A2A                     i2l1517:
  3433  000A2A  AE08               	btfss	i2___awdiv@dividend+1,7,c
  3434  000A2C  D006               	goto	i2l1523
  3435  000A2E  6C07               	negf	i2___awdiv@dividend,c
  3436  000A30  1E08               	comf	i2___awdiv@dividend+1,f,c
  3437  000A32  B0D8               	btfsc	status,0,c
  3438  000A34  2A08               	incf	i2___awdiv@dividend+1,f,c
  3439  000A36  0E01               	movlw	1
  3440  000A38  1A0C               	xorwf	i2___awdiv@sign,f,c
  3441  000A3A                     i2l1523:
  3442  000A3A  0E00               	movlw	0
  3443  000A3C  6E0E               	movwf	i2___awdiv@quotient+1,c
  3444  000A3E  0E00               	movlw	0
  3445  000A40  6E0D               	movwf	i2___awdiv@quotient,c
  3446  000A42  5009               	movf	i2___awdiv@divisor,w,c
  3447  000A44  100A               	iorwf	i2___awdiv@divisor+1,w,c
  3448  000A46  B4D8               	btfsc	status,2,c
  3449  000A48  D01C               	goto	i2l1545
  3450  000A4A  0E01               	movlw	1
  3451  000A4C  6E0B               	movwf	i2___awdiv@counter,c
  3452  000A4E  D004               	goto	i2l1531
  3453  000A50                     i2l1529:
  3454  000A50  90D8               	bcf	status,0,c
  3455  000A52  3609               	rlcf	i2___awdiv@divisor,f,c
  3456  000A54  360A               	rlcf	i2___awdiv@divisor+1,f,c
  3457  000A56  2A0B               	incf	i2___awdiv@counter,f,c
  3458  000A58                     i2l1531:
  3459  000A58  AE0A               	btfss	i2___awdiv@divisor+1,7,c
  3460  000A5A  D7FA               	goto	i2l1529
  3461  000A5C                     i2l1533:
  3462  000A5C  90D8               	bcf	status,0,c
  3463  000A5E  360D               	rlcf	i2___awdiv@quotient,f,c
  3464  000A60  360E               	rlcf	i2___awdiv@quotient+1,f,c
  3465  000A62  5009               	movf	i2___awdiv@divisor,w,c
  3466  000A64  5C07               	subwf	i2___awdiv@dividend,w,c
  3467  000A66  500A               	movf	i2___awdiv@divisor+1,w,c
  3468  000A68  5808               	subwfb	i2___awdiv@dividend+1,w,c
  3469  000A6A  A0D8               	btfss	status,0,c
  3470  000A6C  D005               	goto	i2l1541
  3471  000A6E  5009               	movf	i2___awdiv@divisor,w,c
  3472  000A70  5E07               	subwf	i2___awdiv@dividend,f,c
  3473  000A72  500A               	movf	i2___awdiv@divisor+1,w,c
  3474  000A74  5A08               	subwfb	i2___awdiv@dividend+1,f,c
  3475  000A76  800D               	bsf	i2___awdiv@quotient,0,c
  3476  000A78                     i2l1541:
  3477  000A78  90D8               	bcf	status,0,c
  3478  000A7A  320A               	rrcf	i2___awdiv@divisor+1,f,c
  3479  000A7C  3209               	rrcf	i2___awdiv@divisor,f,c
  3480  000A7E  2E0B               	decfsz	i2___awdiv@counter,f,c
  3481  000A80  D7ED               	goto	i2l1533
  3482  000A82                     i2l1545:
  3483  000A82  500C               	movf	i2___awdiv@sign,w,c
  3484  000A84  B4D8               	btfsc	status,2,c
  3485  000A86  D004               	goto	i2l1549
  3486  000A88  6C0D               	negf	i2___awdiv@quotient,c
  3487  000A8A  1E0E               	comf	i2___awdiv@quotient+1,f,c
  3488  000A8C  B0D8               	btfsc	status,0,c
  3489  000A8E  2A0E               	incf	i2___awdiv@quotient+1,f,c
  3490  000A90                     i2l1549:
  3491  000A90  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
  3492  000A94  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  3493  000A98  0012               	return	
  3494  000A9A                     __end_ofi2___awdiv:
  3495                           	opt stack 0
  3496                           tosu	equ	0xFFF
  3497                           tosh	equ	0xFFE
  3498                           tosl	equ	0xFFD
  3499                           pclatu	equ	0xFFB
  3500                           pclath	equ	0xFFA
  3501                           tblptru	equ	0xFF8
  3502                           tblptrh	equ	0xFF7
  3503                           tblptrl	equ	0xFF6
  3504                           tablat	equ	0xFF5
  3505                           prodh	equ	0xFF4
  3506                           prodl	equ	0xFF3
  3507                           intcon	equ	0xFF2
  3508                           intcon2	equ	0xFF1
  3509                           intcon3	equ	0xFF0
  3510                           postinc0	equ	0xFEE
  3511                           fsr0h	equ	0xFEA
  3512                           fsr0l	equ	0xFE9
  3513                           wreg	equ	0xFE8
  3514                           postdec1	equ	0xFE5
  3515                           fsr1h	equ	0xFE2
  3516                           fsr1l	equ	0xFE1
  3517                           postinc2	equ	0xFDE
  3518                           fsr2h	equ	0xFDA
  3519                           fsr2l	equ	0xFD9
  3520                           status	equ	0xFD8
  3521                           
  3522 ;; *************** function i2_TurnOffLights *****************
  3523 ;; Defined at:
  3524 ;;		line 3 in file "LedDriver.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;		None
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;		None
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  2    0[None  ] int 
  3531 ;; Registers used:
  3532 ;;		wreg, status,2, cstack
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3538 ;;      Params:         0       0       0       0       0       0       0       0       0
  3539 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3540 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3541 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3542 ;;Total ram usage:        0 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:    1
  3545 ;; This function calls:
  3546 ;;		i2_StopPWM
  3547 ;; This function is called by:
  3548 ;;		_HighISR
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text32
  3553  000EDC                     __ptext32:
  3554                           	opt stack 0
  3555  000EDC                     i2_TurnOffLights:
  3556                           	opt stack 24
  3557                           
  3558                           ;LedDriver.c: 4: StopPWM();
  3559                           
  3560                           ;incstack = 0
  3561  000EDC  EC4C  F007         	call	i2_StopPWM	;wreg free
  3562  000EE0  0012               	return		;funcret
  3563  000EE2                     __end_ofi2_TurnOffLights:
  3564                           	opt stack 0
  3565                           tosu	equ	0xFFF
  3566                           tosh	equ	0xFFE
  3567                           tosl	equ	0xFFD
  3568                           pclatu	equ	0xFFB
  3569                           pclath	equ	0xFFA
  3570                           tblptru	equ	0xFF8
  3571                           tblptrh	equ	0xFF7
  3572                           tblptrl	equ	0xFF6
  3573                           tablat	equ	0xFF5
  3574                           prodh	equ	0xFF4
  3575                           prodl	equ	0xFF3
  3576                           intcon	equ	0xFF2
  3577                           intcon2	equ	0xFF1
  3578                           intcon3	equ	0xFF0
  3579                           postinc0	equ	0xFEE
  3580                           fsr0h	equ	0xFEA
  3581                           fsr0l	equ	0xFE9
  3582                           wreg	equ	0xFE8
  3583                           postdec1	equ	0xFE5
  3584                           fsr1h	equ	0xFE2
  3585                           fsr1l	equ	0xFE1
  3586                           postinc2	equ	0xFDE
  3587                           fsr2h	equ	0xFDA
  3588                           fsr2l	equ	0xFD9
  3589                           status	equ	0xFD8
  3590                           
  3591 ;; *************** function i2_StopPWM *****************
  3592 ;; Defined at:
  3593 ;;		line 21 in file "PWM.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;		None
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;		None
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  1    wreg      void 
  3600 ;; Registers used:
  3601 ;;		wreg, status,2
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3607 ;;      Params:         0       0       0       0       0       0       0       0       0
  3608 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3609 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3610 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3611 ;;Total ram usage:        0 bytes
  3612 ;; Hardware stack levels used:    1
  3613 ;; This function calls:
  3614 ;;		Nothing
  3615 ;; This function is called by:
  3616 ;;		i2_TurnOffLights
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           	psect	text33
  3621  000E98                     __ptext33:
  3622                           	opt stack 0
  3623  000E98                     i2_StopPWM:
  3624                           	opt stack 24
  3625                           
  3626                           ;PWM.c: 22: CCP2CON=0x00;
  3627                           
  3628                           ;incstack = 0
  3629  000E98  0E00               	movlw	0
  3630  000E9A  6EBA               	movwf	4026,c	;volatile
  3631                           
  3632                           ;PWM.c: 23: T1OSCEN=0U;
  3633  000E9C  96CD               	bcf	4045,3,c	;volatile
  3634                           
  3635                           ;PWM.c: 24: (LATB3=0U);
  3636  000E9E  968A               	bcf	3978,3,c	;volatile
  3637  000EA0  0012               	return		;funcret
  3638  000EA2                     __end_ofi2_StopPWM:
  3639                           	opt stack 0
  3640                           tosu	equ	0xFFF
  3641                           tosh	equ	0xFFE
  3642                           tosl	equ	0xFFD
  3643                           pclatu	equ	0xFFB
  3644                           pclath	equ	0xFFA
  3645                           tblptru	equ	0xFF8
  3646                           tblptrh	equ	0xFF7
  3647                           tblptrl	equ	0xFF6
  3648                           tablat	equ	0xFF5
  3649                           prodh	equ	0xFF4
  3650                           prodl	equ	0xFF3
  3651                           intcon	equ	0xFF2
  3652                           intcon2	equ	0xFF1
  3653                           intcon3	equ	0xFF0
  3654                           postinc0	equ	0xFEE
  3655                           fsr0h	equ	0xFEA
  3656                           fsr0l	equ	0xFE9
  3657                           wreg	equ	0xFE8
  3658                           postdec1	equ	0xFE5
  3659                           fsr1h	equ	0xFE2
  3660                           fsr1l	equ	0xFE1
  3661                           postinc2	equ	0xFDE
  3662                           fsr2h	equ	0xFDA
  3663                           fsr2l	equ	0xFD9
  3664                           status	equ	0xFD8
  3665                           
  3666 ;; *************** function i2_TMR0_WRITE_LOW *****************
  3667 ;; Defined at:
  3668 ;;		line 79 in file "Timer_0.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;  valorLow        1    wreg     unsigned char 
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;  valorLow        1    0[COMRAM] unsigned char 
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  1    wreg      void 
  3675 ;; Registers used:
  3676 ;;		wreg
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3682 ;;      Params:         0       0       0       0       0       0       0       0       0
  3683 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3684 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3685 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3686 ;;Total ram usage:        1 bytes
  3687 ;; Hardware stack levels used:    1
  3688 ;; This function calls:
  3689 ;;		Nothing
  3690 ;; This function is called by:
  3691 ;;		_HighISR
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           	psect	text34
  3696  000EBA                     __ptext34:
  3697                           	opt stack 0
  3698  000EBA                     i2_TMR0_WRITE_LOW:
  3699                           	opt stack 25
  3700                           
  3701                           ;incstack = 0
  3702                           ;i2TMR0_WRITE_LOW@valorLow stored from wreg
  3703  000EBA  6E01               	movwf	i2TMR0_WRITE_LOW@valorLow,c
  3704                           
  3705                           ;Timer_0.c: 81: TMR0L=valorLow;
  3706  000EBC  C001  FFD6         	movff	i2TMR0_WRITE_LOW@valorLow,4054	;volatile
  3707  000EC0  0012               	return		;funcret
  3708  000EC2                     __end_ofi2_TMR0_WRITE_LOW:
  3709                           	opt stack 0
  3710                           tosu	equ	0xFFF
  3711                           tosh	equ	0xFFE
  3712                           tosl	equ	0xFFD
  3713                           pclatu	equ	0xFFB
  3714                           pclath	equ	0xFFA
  3715                           tblptru	equ	0xFF8
  3716                           tblptrh	equ	0xFF7
  3717                           tblptrl	equ	0xFF6
  3718                           tablat	equ	0xFF5
  3719                           prodh	equ	0xFF4
  3720                           prodl	equ	0xFF3
  3721                           intcon	equ	0xFF2
  3722                           intcon2	equ	0xFF1
  3723                           intcon3	equ	0xFF0
  3724                           postinc0	equ	0xFEE
  3725                           fsr0h	equ	0xFEA
  3726                           fsr0l	equ	0xFE9
  3727                           wreg	equ	0xFE8
  3728                           postdec1	equ	0xFE5
  3729                           fsr1h	equ	0xFE2
  3730                           fsr1l	equ	0xFE1
  3731                           postinc2	equ	0xFDE
  3732                           fsr2h	equ	0xFDA
  3733                           fsr2l	equ	0xFD9
  3734                           status	equ	0xFD8
  3735                           
  3736 ;; *************** function i2_TMR0_WRITE_HIGH *****************
  3737 ;; Defined at:
  3738 ;;		line 66 in file "Timer_0.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;  valorHigh       1    wreg     unsigned char 
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  valorHigh       1    0[COMRAM] unsigned char 
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  1    wreg      void 
  3745 ;; Registers used:
  3746 ;;		wreg
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3752 ;;      Params:         0       0       0       0       0       0       0       0       0
  3753 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3754 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3755 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3756 ;;Total ram usage:        1 bytes
  3757 ;; Hardware stack levels used:    1
  3758 ;; This function calls:
  3759 ;;		Nothing
  3760 ;; This function is called by:
  3761 ;;		_HighISR
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764                           
  3765                           	psect	text35
  3766  000EC2                     __ptext35:
  3767                           	opt stack 0
  3768  000EC2                     i2_TMR0_WRITE_HIGH:
  3769                           	opt stack 25
  3770                           
  3771                           ;incstack = 0
  3772                           ;i2TMR0_WRITE_HIGH@valorHigh stored from wreg
  3773  000EC2  6E01               	movwf	i2TMR0_WRITE_HIGH@valorHigh,c
  3774                           
  3775                           ;Timer_0.c: 68: TMR0H=valorHigh;
  3776  000EC4  C001  FFD7         	movff	i2TMR0_WRITE_HIGH@valorHigh,4055	;volatile
  3777  000EC8  0012               	return		;funcret
  3778  000ECA                     __end_ofi2_TMR0_WRITE_HIGH:
  3779                           	opt stack 0
  3780                           tosu	equ	0xFFF
  3781                           tosh	equ	0xFFE
  3782                           tosl	equ	0xFFD
  3783                           pclatu	equ	0xFFB
  3784                           pclath	equ	0xFFA
  3785                           tblptru	equ	0xFF8
  3786                           tblptrh	equ	0xFF7
  3787                           tblptrl	equ	0xFF6
  3788                           tablat	equ	0xFF5
  3789                           prodh	equ	0xFF4
  3790                           prodl	equ	0xFF3
  3791                           intcon	equ	0xFF2
  3792                           intcon2	equ	0xFF1
  3793                           intcon3	equ	0xFF0
  3794                           postinc0	equ	0xFEE
  3795                           fsr0h	equ	0xFEA
  3796                           fsr0l	equ	0xFE9
  3797                           wreg	equ	0xFE8
  3798                           postdec1	equ	0xFE5
  3799                           fsr1h	equ	0xFE2
  3800                           fsr1l	equ	0xFE1
  3801                           postinc2	equ	0xFDE
  3802                           fsr2h	equ	0xFDA
  3803                           fsr2l	equ	0xFD9
  3804                           status	equ	0xFD8
  3805                           
  3806 ;; *************** function _RecievingData *****************
  3807 ;; Defined at:
  3808 ;;		line 64 in file "DHT11Driver.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;		None
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;		None
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  1    wreg      void 
  3815 ;; Registers used:
  3816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3822 ;;      Params:         0       0       0       0       0       0       0       0       0
  3823 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3824 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3825 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3826 ;;Total ram usage:        2 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; This function calls:
  3829 ;;		Nothing
  3830 ;; This function is called by:
  3831 ;;		_HighISR
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           	psect	text36
  3836  000BD2                     __ptext36:
  3837                           	opt stack 0
  3838  000BD2                     _RecievingData:
  3839                           	opt stack 25
  3840                           
  3841                           ;DHT11Driver.c: 66: times[bitcount]=CCPR1-lasttime;
  3842                           
  3843                           ;incstack = 0
  3844  000BD2  C02D  F001         	movff	_lasttime,??_RecievingData
  3845  000BD6  C02E  F002         	movff	_lasttime+1,??_RecievingData+1
  3846  000BDA  1E01               	comf	??_RecievingData,f,c
  3847  000BDC  1E02               	comf	??_RecievingData+1,f,c
  3848  000BDE  4A01               	infsnz	??_RecievingData,f,c
  3849  000BE0  2A02               	incf	??_RecievingData+1,f,c
  3850  000BE2  50BE               	movf	4030,w,c	;volatile
  3851  000BE4  2601               	addwf	??_RecievingData,f,c
  3852  000BE6  50BF               	movf	4031,w,c	;volatile
  3853  000BE8  2202               	addwfc	??_RecievingData+1,f,c
  3854  000BEA  5034               	movf	_bitcount,w,c
  3855  000BEC  0D02               	mullw	2
  3856  000BEE  0E60               	movlw	low _times
  3857  000BF0  24F3               	addwf	prodl,w,c
  3858  000BF2  6ED9               	movwf	fsr2l,c
  3859  000BF4  0E00               	movlw	high _times
  3860  000BF6  20F4               	addwfc	prodh,w,c
  3861  000BF8  6EDA               	movwf	fsr2h,c
  3862  000BFA  C001  FFDE         	movff	??_RecievingData,postinc2
  3863  000BFE  C002  FFDD         	movff	??_RecievingData+1,postdec2
  3864                           
  3865                           ;DHT11Driver.c: 67: lasttime=CCPR1;
  3866  000C02  CFBE F02D          	movff	4030,_lasttime	;volatile
  3867  000C06  CFBF F02E          	movff	4031,_lasttime+1	;volatile
  3868                           
  3869                           ;DHT11Driver.c: 68: bitcount++;
  3870  000C0A  2A34               	incf	_bitcount,f,c
  3871                           
  3872                           ;DHT11Driver.c: 91: if(bitcount==40){
  3873  000C0C  0E28               	movlw	40
  3874  000C0E  1834               	xorwf	_bitcount,w,c
  3875  000C10  A4D8               	btfss	status,2,c
  3876  000C12  0012               	return	
  3877                           
  3878                           ;DHT11Driver.c: 94: T1CON--;
  3879  000C14  06CD               	decf	4045,f,c	;volatile
  3880                           
  3881                           ;DHT11Driver.c: 95: CCP1IE=0;
  3882  000C16  949D               	bcf	3997,2,c	;volatile
  3883                           
  3884                           ;DHT11Driver.c: 97: (TRISCbits.TRISC2 = 0);
  3885  000C18  9494               	bcf	3988,2,c	;volatile
  3886                           
  3887                           ;DHT11Driver.c: 99: (LATC2=1U);
  3888  000C1A  848B               	bsf	3979,2,c	;volatile
  3889                           
  3890                           ;DHT11Driver.c: 100: bitcount=0;
  3891  000C1C  0E00               	movlw	0
  3892  000C1E  6E34               	movwf	_bitcount,c
  3893                           
  3894                           ;DHT11Driver.c: 101: state = _Idle;
  3895  000C20  0E00               	movlw	0
  3896  000C22  6E41               	movwf	_state,c
  3897  000C24  0012               	return	
  3898  000C26                     __end_of_RecievingData:
  3899                           	opt stack 0
  3900                           tosu	equ	0xFFF
  3901                           tosh	equ	0xFFE
  3902                           tosl	equ	0xFFD
  3903                           pclatu	equ	0xFFB
  3904                           pclath	equ	0xFFA
  3905                           tblptru	equ	0xFF8
  3906                           tblptrh	equ	0xFF7
  3907                           tblptrl	equ	0xFF6
  3908                           tablat	equ	0xFF5
  3909                           prodh	equ	0xFF4
  3910                           prodl	equ	0xFF3
  3911                           intcon	equ	0xFF2
  3912                           intcon2	equ	0xFF1
  3913                           intcon3	equ	0xFF0
  3914                           postinc0	equ	0xFEE
  3915                           fsr0h	equ	0xFEA
  3916                           fsr0l	equ	0xFE9
  3917                           wreg	equ	0xFE8
  3918                           postdec1	equ	0xFE5
  3919                           fsr1h	equ	0xFE2
  3920                           fsr1l	equ	0xFE1
  3921                           postinc2	equ	0xFDE
  3922                           postdec2	equ	0xFDD
  3923                           fsr2h	equ	0xFDA
  3924                           fsr2l	equ	0xFD9
  3925                           status	equ	0xFD8
  3926                           
  3927 ;; *************** function _DHTSignalResponse *****************
  3928 ;; Defined at:
  3929 ;;		line 52 in file "DHT11Driver.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;		None
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;		None
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  1    wreg      void 
  3936 ;; Registers used:
  3937 ;;		wreg, status,2, status,0
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3943 ;;      Params:         0       0       0       0       0       0       0       0       0
  3944 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3945 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3946 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3947 ;;Total ram usage:        0 bytes
  3948 ;; Hardware stack levels used:    1
  3949 ;; This function calls:
  3950 ;;		Nothing
  3951 ;; This function is called by:
  3952 ;;		_HighISR
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           	psect	text37
  3957  000D8C                     __ptext37:
  3958                           	opt stack 0
  3959  000D8C                     _DHTSignalResponse:
  3960                           	opt stack 25
  3961                           
  3962                           ;DHT11Driver.c: 53: T1CON--;
  3963                           
  3964                           ;incstack = 0
  3965  000D8C  06CD               	decf	4045,f,c	;volatile
  3966                           
  3967                           ;DHT11Driver.c: 54: TMR1H=0;
  3968  000D8E  0E00               	movlw	0
  3969  000D90  6ECF               	movwf	4047,c	;volatile
  3970                           
  3971                           ;DHT11Driver.c: 55: TMR1L=0;
  3972  000D92  0E00               	movlw	0
  3973  000D94  6ECE               	movwf	4046,c	;volatile
  3974                           
  3975                           ;DHT11Driver.c: 56: CCPR1=0;
  3976  000D96  0E00               	movlw	0
  3977  000D98  6EBF               	movwf	4031,c	;volatile
  3978  000D9A  0E00               	movlw	0
  3979  000D9C  6EBE               	movwf	4030,c	;volatile
  3980                           
  3981                           ;DHT11Driver.c: 57: T1CON++;
  3982  000D9E  2ACD               	incf	4045,f,c	;volatile
  3983                           
  3984                           ;DHT11Driver.c: 59: lasttime=CCPR1;
  3985  000DA0  CFBE F02D          	movff	4030,_lasttime	;volatile
  3986  000DA4  CFBF F02E          	movff	4031,_lasttime+1	;volatile
  3987                           
  3988                           ;DHT11Driver.c: 61: state=_RecievingData;
  3989  000DA8  0E04               	movlw	4
  3990  000DAA  6E41               	movwf	_state,c
  3991  000DAC  0012               	return		;funcret
  3992  000DAE                     __end_of_DHTSignalResponse:
  3993                           	opt stack 0
  3994                           tosu	equ	0xFFF
  3995                           tosh	equ	0xFFE
  3996                           tosl	equ	0xFFD
  3997                           pclatu	equ	0xFFB
  3998                           pclath	equ	0xFFA
  3999                           tblptru	equ	0xFF8
  4000                           tblptrh	equ	0xFF7
  4001                           tblptrl	equ	0xFF6
  4002                           tablat	equ	0xFF5
  4003                           prodh	equ	0xFF4
  4004                           prodl	equ	0xFF3
  4005                           intcon	equ	0xFF2
  4006                           intcon2	equ	0xFF1
  4007                           intcon3	equ	0xFF0
  4008                           postinc0	equ	0xFEE
  4009                           fsr0h	equ	0xFEA
  4010                           fsr0l	equ	0xFE9
  4011                           wreg	equ	0xFE8
  4012                           postdec1	equ	0xFE5
  4013                           fsr1h	equ	0xFE2
  4014                           fsr1l	equ	0xFE1
  4015                           postinc2	equ	0xFDE
  4016                           postdec2	equ	0xFDD
  4017                           fsr2h	equ	0xFDA
  4018                           fsr2l	equ	0xFD9
  4019                           status	equ	0xFD8
  4020                           
  4021 ;; *************** function _FirstStateRequest *****************
  4022 ;; Defined at:
  4023 ;;		line 22 in file "DHT11Driver.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;		None
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;		None
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      void 
  4030 ;; Registers used:
  4031 ;;		wreg, status,2, status,0
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4037 ;;      Params:         0       0       0       0       0       0       0       0       0
  4038 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4039 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4040 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4041 ;;Total ram usage:        0 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; This function calls:
  4044 ;;		Nothing
  4045 ;; This function is called by:
  4046 ;;		_HighISR
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           	psect	text38
  4051  000CE8                     __ptext38:
  4052                           	opt stack 0
  4053  000CE8                     _FirstStateRequest:
  4054                           	opt stack 25
  4055                           
  4056                           ;DHT11Driver.c: 24: CCP1IE=1U;
  4057                           
  4058                           ;incstack = 0
  4059  000CE8  849D               	bsf	3997,2,c	;volatile
  4060                           
  4061                           ;DHT11Driver.c: 27: CCP1CON=0x08;
  4062  000CEA  0E08               	movlw	8
  4063  000CEC  6EBD               	movwf	4029,c	;volatile
  4064                           
  4065                           ;DHT11Driver.c: 29: TMR1H=0;
  4066  000CEE  0E00               	movlw	0
  4067  000CF0  6ECF               	movwf	4047,c	;volatile
  4068                           
  4069                           ;DHT11Driver.c: 30: TMR1L=0;
  4070  000CF2  0E00               	movlw	0
  4071  000CF4  6ECE               	movwf	4046,c	;volatile
  4072                           
  4073                           ;DHT11Driver.c: 32: counts=TMR1+18000;
  4074  000CF6  0E50               	movlw	80
  4075  000CF8  24CE               	addwf	4046,w,c	;volatile
  4076  000CFA  6E2B               	movwf	_counts,c
  4077  000CFC  0E46               	movlw	70
  4078  000CFE  20CF               	addwfc	4047,w,c	;volatile
  4079  000D00  6E2C               	movwf	_counts+1,c
  4080                           
  4081                           ;DHT11Driver.c: 33: T3CON=0b10100000;
  4082  000D02  0EA0               	movlw	160
  4083  000D04  6EB1               	movwf	4017,c	;volatile
  4084                           
  4085                           ;DHT11Driver.c: 34: T1CON=0b11001000;
  4086  000D06  0EC8               	movlw	200
  4087  000D08  6ECD               	movwf	4045,c	;volatile
  4088                           
  4089                           ;DHT11Driver.c: 36: (TRISCbits.TRISC2 = 0);
  4090  000D0A  9494               	bcf	3988,2,c	;volatile
  4091                           
  4092                           ;DHT11Driver.c: 39: CCPR1H=counts>>8;
  4093  000D0C  502C               	movf	_counts+1,w,c
  4094  000D0E  6EBF               	movwf	4031,c	;volatile
  4095                           
  4096                           ;DHT11Driver.c: 40: CCPR1L=(u8)counts;
  4097  000D10  C02B  FFBE         	movff	_counts,4030	;volatile
  4098                           
  4099                           ;DHT11Driver.c: 42: T1CON++;
  4100  000D14  2ACD               	incf	4045,f,c	;volatile
  4101                           
  4102                           ;DHT11Driver.c: 43: state = _SecondStateRequest;
  4103  000D16  0E02               	movlw	2
  4104  000D18  6E41               	movwf	_state,c
  4105  000D1A  0012               	return		;funcret
  4106  000D1C                     __end_of_FirstStateRequest:
  4107                           	opt stack 0
  4108                           tosu	equ	0xFFF
  4109                           tosh	equ	0xFFE
  4110                           tosl	equ	0xFFD
  4111                           pclatu	equ	0xFFB
  4112                           pclath	equ	0xFFA
  4113                           tblptru	equ	0xFF8
  4114                           tblptrh	equ	0xFF7
  4115                           tblptrl	equ	0xFF6
  4116                           tablat	equ	0xFF5
  4117                           prodh	equ	0xFF4
  4118                           prodl	equ	0xFF3
  4119                           intcon	equ	0xFF2
  4120                           intcon2	equ	0xFF1
  4121                           intcon3	equ	0xFF0
  4122                           postinc0	equ	0xFEE
  4123                           fsr0h	equ	0xFEA
  4124                           fsr0l	equ	0xFE9
  4125                           wreg	equ	0xFE8
  4126                           postdec1	equ	0xFE5
  4127                           fsr1h	equ	0xFE2
  4128                           fsr1l	equ	0xFE1
  4129                           postinc2	equ	0xFDE
  4130                           postdec2	equ	0xFDD
  4131                           fsr2h	equ	0xFDA
  4132                           fsr2l	equ	0xFD9
  4133                           status	equ	0xFD8
  4134                           
  4135 ;; *************** function _Idle *****************
  4136 ;; Defined at:
  4137 ;;		line 19 in file "DHT11Driver.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;		None
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;		None
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  1    wreg      void 
  4144 ;; Registers used:
  4145 ;;		None
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4151 ;;      Params:         0       0       0       0       0       0       0       0       0
  4152 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4153 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4154 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4155 ;;Total ram usage:        0 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; This function calls:
  4158 ;;		Nothing
  4159 ;; This function is called by:
  4160 ;;		_HighISR
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           	psect	text39
  4165  000EE6                     __ptext39:
  4166                           	opt stack 0
  4167  000EE6                     _Idle:
  4168                           	opt stack 25
  4169                           
  4170                           ;incstack = 0
  4171  000EE6  0012               	return		;funcret
  4172  000EE8                     __end_of_Idle:
  4173                           	opt stack 0
  4174                           tosu	equ	0xFFF
  4175                           tosh	equ	0xFFE
  4176                           tosl	equ	0xFFD
  4177                           pclatu	equ	0xFFB
  4178                           pclath	equ	0xFFA
  4179                           tblptru	equ	0xFF8
  4180                           tblptrh	equ	0xFF7
  4181                           tblptrl	equ	0xFF6
  4182                           tablat	equ	0xFF5
  4183                           prodh	equ	0xFF4
  4184                           prodl	equ	0xFF3
  4185                           intcon	equ	0xFF2
  4186                           intcon2	equ	0xFF1
  4187                           intcon3	equ	0xFF0
  4188                           postinc0	equ	0xFEE
  4189                           fsr0h	equ	0xFEA
  4190                           fsr0l	equ	0xFE9
  4191                           wreg	equ	0xFE8
  4192                           postdec1	equ	0xFE5
  4193                           fsr1h	equ	0xFE2
  4194                           fsr1l	equ	0xFE1
  4195                           postinc2	equ	0xFDE
  4196                           postdec2	equ	0xFDD
  4197                           fsr2h	equ	0xFDA
  4198                           fsr2l	equ	0xFD9
  4199                           status	equ	0xFD8
  4200                           
  4201 ;; *************** function _SecondStateRequest *****************
  4202 ;; Defined at:
  4203 ;;		line 45 in file "DHT11Driver.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;		None
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;		None
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  1    wreg      void 
  4210 ;; Registers used:
  4211 ;;		wreg, status,2
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4217 ;;      Params:         0       0       0       0       0       0       0       0       0
  4218 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4220 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4221 ;;Total ram usage:        0 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; This function calls:
  4224 ;;		Nothing
  4225 ;; This function is called by:
  4226 ;;		_HighISR
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           	psect	text40
  4231  000E50                     __ptext40:
  4232                           	opt stack 0
  4233  000E50                     _SecondStateRequest:
  4234                           	opt stack 25
  4235                           
  4236                           ;DHT11Driver.c: 46: CCP1CON=0x04;
  4237                           
  4238                           ;incstack = 0
  4239  000E50  0E04               	movlw	4
  4240  000E52  6EBD               	movwf	4029,c	;volatile
  4241                           
  4242                           ;DHT11Driver.c: 48: (TRISCbits.TRISC2 = 1);
  4243  000E54  8494               	bsf	3988,2,c	;volatile
  4244                           
  4245                           ;DHT11Driver.c: 49: state = _DHTSignalResponse;
  4246  000E56  0E03               	movlw	3
  4247  000E58  6E41               	movwf	_state,c
  4248  000E5A  0012               	return		;funcret
  4249  000E5C                     __end_of_SecondStateRequest:
  4250                           	opt stack 0
  4251                           tosu	equ	0xFFF
  4252                           tosh	equ	0xFFE
  4253                           tosl	equ	0xFFD
  4254                           pclatu	equ	0xFFB
  4255                           pclath	equ	0xFFA
  4256                           tblptru	equ	0xFF8
  4257                           tblptrh	equ	0xFF7
  4258                           tblptrl	equ	0xFF6
  4259                           tablat	equ	0xFF5
  4260                           prodh	equ	0xFF4
  4261                           prodl	equ	0xFF3
  4262                           intcon	equ	0xFF2
  4263                           intcon2	equ	0xFF1
  4264                           intcon3	equ	0xFF0
  4265                           postinc0	equ	0xFEE
  4266                           fsr0h	equ	0xFEA
  4267                           fsr0l	equ	0xFE9
  4268                           wreg	equ	0xFE8
  4269                           postdec1	equ	0xFE5
  4270                           fsr1h	equ	0xFE2
  4271                           fsr1l	equ	0xFE1
  4272                           postinc2	equ	0xFDE
  4273                           postdec2	equ	0xFDD
  4274                           fsr2h	equ	0xFDA
  4275                           fsr2l	equ	0xFD9
  4276                           status	equ	0xFD8
  4277                           tosu	equ	0xFFF
  4278                           tosh	equ	0xFFE
  4279                           tosl	equ	0xFFD
  4280                           pclatu	equ	0xFFB
  4281                           pclath	equ	0xFFA
  4282                           tblptru	equ	0xFF8
  4283                           tblptrh	equ	0xFF7
  4284                           tblptrl	equ	0xFF6
  4285                           tablat	equ	0xFF5
  4286                           prodh	equ	0xFF4
  4287                           prodl	equ	0xFF3
  4288                           intcon	equ	0xFF2
  4289                           intcon2	equ	0xFF1
  4290                           intcon3	equ	0xFF0
  4291                           postinc0	equ	0xFEE
  4292                           fsr0h	equ	0xFEA
  4293                           fsr0l	equ	0xFE9
  4294                           wreg	equ	0xFE8
  4295                           postdec1	equ	0xFE5
  4296                           fsr1h	equ	0xFE2
  4297                           fsr1l	equ	0xFE1
  4298                           postinc2	equ	0xFDE
  4299                           postdec2	equ	0xFDD
  4300                           fsr2h	equ	0xFDA
  4301                           fsr2l	equ	0xFD9
  4302                           status	equ	0xFD8
  4303                           
  4304                           	psect	text41
  4305  000000                     __ptext41:
  4306                           	opt stack 0
  4307                           tosu	equ	0xFFF
  4308                           tosh	equ	0xFFE
  4309                           tosl	equ	0xFFD
  4310                           pclatu	equ	0xFFB
  4311                           pclath	equ	0xFFA
  4312                           tblptru	equ	0xFF8
  4313                           tblptrh	equ	0xFF7
  4314                           tblptrl	equ	0xFF6
  4315                           tablat	equ	0xFF5
  4316                           prodh	equ	0xFF4
  4317                           prodl	equ	0xFF3
  4318                           intcon	equ	0xFF2
  4319                           intcon2	equ	0xFF1
  4320                           intcon3	equ	0xFF0
  4321                           postinc0	equ	0xFEE
  4322                           fsr0h	equ	0xFEA
  4323                           fsr0l	equ	0xFE9
  4324                           wreg	equ	0xFE8
  4325                           postdec1	equ	0xFE5
  4326                           fsr1h	equ	0xFE2
  4327                           fsr1l	equ	0xFE1
  4328                           postinc2	equ	0xFDE
  4329                           postdec2	equ	0xFDD
  4330                           fsr2h	equ	0xFDA
  4331                           fsr2l	equ	0xFD9
  4332                           status	equ	0xFD8
  4333                           
  4334                           	psect	rparam
  4335  0000                     tosu	equ	0xFFF
  4336                           tosh	equ	0xFFE
  4337                           tosl	equ	0xFFD
  4338                           pclatu	equ	0xFFB
  4339                           pclath	equ	0xFFA
  4340                           tblptru	equ	0xFF8
  4341                           tblptrh	equ	0xFF7
  4342                           tblptrl	equ	0xFF6
  4343                           tablat	equ	0xFF5
  4344                           prodh	equ	0xFF4
  4345                           prodl	equ	0xFF3
  4346                           intcon	equ	0xFF2
  4347                           intcon2	equ	0xFF1
  4348                           intcon3	equ	0xFF0
  4349                           postinc0	equ	0xFEE
  4350                           fsr0h	equ	0xFEA
  4351                           fsr0l	equ	0xFE9
  4352                           wreg	equ	0xFE8
  4353                           postdec1	equ	0xFE5
  4354                           fsr1h	equ	0xFE2
  4355                           fsr1l	equ	0xFE1
  4356                           postinc2	equ	0xFDE
  4357                           postdec2	equ	0xFDD
  4358                           fsr2h	equ	0xFDA
  4359                           fsr2l	equ	0xFD9
  4360                           status	equ	0xFD8
  4361                           
  4362                           	psect	temp
  4363  00004C                     btemp:
  4364                           	opt stack 0
  4365  00004C                     	ds	1
  4366  0000                     int$flags	set	btemp
  4367                           tosu	equ	0xFFF
  4368                           tosh	equ	0xFFE
  4369                           tosl	equ	0xFFD
  4370                           pclatu	equ	0xFFB
  4371                           pclath	equ	0xFFA
  4372                           tblptru	equ	0xFF8
  4373                           tblptrh	equ	0xFF7
  4374                           tblptrl	equ	0xFF6
  4375                           tablat	equ	0xFF5
  4376                           prodh	equ	0xFF4
  4377                           prodl	equ	0xFF3
  4378                           intcon	equ	0xFF2
  4379                           intcon2	equ	0xFF1
  4380                           intcon3	equ	0xFF0
  4381                           postinc0	equ	0xFEE
  4382                           fsr0h	equ	0xFEA
  4383                           fsr0l	equ	0xFE9
  4384                           wreg	equ	0xFE8
  4385                           postdec1	equ	0xFE5
  4386                           fsr1h	equ	0xFE2
  4387                           fsr1l	equ	0xFE1
  4388                           postinc2	equ	0xFDE
  4389                           postdec2	equ	0xFDD
  4390                           fsr2h	equ	0xFDA
  4391                           fsr2l	equ	0xFD9
  4392                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    2
    Data        18
    BSS         118
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      75
    BANK0           160     18     114
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    DHT_StateMachine	PTR FTN()void [5] size(2) Largest target is 1
		 -> RecievingData(), DHTSignalResponse(), SecondStateRequest(), FirstStateRequest(), 
		 -> Idle(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_TurnOnLights->i2_SetPWM
    i2_SetPWM->i2_SetDutyCycle
    i2_SetDutyCycle->i2___awdiv
    i2___awdiv->i2___wmul

Critical Paths under _main in BANK0

    _TurnOnLights->_SetPWM
    _SetPWM->_SetDutyCycle
    _SetDutyCycle->___awdiv
    ___awdiv->___wmul

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1235
                    _InitDHT11Driver
                     _Interrupt_Init
                          _TMR0_INIT
                    _TMR0_WRITE_HIGH
                     _TMR0_WRITE_LOW
                      _TurnOffLights
                       _TurnOnLights
 ---------------------------------------------------------------------------------
 (1) _TurnOnLights                                         0     0      0    1137
                             _SetPWM
                           _StartPWM
 ---------------------------------------------------------------------------------
 (2) _StartPWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SetPWM                                               1     1      0    1137
                                             17 BANK0      1     1      0
                       _SetDutyCycle
                          _SetPeriod
 ---------------------------------------------------------------------------------
 (3) _SetPeriod                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SetDutyCycle                                         3     3      0    1106
                                             14 BANK0      3     3      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     476
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     599
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _TurnOffLights                                        0     0      0       0
                            _StopPWM
 ---------------------------------------------------------------------------------
 (2) _StopPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WRITE_LOW                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WRITE_HIGH                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_INIT                                            2     2      0      54
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Interrupt_Init                                       0     0      0       0
                        _INIT_INTCON
                       _INIT_INTCON2
                       _INIT_INTCON3
                          _INIT_IPR1
                          _INIT_IPR2
                          _INIT_PIE1
                          _INIT_PIE2
                          _INIT_RCON
 ---------------------------------------------------------------------------------
 (2) _INIT_RCON                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_PIE2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_PIE1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_IPR2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_IPR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_INTCON3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_INTCON2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_INTCON                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitDHT11Driver                                      0     0      0       0
                    _ConfigureTimer1
 ---------------------------------------------------------------------------------
 (2) _ConfigureTimer1                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighISR                                             16    16      0     649
                                             18 COMRAM    16    16      0
                  _DHTSignalResponse *
                  _FirstStateRequest *
                               _Idle *
                      _RecievingData *
                 _SecondStateRequest *
                  i2_TMR0_WRITE_HIGH
                   i2_TMR0_WRITE_LOW
                    i2_TurnOffLights
                     i2_TurnOnLights
 ---------------------------------------------------------------------------------
 (6) i2_TurnOnLights                                       0     0      0     605
                           i2_SetPWM
                         i2_StartPWM
 ---------------------------------------------------------------------------------
 (7) i2_StartPWM                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i2_SetPWM                                             1     1      0     605
                                             17 COMRAM     1     1      0
                     i2_SetDutyCycle
                        i2_SetPeriod
 ---------------------------------------------------------------------------------
 (8) i2_SetPeriod                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_SetDutyCycle                                       3     3      0     583
                                             14 COMRAM     3     3      0
                          i2___awdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (9) i2___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) i2___awdiv                                            8     4      4     352
                                              6 COMRAM     8     4      4
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) i2_TurnOffLights                                      0     0      0       0
                          i2_StopPWM
 ---------------------------------------------------------------------------------
 (7) i2_StopPWM                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) i2_TMR0_WRITE_LOW                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) i2_TMR0_WRITE_HIGH                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _SecondStateRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RecievingData                                        2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _Idle                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _FirstStateRequest                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _DHTSignalResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitDHT11Driver
     _ConfigureTimer1
   _Interrupt_Init
     _INIT_INTCON
     _INIT_INTCON2
     _INIT_INTCON3
     _INIT_IPR1
     _INIT_IPR2
     _INIT_PIE1
     _INIT_PIE2
     _INIT_RCON
   _TMR0_INIT
   _TMR0_WRITE_HIGH
   _TMR0_WRITE_LOW
   _TurnOffLights
     _StopPWM
   _TurnOnLights
     _SetPWM
       _SetDutyCycle
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _SetPeriod
     _StartPWM

 _HighISR (ROOT)
   _DHTSignalResponse *
   _FirstStateRequest *
   _Idle *
   _RecievingData *
   _SecondStateRequest *
   i2_TMR0_WRITE_HIGH *
   i2_TMR0_WRITE_LOW *
   i2_TurnOffLights *
     i2_StopPWM
   i2_TurnOnLights *
     i2_SetPWM
       i2_SetDutyCycle
         i2___awdiv
           i2___wmul (ARG)
         i2___wmul
       i2_SetPeriod
     i2_StartPWM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     12      72       5       71.3%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     22      4B       1       79.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BD      20        0.0%
DATA                 0      0      BD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Wed Apr 27 17:44:28 2016

           ??_Interrupt_Init 00B6                   i2_StartPWM 0EB2                  __CFG_CP0$ON 000000  
                __CFG_CP1$ON 000000                  __CFG_CP2$ON 000000                  __CFG_CP3$ON 000000  
                __CFG_CPB$ON 000000                  __CFG_CPD$ON 000000                 ___awdiv@sign 00C1  
        ___wmul@multiplicand 00B8                  __CFG_BORV$3 000000        __size_of_TurnOnLights 000C  
                __CFG_LVP$ON 000000                          l123 0C5A                          l358 0CAC  
              _MinLightValue 0047                          _PR2 000FCB                          _RX9 007D5E  
                        _LSb 0023                          _TX9 007D66                          _MSb 0027  
   TMR0_WRITE_HIGH@valorHigh 00B6                          prod 000FF3       __size_of_TurnOffLights 0006  
                        tosl 000FFD                          wreg 000FE8                 _f_Send2Bytes 025C  
            ?i2_SetDutyCycle 0001                 __CFG_WDT$OFF 000000                         l1801 0974  
                       l1813 09A8                         l1815 09B4                         l1807 098A  
                       l1833 0A0C                         l1825 09EA                         l1817 09BA  
                       l1829 09F8                         l1961 0C48                         l1891 0C8C  
                       l1895 0C9C                         _ADIF 007CF6                         _BRGH 007D62  
                       _T0IF 007F92                         _CREN 007D5C                         _CSRC 007D67  
               ?_INIT_INTCON 0001                         _TMR0 000FD6                         _TMR1 000FCE  
                       _SPEN 007D5F                         _SREN 007D5D                         _TXEN 007D65  
                       _SYNC 007D64                         _Idle 0EE6                 __CFG_WRT0$ON 000000  
               __CFG_WRT1$ON 000000                 __CFG_WRT2$ON 000000                 __CFG_WRT3$ON 000000  
              __CFG_EBTR0$ON 000000                __CFG_EBTR1$ON 000000                __CFG_EBTR2$ON 000000  
              __CFG_EBTR3$ON 000000                 __CFG_WRTB$ON 000000                 __CFG_WRTC$ON 000000  
              __CFG_BOR$SOFT 000000                 __CFG_WRTD$ON 000000                __CFG_EBTRB$ON 000000  
                       _main 0C26                         _mask 003E                         _temp 00B0  
                       _time 0042                         fsr0h 000FEA    __size_ofi2_TMR0_WRITE_LOW 0008  
                       fsr1h 000FE2                         fsr0l 000FE9                         fsr2h 000FDA  
                       fsr1l 000FE1                         fsr2l 000FD9           _IntegerTemperature 0032  
                       btemp 004C                         pclat 000FFA                         prodh 000FF4  
                       prodl 000FF3                         start 0016                __CFG_IESO$OFF 000000  
         __size_of_INIT_IPR1 0010           __size_of_INIT_IPR2 000E           __size_of_INIT_PIE1 0010  
         __size_of_INIT_PIE2 000E              __end_of_HighISR 0958           __size_of_INIT_RCON 0004  
               _TurnOnLights 0E2C                 ___param_bank 000010      __size_ofi2_TurnOnLights 000C  
              __CFG_PLLDIV$1 000000                        ?_Idle 0001             ?_TMR0_WRITE_HIGH 0001  
            __end_of_StopPWM 0E70                        _ADDEN 007D5B                        ?_main 0001  
            __end_of___awdiv 0A16                        _ADRES 000FC3                        _CCPR1 000FBE  
                      _BRG16 007DC3                        _T0CON 000FD5              ___awdiv@divisor 00BE  
                      _T1CON 000FCD                        _T2CON 000FCA                        _LATA0 007C48  
                      _LATB3 007C53                        _LATC2 007C5A                        _T3CON 000FB1  
              ?_INIT_INTCON2 0001                ?_INIT_INTCON3 0001                        _T1RUN 007E6E  
                      i2l104 084C                        i2l116 08BE                        i2l119 091C  
            ___awdiv@counter 00C0                        _SENDB 007D63                        _TMR0H 000FD7  
                      _TMR1H 000FCF                        _TMR0L 000FD6                        _TMR1L 000FCE  
                      _SPBRG 000FAF                __CFG_USBDIV$1 000000                __CFG_PWRT$OFF 000000  
         __size_of_TMR0_INIT 0028               __CFG_FCMEN$OFF 000000                        _frame 003D  
                      _dummy 0037             __end_ofi2_SetPWM 0DE2                        _times 0060  
                      _state 0041               __pbitbssCOMRAM 0258                        pclath 000FFA  
                      tablat 000FF5             __end_ofi2___wmul 0D6A                        status 000FD8  
         __size_ofi2_StopPWM 000A           __size_ofi2___awdiv 0084                _TurnOffLights 0ED0  
            _ConfigureTimer1 0C6C               __CFG_MCLRE$OFF 000000                 __end_of_Idle 0EE8  
            __initialization 0B08                   _LightValue 0025     __size_of_InitDHT11Driver 000A  
               __end_of_main 0C6C                  ?i2_StartPWM 0001              SetPWM@dutycycle 00C7  
    i2SetDutyCycle@dutycycle 0011                       ??_Idle 0001     __size_ofi2_TurnOffLights 0006  
                     ??_main 00C8               ??_INIT_INTCON2 00B6               ??_INIT_INTCON3 00B6  
              __activetblptr 000002            __end_of_INIT_IPR1 0E02            __end_of_INIT_IPR2 0E1E  
          __end_of_INIT_PIE1 0DF2            __end_of_INIT_PIE2 0E10            __end_of_INIT_RCON 0EE6  
            __CFG_CCP2MX$OFF 000000             __end_of_StartPWM 0EB2                       _CCP1IE 007CEA  
                     _CCP1IF 007CF2                       _CCPR1H 000FBF                       _CCPR1L 000FBE  
                     _CCPR2L 000FBB             ___awdiv@dividend 00BC  __size_of_SecondStateRequest 000C  
                     _INT2IF 007F81                       i2l1531 0A58                       i2l1523 0A3A  
                     i2l1541 0A78                       i2l1533 0A5C                       i2l1517 0A2A  
                     i2l1703 0872                       i2l1529 0A50                       i2l1545 0A82  
                     i2l1721 08AC                       i2l1715 089E                       i2l1723 08AE  
                     i2l1549 0A90                       i2l1733 08DC                       i2l1741 08EE  
                     i2l1709 0888                       i2l1735 08E0                       i2l1693 0856  
                     _OSCCON 000FD3                    ??_HighISR 0013                       _TMR0IF 007F92  
                     _TMR1CS 007E69                       _TMR0ON 007EAF                       _TMR1ON 007E68  
             ?_TurnOffLights 0001                       __SPBRG 0802                       _Door_f 0258  
                     _SetPWM 0DAE               __CFG_XINST$OFF 000000       __size_of_RecievingData 0054  
            SerialCOM@_SPBRG 0801            __end_of_TMR0_INIT 0D44                    ??_StopPWM 00B6  
                     ___wmul 0CB2                    ??___awdiv 00C0               __CFG_STVREN$ON 000000  
         __size_of_SetPeriod 0006                       _counts 002B                       clear_0 0B0E  
                     clear_1 0B1C             ___awdiv@quotient 00C2      __size_of_TMR0_WRITE_LOW 000A  
             i2___awdiv@sign 000C            __end_ofi2_StopPWM 0EA2                 __pdataCOMRAM 0043  
                 _f_SSPReady 025B            __end_ofi2___awdiv 0A9A                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
              ?_SetDutyCycle 0001          __size_ofi2_StartPWM 0008      __end_of_ConfigureTimer1 0CB2  
                 __accesstop 0060      __end_of__initialization 0B62              __CFG_PBADEN$OFF 000000  
           i2_TMR0_WRITE_LOW 0EBA         __size_of_INIT_INTCON 000C                 ?i2_SetPeriod 0001  
              ___rparam_used 000001                   _f_SendByte 025D               __pcstackCOMRAM 0001  
               _f_frameready 0038                 __pidataBANK0 0E5C               i2_TurnOnLights 0E44  
                  ?i2_SetPWM 0001            ??_InitDHT11Driver 00B6                    ?i2___wmul 0001  
           ??i2_SetDutyCycle 000F                _RecievingData 0BD2               ??_SetDutyCycle 00C4  
          ??i2_TurnOffLights 0001            __end_of_SetPeriod 0ED0                   __pbssBANK0 0060  
    __end_ofSerialCOM@_SPBRG 0802              ??_TurnOffLights 00B6         __end_of_INIT_INTCON2 0E2C  
       __end_of_INIT_INTCON3 0E8E              _DecimalHumidity 002F                      ?_SetPWM 0001  
     __end_ofi2_TurnOnLights 0E50                      ?___wmul 00B6                    ?_StartPWM 0001  
                    _CCP1CON 000FBD                      _CCP2CON 000FBA                   ??i2_SetPWM 0012  
          _FirstStateRequest 0CE8                   ??i2___wmul 0005                      _T1OSCEN 007E6B  
                    _INTEDG2 007F8C               ?_RecievingData 0001           ?_FirstStateRequest 0001  
                    i2u63_48 08C8                      i2u65_48 0908          ??_FirstStateRequest 0001  
            __CFG_VREGEN$OFF 000000             ?_ConfigureTimer1 0001                      _HighISR 0008  
                    _Light_f 0259                      _Night_f 025A                      __Hparam 0000  
                    __Lparam 0000                   _firstvalue 003B              __size_of_SetPWM 001C  
            ?i2_TurnOnLights 0001                      _StopPWM 0E66                      ___awdiv 0958  
               ??i2_StartPWM 0001                   ??_StartPWM 00B6              __size_of___wmul 0036  
               __psmallconst 0800    __end_of_FirstStateRequest 0D1C                      __pcinit 0B08  
             _TMR0_WRITE_LOW 0E70                      __ramtop 0800                      __ptext0 0C26  
                    __ptext1 0E2C                      __ptext2 0EAA                      __ptext3 0DAE  
                    __ptext4 0ECA                      __ptext5 0A9A                      __ptext6 0CB2  
                    __ptext7 0958                      __ptext8 0ED0                      __ptext9 0E66  
                    _endbyte 0048                    _T1CONbits 000FCD                      _counter 0036  
    __size_of_Interrupt_Init 0022     __size_of_TMR0_WRITE_HIGH 000A               __pintcode_body 0804  
     TMR0_WRITE_LOW@valorLow 00B6         end_of_initialization 0B62                    _INIT_IPR1 0DF2  
                  _INIT_IPR2 0E10                    _INIT_PIE1 0DE2                    _INIT_PIE2 0E02  
                  _INIT_RCON 0EE2           __end_ofi2_StartPWM 0EBA                __Lmediumconst 0000  
                    int_func 0804          i2___wmul@multiplier 0001         __size_ofi2_SetPeriod 0006  
       __end_of_SetDutyCycle 0B08                      postdec1 000FE5                      postdec2 000FDD  
                    postinc0 000FEE                      postinc2 000FDE       __end_of_TMR0_WRITE_LOW 0E7A  
                  _TMR0_INIT 0D1C                    _PORTAbits 000F80              ??_RecievingData 0001  
   __end_ofi2_TMR0_WRITE_LOW 0EC2                    _TRISAbits 000F92                    _TRISBbits 000F93  
                  _TRISCbits 000F94   __end_of_SecondStateRequest 0E5C                    i2_StopPWM 0E98  
          i2_TMR0_WRITE_HIGH 0EC2                    i2___awdiv 0A16             _firstvaluespaces 003C  
      __size_of_INIT_INTCON2 000E        __size_of_INIT_INTCON3 000A                   ?_INIT_IPR1 0001  
                 ?_INIT_IPR2 0001                   ?_INIT_PIE1 0001                   ?_INIT_PIE2 0001  
                 ?_INIT_RCON 0001           ?i2_TMR0_WRITE_HIGH 0001           i2___awdiv@dividend 0007  
        ??i2_TMR0_WRITE_HIGH 0001              _InitDHT11Driver 0E8E               __end_of__SPBRG 0803  
             __end_of_SetPWM 0DCA              ?_TMR0_WRITE_LOW 0001   __size_of_FirstStateRequest 0034  
             __end_of___wmul 0CE8                   ?_TMR0_INIT 0001              i2_TurnOffLights 0EDC  
           _DHT_StateMachine 00C8                __pidataCOMRAM 0EA2            __size_ofi2_SetPWM 0018  
           i2___wmul@product 0005                 _INIT_INTCON2 0E1E                 _INIT_INTCON3 0E84  
          _secondvaluespaces 0040          start_initialization 0B08    __end_ofi2_TMR0_WRITE_HIGH 0ECA  
         i2___awdiv@quotient 000D            __size_ofi2___wmul 0026                   ?i2_StopPWM 0001  
                 ?i2___awdiv 0007                ??_INIT_INTCON 00B6            ??_TMR0_WRITE_HIGH 00B6  
                  _SetPeriod 0ECA                     ??_SetPWM 00C7                ?_TurnOnLights 0001  
                   ??___wmul 00BA                  __pdataBANK0 00C8             __CFG_LPT1OSC$OFF 000000  
              TMR0_INIT@T0PS 00B7            __size_of_StartPWM 0008                TMR0_INIT@bits 00B6  
             _Interrupt_Init 0D6A                  __pbssCOMRAM 0023                __pcstackBANK0 00B6  
          _DHTSignalResponse 0D8C                  ??_INIT_IPR1 00B6                  ??_INIT_IPR2 00B6  
                ??_INIT_PIE1 00B6                  ??_INIT_PIE2 00B6           ?_DHTSignalResponse 0001  
                ??_INIT_RCON 00B6      __end_of_InitDHT11Driver 0E98                     ?_HighISR 0001  
      __size_of_SetDutyCycle 006E             ??i2_TurnOnLights 0013                   ?_SetPeriod 0001  
      __end_of_TurnOffLights 0ED6          ??_DHTSignalResponse 0001               ??_TurnOnLights 00C8  
        __end_of_INIT_INTCON 0E44      __end_ofi2_TurnOffLights 0EE2                    __pintcode 0008  
                   ?_StopPWM 0001                     ?___awdiv 00BC                  ??_TMR0_INIT 00B6  
     __end_of_Interrupt_Init 0D8C           _DecimalTemperature 0030                  __smallconst 0800  
  __end_of_DHTSignalResponse 0DAE   __size_ofi2_TMR0_WRITE_HIGH 0008                    _firstbyte 0043  
               _SetDutyCycle 0A9A                  ??i2_StopPWM 0001                  ??i2___awdiv 000B  
                  _bytecount 0035      __size_ofi2_SetDutyCycle 0062               ___wmul@product 00BA  
                   _IPR1bits 000F9F                     _IPR2bits 000FA2                     _PIE1bits 000F9D  
                   _PIE2bits 000FA0                     _RCONbits 000FD0     __size_of_ConfigureTimer1 0046  
           __CFG_WDTPS$32768 000000                    _prescaler 0049                     i2_SetPWM 0DCA  
            ?_Interrupt_Init 0001            ___wmul@multiplier 00B6                     _PWMValue 0029  
 i2TMR0_WRITE_HIGH@valorHigh 0001                     i2___wmul 0D44                    _splitbyte 004A  
          ?i2_TMR0_WRITE_LOW 0001            i2___awdiv@divisor 0009           ??i2_TMR0_WRITE_LOW 0001  
          i2___awdiv@counter 000B                  _INTCON2bits 000FF1                  _INTCON3bits 000FF0  
                  copy_data0 0B36                    copy_data1 0B56                  _INIT_INTCON 0E38  
           ?_InitDHT11Driver 0001                ??i2_SetPeriod 0001             __size_of_HighISR 0950  
                ??_SetPeriod 00B6           _SecondStateRequest 0E50             ??_TMR0_WRITE_LOW 00B6  
                   __Hrparam 0000             ?i2_TurnOffLights 0001                     __Lrparam 0000  
                   _StartPWM 0EAA          ?_SecondStateRequest 0001             __size_of_StopPWM 000A  
           __size_of___awdiv 00BE        i2___wmul@multiplicand 0003            i2SetPWM@dutycycle 0012  
      __end_of_RecievingData 0C26   __size_of_DHTSignalResponse 0022     i2TMR0_WRITE_LOW@valorLow 0001  
            _TMR0_WRITE_HIGH 0E7A         __end_of_TurnOnLights 0E38                     _f_slave1 0039  
                   _f_slave2 003A                 _TimerCounter 0033                     __ptext10 0E70  
                   __ptext11 0E7A                     __ptext20 0E1E                     __ptext12 0D1C  
                   __ptext21 0E38                     __ptext13 0D6A                     __ptext30 0D44  
                   __ptext22 0E8E                     __ptext14 0EE2                     __ptext31 0A16  
                   __ptext23 0C6C                     __ptext15 0E02                     __ptext40 0E50  
                   __ptext32 0EDC                     __ptext16 0DE2                     __ptext41 0000  
                   __ptext33 0E98                     __ptext25 0E44                     __ptext17 0E10  
                   __ptext34 0EBA                     __ptext26 0EB2                     __ptext18 0DF2  
                   __ptext35 0EC2                     __ptext27 0DCA                     __ptext19 0E84  
                   __ptext36 0BD2                     __ptext28 0ED6                     __ptext37 0D8C  
                   __ptext29 0B70                     __ptext38 0CE8                     __ptext39 0EE6  
                   _bitcount 0034         ??_SecondStateRequest 0001                __size_of_Idle 0002  
              __size_of_main 0046                     _lasttime 002D              _IntegerHumidity 0031  
        __end_ofi2_SetPeriod 0EDC                     int$flags 004C            ??_ConfigureTimer1 00B6  
      __CFG_CPUDIV$OSC1_PLL2 000000                   _INTCONbits 000FF2                  _secondvalue 003F  
                   intlevel2 0000               i2_SetDutyCycle 0B70                _MaxLightValue 0046  
    __end_of_TMR0_WRITE_HIGH 0E84        SetDutyCycle@dutycycle 00C6          __CFG_FOSC$INTOSC_HS 000000  
     __end_ofi2_SetDutyCycle 0BD2                  i2_SetPeriod 0ED6  
