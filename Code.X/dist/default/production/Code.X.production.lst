

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Tue May 03 01:04:06 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           	psect	idataCOMRAM
    64  001234                     __pidataCOMRAM:
    65                           	opt stack 0
    66                           
    67                           ;initializer for _lightperday
    68  001234  059B               	dw	1435
    69                           
    70                           ;initializer for _totaldaytime
    71  001236  05A0               	dw	1440
    72                           
    73                           ;initializer for _MinLightValue
    74  001238  50                 	db	80
    75                           
    76                           ;initializer for _endbyte
    77  001239  24                 	db	36
    78                           
    79                           ;initializer for _fan
    80  00123A  46                 	db	70
    81                           
    82                           ;initializer for _light
    83  00123B  4C                 	db	76
    84                           
    85                           ;initializer for _prescaler
    86  00123C  04                 	db	4
    87                           
    88                           	psect	idataBANK0
    89  0011A4                     __pidataBANK0:
    90                           	opt stack 0
    91                           
    92                           ;initializer for _DHT_StateMachine
    93  0011A4  6E                 	db	low _Idle
    94  0011A5  12                 	db	high _Idle
    95  0011A6  02                 	db	low _FirstStateRequest
    96  0011A7  10                 	db	high _FirstStateRequest
    97  0011A8  F6                 	db	low _SecondStateRequest
    98  0011A9  11                 	db	high _SecondStateRequest
    99  0011AA  0A                 	db	low _DHTSignalResponse
   100  0011AB  11                 	db	high _DHTSignalResponse
   101  0011AC  68                 	db	low _RecievingData
   102  0011AD  0F                 	db	high _RecievingData
   103                           
   104                           ;initializer for _firstbyte
   105  0011AE  23                 	db	35
   106  0011AF  26                 	db	38
   107  0011B0  21                 	db	33
   108  0011B1  40                 	db	64
   109  0011B2  25                 	db	37
   110                           
   111                           	psect	smallconst
   112  000800                     __psmallconst:
   113                           	opt stack 0
   114  000800  00                 	db	0
   115  000801                     SerialCOM@_SPBRG:
   116                           	opt stack 0
   117  000801  19                 	db	25
   118  000802                     __end_ofSerialCOM@_SPBRG:
   119                           	opt stack 0
   120  000802  19                 	db	25
   121  000803                     __end_of__SPBRG:
   122                           	opt stack 0
   123  0000                     _ADRES	set	4035
   124  0000                     _CCPR1	set	4030
   125  0000                     _TMR0	set	4054
   126  0000                     _TMR1	set	4046
   127  0000                     _ADCON0	set	4034
   128  0000                     _ADCON0bits	set	4034
   129  0000                     _ADCON1	set	4033
   130  0000                     _ADCON2bits	set	4032
   131  0000                     _CCP1CON	set	4029
   132  0000                     _CCP2CON	set	4026
   133  0000                     _CCPR1H	set	4031
   134  0000                     _CCPR1L	set	4030
   135  0000                     _CCPR2L	set	4027
   136  0000                     _INTCON2bits	set	4081
   137  0000                     _INTCON3bits	set	4080
   138  0000                     _INTCONbits	set	4082
   139  0000                     _IPR1bits	set	3999
   140  0000                     _IPR2bits	set	4002
   141  0000                     _OSCCON	set	4051
   142  0000                     _PIE1bits	set	3997
   143  0000                     _PIE2bits	set	4000
   144  0000                     _PR2	set	4043
   145  0000                     _RCONbits	set	4048
   146  0000                     _RCREG	set	4014
   147  0000                     _SPBRG	set	4015
   148  0000                     _T0CON	set	4053
   149  0000                     _T1CON	set	4045
   150  0000                     _T1CONbits	set	4045
   151  0000                     _T2CON	set	4042
   152  0000                     _T3CON	set	4017
   153  0000                     _TMR0H	set	4055
   154  0000                     _TMR0L	set	4054
   155  0000                     _TMR1H	set	4047
   156  0000                     _TMR1L	set	4046
   157  0000                     _TRISAbits	set	3986
   158  0000                     _TRISBbits	set	3987
   159  0000                     _TRISCbits	set	3988
   160  0000                     _TXREG	set	4013
   161  0000                     _ADDEN	set	32091
   162  0000                     _ADIF	set	31990
   163  0000                     _BRG16	set	32195
   164  0000                     _BRGH	set	32098
   165  0000                     _CCP1IE	set	31978
   166  0000                     _CCP1IF	set	31986
   167  0000                     _CREN	set	32092
   168  0000                     _CSRC	set	32103
   169  0000                     _INT2IF	set	32641
   170  0000                     _INTEDG2	set	32652
   171  0000                     _LATA3	set	31819
   172  0000                     _LATB3	set	31827
   173  0000                     _LATC2	set	31834
   174  0000                     _RCIE	set	31981
   175  0000                     _RCIF	set	31989
   176  0000                     _RX9	set	32094
   177  0000                     _SENDB	set	32099
   178  0000                     _SPEN	set	32095
   179  0000                     _SREN	set	32093
   180  0000                     _SYNC	set	32100
   181  0000                     _T0IF	set	32658
   182  0000                     _T1OSCEN	set	32363
   183  0000                     _T1RUN	set	32366
   184  0000                     _TMR0IF	set	32658
   185  0000                     _TMR0ON	set	32431
   186  0000                     _TMR1CS	set	32361
   187  0000                     _TMR1ON	set	32360
   188  0000                     _TX9	set	32102
   189  0000                     _TXEN	set	32101
   190                           
   191                           ; #config settings
   192  000803  00                 	db	0	; dummy byte at the end
   193  0000                     
   194                           	psect	cinit
   195  000E96                     __pcinit:
   196                           	opt stack 0
   197  000E96                     start_initialization:
   198                           	opt stack 0
   199  000E96                     __initialization:
   200                           	opt stack 0
   201                           
   202                           ; Clear objects allocated to BANK0 (109 bytes)
   203  000E96  EE00  F060         	lfsr	0,__pbssBANK0
   204  000E9A  0E6D               	movlw	109
   205  000E9C                     clear_0:
   206  000E9C  6AEE               	clrf	postinc0,c
   207  000E9E  06E8               	decf	wreg,f,c
   208  000EA0  E1FD               	bnz	clear_0
   209                           
   210                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   211  000EA2  6A3B               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   212  000EA4  6A3A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   213                           
   214                           ; Clear objects allocated to COMRAM (23 bytes)
   215  000EA6  EE00  F023         	lfsr	0,__pbssCOMRAM
   216  000EAA  0E17               	movlw	23
   217  000EAC                     clear_1:
   218  000EAC  6AEE               	clrf	postinc0,c
   219  000EAE  06E8               	decf	wreg,f,c
   220  000EB0  E1FD               	bnz	clear_1
   221                           
   222                           ; Initialize objects allocated to BANK0 (15 bytes)
   223                           ; load TBLPTR registers with __pidataBANK0
   224  000EB2  0EA4               	movlw	low __pidataBANK0
   225  000EB4  6EF6               	movwf	tblptrl,c
   226  000EB6  0E11               	movlw	high __pidataBANK0
   227  000EB8  6EF7               	movwf	tblptrh,c
   228  000EBA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   229  000EBC  6EF8               	movwf	tblptru,c
   230  000EBE  EE00  F0E7         	lfsr	0,__pdataBANK0
   231  000EC2  EE10 F00F          	lfsr	1,15
   232  000EC6                     copy_data0:
   233  000EC6  0009               	tblrd		*+
   234  000EC8  CFF5 FFEE          	movff	tablat,postinc0
   235  000ECC  50E5               	movf	postdec1,w,c
   236  000ECE  50E1               	movf	fsr1l,w,c
   237  000ED0  E1FA               	bnz	copy_data0
   238                           
   239                           ; Initialize objects allocated to COMRAM (9 bytes)
   240                           ; load TBLPTR registers with __pidataCOMRAM
   241  000ED2  0E34               	movlw	low __pidataCOMRAM
   242  000ED4  6EF6               	movwf	tblptrl,c
   243  000ED6  0E12               	movlw	high __pidataCOMRAM
   244  000ED8  6EF7               	movwf	tblptrh,c
   245  000EDA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   246  000EDC  6EF8               	movwf	tblptru,c
   247  000EDE  EE00  F03C         	lfsr	0,__pdataCOMRAM
   248  000EE2  EE10 F009          	lfsr	1,9
   249  000EE6                     copy_data1:
   250  000EE6  0009               	tblrd		*+
   251  000EE8  CFF5 FFEE          	movff	tablat,postinc0
   252  000EEC  50E5               	movf	postdec1,w,c
   253  000EEE  50E1               	movf	fsr1l,w,c
   254  000EF0  E1FA               	bnz	copy_data1
   255  000EF2                     end_of_initialization:
   256                           	opt stack 0
   257  000EF2                     __end_of__initialization:
   258                           	opt stack 0
   259  000EF2  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   260  000EF4  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   261  000EF6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   262  000EF8  6EF8               	movwf	tblptru,c
   263  000EFA  0100               	movlb	0
   264  000EFC  EF81  F006         	goto	_main	;jump to C main() function
   265                           tblptru	equ	0xFF8
   266                           tblptrh	equ	0xFF7
   267                           tblptrl	equ	0xFF6
   268                           tablat	equ	0xFF5
   269                           postinc0	equ	0xFEE
   270                           wreg	equ	0xFE8
   271                           postdec1	equ	0xFE5
   272                           fsr1l	equ	0xFE1
   273                           
   274                           	psect	bitbssCOMRAM
   275  0001D0                     __pbitbssCOMRAM:
   276                           	opt stack 0
   277  0001D0                     _Door_f:
   278                           	opt stack 0
   279  0001D0                     	ds	1
   280  0001D1                     _Light_f:
   281                           	opt stack 0
   282  0001D1                     	ds	1
   283  0001D2                     _Night_f:
   284                           	opt stack 0
   285  0001D2                     	ds	1
   286  0001D3                     _PWM:
   287                           	opt stack 0
   288  0001D3                     	ds	1
   289  0001D4                     _f_SSPReady:
   290                           	opt stack 0
   291  0001D4                     	ds	1
   292  0001D5                     _f_Send2Bytes:
   293                           	opt stack 0
   294  0001D5                     	ds	1
   295  0001D6                     _f_SendByte:
   296                           	opt stack 0
   297  0001D6                     	ds	1
   298  0001D7                     _lightstate:
   299                           	opt stack 0
   300  0001D7                     	ds	1
   301  0001D8                     _lightstate_f:
   302                           	opt stack 0
   303  0001D8                     	ds	1
   304                           tblptru	equ	0xFF8
   305                           tblptrh	equ	0xFF7
   306                           tblptrl	equ	0xFF6
   307                           tablat	equ	0xFF5
   308                           postinc0	equ	0xFEE
   309                           wreg	equ	0xFE8
   310                           postdec1	equ	0xFE5
   311                           fsr1l	equ	0xFE1
   312                           
   313                           	psect	bssCOMRAM
   314  000023                     __pbssCOMRAM:
   315                           	opt stack 0
   316  000023                     _PWMValue:
   317                           	opt stack 0
   318  000023                     	ds	2
   319  000025                     _actualtime:
   320                           	opt stack 0
   321  000025                     	ds	2
   322  000027                     _DecimalHumidity:
   323                           	opt stack 0
   324  000027                     	ds	1
   325  000028                     _DecimalTemperature:
   326                           	opt stack 0
   327  000028                     	ds	1
   328  000029                     _IntegerHumidity:
   329                           	opt stack 0
   330  000029                     	ds	1
   331  00002A                     _IntegerTemperature:
   332                           	opt stack 0
   333  00002A                     	ds	1
   334  00002B                     _TimerCounter:
   335                           	opt stack 0
   336  00002B                     	ds	1
   337  00002C                     _TimerUser:
   338                           	opt stack 0
   339  00002C                     	ds	1
   340  00002D                     _actualhumidity:
   341                           	opt stack 0
   342  00002D                     	ds	1
   343  00002E                     _actualtemperature:
   344                           	opt stack 0
   345  00002E                     	ds	1
   346  00002F                     _bitcount:
   347                           	opt stack 0
   348  00002F                     	ds	1
   349  000030                     _bytecount:
   350                           	opt stack 0
   351  000030                     	ds	1
   352  000031                     _counter:
   353                           	opt stack 0
   354  000031                     	ds	1
   355  000032                     _f_frameready:
   356                           	opt stack 0
   357  000032                     	ds	1
   358  000033                     _frame:
   359                           	opt stack 0
   360  000033                     	ds	1
   361  000034                     _mask:
   362                           	opt stack 0
   363  000034                     	ds	1
   364  000035                     _optimalhumidity:
   365                           	opt stack 0
   366  000035                     	ds	1
   367  000036                     _optimaltemperature:
   368                           	opt stack 0
   369  000036                     	ds	1
   370  000037                     _serialcount:
   371                           	opt stack 0
   372  000037                     	ds	1
   373  000038                     _state:
   374                           	opt stack 0
   375  000038                     	ds	1
   376  000039                     _time:
   377                           	opt stack 0
   378  000039                     	ds	1
   379                           tblptru	equ	0xFF8
   380                           tblptrh	equ	0xFF7
   381                           tblptrl	equ	0xFF6
   382                           tablat	equ	0xFF5
   383                           postinc0	equ	0xFEE
   384                           wreg	equ	0xFE8
   385                           postdec1	equ	0xFE5
   386                           fsr1l	equ	0xFE1
   387                           
   388                           	psect	dataCOMRAM
   389  00003C                     __pdataCOMRAM:
   390                           	opt stack 0
   391  00003C                     _lightperday:
   392                           	opt stack 0
   393  00003C                     	ds	2
   394  00003E                     _totaldaytime:
   395                           	opt stack 0
   396  00003E                     	ds	2
   397  000040                     _MinLightValue:
   398                           	opt stack 0
   399  000040                     	ds	1
   400  000041                     _endbyte:
   401                           	opt stack 0
   402  000041                     	ds	1
   403  000042                     _fan:
   404                           	opt stack 0
   405  000042                     	ds	1
   406  000043                     _light:
   407                           	opt stack 0
   408  000043                     	ds	1
   409  000044                     _prescaler:
   410                           	opt stack 0
   411  000044                     	ds	1
   412                           tblptru	equ	0xFF8
   413                           tblptrh	equ	0xFF7
   414                           tblptrl	equ	0xFF6
   415                           tablat	equ	0xFF5
   416                           postinc0	equ	0xFEE
   417                           wreg	equ	0xFE8
   418                           postdec1	equ	0xFE5
   419                           fsr1l	equ	0xFE1
   420                           
   421                           	psect	bssBANK0
   422  000060                     __pbssBANK0:
   423                           	opt stack 0
   424  000060                     _times:
   425                           	opt stack 0
   426  000060                     	ds	80
   427  0000B0                     _LSb:
   428                           	opt stack 0
   429  0000B0                     	ds	2
   430  0000B2                     _LightValue:
   431                           	opt stack 0
   432  0000B2                     	ds	2
   433  0000B4                     _MSb:
   434                           	opt stack 0
   435  0000B4                     	ds	2
   436  0000B6                     _counts:
   437                           	opt stack 0
   438  0000B6                     	ds	2
   439  0000B8                     _lasttime:
   440                           	opt stack 0
   441  0000B8                     	ds	2
   442  0000BA                     _lightcounter:
   443                           	opt stack 0
   444  0000BA                     	ds	2
   445  0000BC                     _timetostartlight:
   446                           	opt stack 0
   447  0000BC                     	ds	2
   448  0000BE                     _RecievedData:
   449                           	opt stack 0
   450  0000BE                     	ds	15
   451                           tblptru	equ	0xFF8
   452                           tblptrh	equ	0xFF7
   453                           tblptrl	equ	0xFF6
   454                           tablat	equ	0xFF5
   455                           postinc0	equ	0xFEE
   456                           wreg	equ	0xFE8
   457                           postdec1	equ	0xFE5
   458                           fsr1l	equ	0xFE1
   459                           
   460                           	psect	dataBANK0
   461  0000E7                     __pdataBANK0:
   462                           	opt stack 0
   463  0000E7                     _DHT_StateMachine:
   464                           	opt stack 0
   465  0000E7                     	ds	10
   466  0000F1                     _firstbyte:
   467                           	opt stack 0
   468  0000F1                     	ds	5
   469                           tblptru	equ	0xFF8
   470                           tblptrh	equ	0xFF7
   471                           tblptrl	equ	0xFF6
   472                           tablat	equ	0xFF5
   473                           postinc0	equ	0xFEE
   474                           wreg	equ	0xFE8
   475                           postdec1	equ	0xFE5
   476                           fsr1l	equ	0xFE1
   477                           
   478                           	psect	cstackBANK0
   479  0000CD                     __pcstackBANK0:
   480                           	opt stack 0
   481  0000CD                     ?___wmul:
   482                           	opt stack 0
   483  0000CD                     TMR0_INIT@bits:
   484                           	opt stack 0
   485  0000CD                     TMR0_WRITE_HIGH@valorHigh:
   486                           	opt stack 0
   487  0000CD                     TMR0_WRITE_LOW@valorLow:
   488                           	opt stack 0
   489  0000CD                     ___wmul@multiplier:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x0
   493  0000CD                     	ds	1
   494  0000CE                     TMR0_INIT@T0PS:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x1
   498  0000CE                     	ds	1
   499  0000CF                     ___wmul@multiplicand:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x2
   503  0000CF                     	ds	2
   504  0000D1                     ___wmul@product:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x4
   508  0000D1                     	ds	2
   509  0000D3                     ?___awdiv:
   510                           	opt stack 0
   511  0000D3                     ___awdiv@dividend:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x6
   515  0000D3                     	ds	2
   516  0000D5                     ___awdiv@divisor:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x8
   520  0000D5                     	ds	2
   521  0000D7                     ___awdiv@counter:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0xA
   525  0000D7                     	ds	1
   526  0000D8                     ___awdiv@sign:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0xB
   530  0000D8                     	ds	1
   531  0000D9                     ___awdiv@quotient:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0xC
   535  0000D9                     	ds	2
   536  0000DB                     ??_SetDutyCycle:
   537                           
   538                           ; 1 bytes @ 0xE
   539  0000DB                     	ds	2
   540  0000DD                     SetDutyCycle@dutycycle:
   541                           	opt stack 0
   542                           
   543                           ; 1 bytes @ 0x10
   544  0000DD                     	ds	1
   545  0000DE                     SetPWM@dutycycle:
   546                           	opt stack 0
   547                           
   548                           ; 1 bytes @ 0x11
   549  0000DE                     	ds	1
   550  0000DF                     ReadFrame@pointer:
   551                           	opt stack 0
   552                           
   553                           ; 2 bytes @ 0x12
   554  0000DF                     	ds	2
   555  0000E1                     ??_ReadFrame:
   556                           
   557                           ; 1 bytes @ 0x14
   558  0000E1                     	ds	4
   559  0000E5                     ??_main:
   560                           
   561                           ; 1 bytes @ 0x18
   562  0000E5                     	ds	2
   563                           tblptru	equ	0xFF8
   564                           tblptrh	equ	0xFF7
   565                           tblptrl	equ	0xFF6
   566                           tablat	equ	0xFF5
   567                           postinc0	equ	0xFEE
   568                           wreg	equ	0xFE8
   569                           postdec1	equ	0xFE5
   570                           fsr1l	equ	0xFE1
   571                           
   572                           	psect	cstackCOMRAM
   573  000001                     __pcstackCOMRAM:
   574                           	opt stack 0
   575  000001                     ??_RecievingData:
   576  000001                     ?i2___wmul:
   577                           	opt stack 0
   578  000001                     i2TMR0_WRITE_HIGH@valorHigh:
   579                           	opt stack 0
   580  000001                     i2TMR0_WRITE_LOW@valorLow:
   581                           	opt stack 0
   582  000001                     i2___wmul@multiplier:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x0
   586  000001                     	ds	2
   587  000003                     i2___wmul@multiplicand:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x2
   591  000003                     	ds	2
   592  000005                     i2___wmul@product:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x4
   596  000005                     	ds	2
   597  000007                     ?i2___awdiv:
   598                           	opt stack 0
   599  000007                     i2___awdiv@dividend:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x6
   603  000007                     	ds	2
   604  000009                     i2___awdiv@divisor:
   605                           	opt stack 0
   606                           
   607                           ; 2 bytes @ 0x8
   608  000009                     	ds	2
   609  00000B                     i2___awdiv@counter:
   610                           	opt stack 0
   611                           
   612                           ; 1 bytes @ 0xA
   613  00000B                     	ds	1
   614  00000C                     i2___awdiv@sign:
   615                           	opt stack 0
   616                           
   617                           ; 1 bytes @ 0xB
   618  00000C                     	ds	1
   619  00000D                     i2___awdiv@quotient:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0xC
   623  00000D                     	ds	2
   624  00000F                     ??i2_SetDutyCycle:
   625                           
   626                           ; 1 bytes @ 0xE
   627  00000F                     	ds	2
   628  000011                     i2SetDutyCycle@dutycycle:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0x10
   632  000011                     	ds	1
   633  000012                     i2SetPWM@dutycycle:
   634                           	opt stack 0
   635                           
   636                           ; 1 bytes @ 0x11
   637  000012                     	ds	1
   638  000013                     ??_HighISR:
   639  000013                     
   640                           ; 1 bytes @ 0x12
   641  000013                     	ds	16
   642                           tblptru	equ	0xFF8
   643                           tblptrh	equ	0xFF7
   644                           tblptrl	equ	0xFF6
   645                           tablat	equ	0xFF5
   646                           postinc0	equ	0xFEE
   647                           wreg	equ	0xFE8
   648                           postdec1	equ	0xFE5
   649                           fsr1l	equ	0xFE1
   650                           
   651 ;;
   652 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   653 ;;
   654 ;; *************** function _main *****************
   655 ;; Defined at:
   656 ;;		line 159 in file "Main.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;		None
   659 ;; Auto vars:     Size  Location     Type
   660 ;;		None
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   670 ;;      Params:         0       0       0       0       0       0       0       0       0
   671 ;;      Locals:         0       0       0       0       0       0       0       0       0
   672 ;;      Temps:          0       2       0       0       0       0       0       0       0
   673 ;;      Totals:         0       2       0       0       0       0       0       0       0
   674 ;;Total ram usage:        2 bytes
   675 ;; Hardware stack levels required when called:   10
   676 ;; This function calls:
   677 ;;		_InitDHT11Driver
   678 ;;		_Interrupt_Init
   679 ;;		_ReadFrame
   680 ;;		_SerialInit
   681 ;;		_TMR0_INIT
   682 ;;		_TMR0_WRITE_HIGH
   683 ;;		_TMR0_WRITE_LOW
   684 ;;		_TurnOffLights
   685 ;;		_TurnOnLights
   686 ;; This function is called by:
   687 ;;		Startup code after reset
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691                           	psect	text0
   692  000D02                     __ptext0:
   693                           	opt stack 0
   694  000D02                     _main:
   695                           	opt stack 21
   696                           
   697                           ;Main.c: 162: OSCCON=0b01101100;
   698                           
   699                           ;incstack = 0
   700  000D02  0E6C               	movlw	108
   701  000D04  6ED3               	movwf	4051,c	;volatile
   702                           
   703                           ;Main.c: 163: Interrupt_Init();
   704  000D06  EC74  F008         	call	_Interrupt_Init	;wreg free
   705                           
   706                           ;Main.c: 166: TMR0_INIT();
   707  000D0A  EC39  F008         	call	_TMR0_INIT	;wreg free
   708                           
   709                           ;Main.c: 167: TMR0ON = 0;
   710  000D0E  9ED5               	bcf	4053,7,c	;volatile
   711                           
   712                           ;Main.c: 168: TMR0_WRITE_HIGH(0xB);
   713  000D10  0E0B               	movlw	11
   714  000D12  EC0B  F009         	call	_TMR0_WRITE_HIGH
   715                           
   716                           ;Main.c: 169: TMR0_WRITE_LOW(0xD0);
   717  000D16  0ED0               	movlw	208
   718  000D18  EC06  F009         	call	_TMR0_WRITE_LOW
   719                           
   720                           ;Main.c: 170: TMR0ON = 1;
   721  000D1C  8ED5               	bsf	4053,7,c	;volatile
   722                           
   723                           ;Main.c: 173: ADCON0=0b00001001;
   724  000D1E  0E09               	movlw	9
   725  000D20  6EC2               	movwf	4034,c	;volatile
   726                           
   727                           ;Main.c: 174: ADCON1=0b00001100;
   728  000D22  0E0C               	movlw	12
   729  000D24  6EC1               	movwf	4033,c	;volatile
   730                           
   731                           ;Main.c: 175: ADCON2bits.ADFM=1;
   732  000D26  8EC0               	bsf	4032,7,c	;volatile
   733                           
   734                           ;Main.c: 178: InitDHT11Driver();
   735  000D28  EC15  F009         	call	_InitDHT11Driver	;wreg free
   736                           
   737                           ;Main.c: 181: (TRISAbits.TRISA3 = 0);
   738  000D2C  9692               	bcf	3986,3,c	;volatile
   739                           
   740                           ;Main.c: 182: (LATA3=1U);
   741  000D2E  8689               	bsf	3977,3,c	;volatile
   742                           
   743                           ;Main.c: 184: TurnOffLights();
   744  000D30  ECEF  F008         	call	_TurnOffLights	;wreg free
   745                           
   746                           ;Main.c: 185: lightstate=1;
   747  000D34  8E3A               	bsf	_lightstate/(0+8),_lightstate& (0+7),c
   748                           
   749                           ;Main.c: 186: timetostartlight=totaldaytime-lightperday;
   750  000D36  C03C  F0E5         	movff	_lightperday,??_main
   751  000D3A  C03D  F0E6         	movff	_lightperday+1,??_main+1
   752  000D3E  0100               	movlb	0	; () banked
   753  000D40  1FE5               	comf	??_main& (0+255),f,b
   754  000D42  1FE6               	comf	(??_main+1)& (0+255),f,b
   755  000D44  4BE5               	infsnz	??_main& (0+255),f,b
   756  000D46  2BE6               	incf	(??_main+1)& (0+255),f,b
   757  000D48  503E               	movf	_totaldaytime,w,c
   758  000D4A  0100               	movlb	0	; () banked
   759  000D4C  25E5               	addwf	??_main& (0+255),w,b
   760  000D4E  0100               	movlb	0	; () banked
   761  000D50  6FBC               	movwf	_timetostartlight& (0+255),b
   762  000D52  503F               	movf	_totaldaytime+1,w,c
   763  000D54  0100               	movlb	0	; () banked
   764  000D56  21E6               	addwfc	(??_main+1)& (0+255),w,b
   765  000D58  0100               	movlb	0	; () banked
   766  000D5A  6FBD               	movwf	(_timetostartlight+1)& (0+255),b
   767                           
   768                           ; BSR set to: 0
   769                           ;Main.c: 189: SerialInit();
   770  000D5C  EC4D  F008         	call	_SerialInit	;wreg free
   771  000D60                     l2470:
   772                           
   773                           ;Main.c: 193: if(TimerUser==0){
   774  000D60  502C               	movf	_TimerUser,w,c
   775  000D62  A4D8               	btfss	status,2,c
   776  000D64  D010               	goto	l2480
   777                           
   778                           ;Main.c: 195: if(actualtime>timetostartlight){
   779  000D66  5025               	movf	_actualtime,w,c
   780  000D68  0100               	movlb	0	; () banked
   781  000D6A  5DBC               	subwf	_timetostartlight& (0+255),w,b
   782  000D6C  5026               	movf	_actualtime+1,w,c
   783  000D6E  0100               	movlb	0	; () banked
   784  000D70  59BD               	subwfb	(_timetostartlight+1)& (0+255),w,b
   785  000D72  B0D8               	btfsc	status,0,c
   786  000D74  D008               	goto	l2480
   787                           
   788                           ; BSR set to: 0
   789                           ;Main.c: 196: if(Light_f==0){
   790  000D76  B23A               	btfsc	_Light_f/(0+8),_Light_f& (0+7),c
   791  000D78  D003               	goto	l156
   792                           
   793                           ; BSR set to: 0
   794                           ;Main.c: 197: TurnOffLights();
   795  000D7A  ECEF  F008         	call	_TurnOffLights	;wreg free
   796                           
   797                           ;Main.c: 198: }
   798  000D7E  D003               	goto	l2480
   799  000D80                     l156:
   800                           
   801                           ; BSR set to: 0
   802                           ;Main.c: 199: else if (Light_f==1){
   803  000D80  B23A               	btfsc	_Light_f/(0+8),_Light_f& (0+7),c
   804                           
   805                           ; BSR set to: 0
   806                           ;Main.c: 200: TurnOnLights();
   807  000D82  ECB0  F008         	call	_TurnOnLights	;wreg free
   808  000D86                     l2480:
   809                           
   810                           ;Main.c: 201: }
   811                           ;Main.c: 202: }
   812                           ;Main.c: 204: }
   813                           ;Main.c: 205: if(f_frameready){
   814  000D86  5032               	movf	_f_frameready,w,c
   815  000D88  B4D8               	btfsc	status,2,c
   816  000D8A  D7EA               	goto	l2470
   817                           
   818                           ;Main.c: 206: ReadFrame(RecievedData);
   819  000D8C  0EBE               	movlw	low _RecievedData
   820  000D8E  0100               	movlb	0	; () banked
   821  000D90  6FDF               	movwf	ReadFrame@pointer& (0+255),b
   822  000D92  0E00               	movlw	high _RecievedData
   823  000D94  0100               	movlb	0	; () banked
   824  000D96  6FE0               	movwf	(ReadFrame@pointer+1)& (0+255),b
   825  000D98  EC02  F004         	call	_ReadFrame	;wreg free
   826  000D9C  D7E1               	goto	l2470
   827  000D9E                     __end_of_main:
   828                           	opt stack 0
   829                           tblptru	equ	0xFF8
   830                           tblptrh	equ	0xFF7
   831                           tblptrl	equ	0xFF6
   832                           tablat	equ	0xFF5
   833                           postinc0	equ	0xFEE
   834                           wreg	equ	0xFE8
   835                           postdec1	equ	0xFE5
   836                           fsr1l	equ	0xFE1
   837                           status	equ	0xFD8
   838                           
   839 ;; *************** function _TurnOffLights *****************
   840 ;; Defined at:
   841 ;;		line 5 in file "LedDriver.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;		None
   846 ;; Return value:  Size  Location     Type
   847 ;;                  2   60[None  ] int 
   848 ;; Registers used:
   849 ;;		wreg, status,2, cstack
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   855 ;;      Params:         0       0       0       0       0       0       0       0       0
   856 ;;      Locals:         0       0       0       0       0       0       0       0       0
   857 ;;      Temps:          0       0       0       0       0       0       0       0       0
   858 ;;      Totals:         0       0       0       0       0       0       0       0       0
   859 ;;Total ram usage:        0 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; Hardware stack levels required when called:    6
   862 ;; This function calls:
   863 ;;		_StopPWM
   864 ;; This function is called by:
   865 ;;		_main
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           	psect	text1
   870  0011DE                     __ptext1:
   871                           	opt stack 0
   872  0011DE                     _TurnOffLights:
   873                           	opt stack 24
   874                           
   875                           ;LedDriver.c: 6: if(lightstate_f){
   876                           
   877                           ;incstack = 0
   878  0011DE  A03B               	btfss	_lightstate_f/(0+8),_lightstate_f& (0+7),c
   879  0011E0  0012               	return	
   880                           
   881                           ;LedDriver.c: 7: StopPWM();
   882  0011E2  EC01  F009         	call	_StopPWM	;wreg free
   883                           
   884                           ;LedDriver.c: 8: lightstate_f=0;
   885  0011E6  903B               	bcf	_lightstate_f/(0+8),_lightstate_f& (0+7),c
   886  0011E8  0012               	return	
   887  0011EA                     __end_of_TurnOffLights:
   888                           	opt stack 0
   889                           tblptru	equ	0xFF8
   890                           tblptrh	equ	0xFF7
   891                           tblptrl	equ	0xFF6
   892                           tablat	equ	0xFF5
   893                           postinc0	equ	0xFEE
   894                           wreg	equ	0xFE8
   895                           postdec1	equ	0xFE5
   896                           fsr1l	equ	0xFE1
   897                           status	equ	0xFD8
   898                           
   899 ;; *************** function _StopPWM *****************
   900 ;; Defined at:
   901 ;;		line 22 in file "PWM.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, status,2
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   915 ;;      Params:         0       0       0       0       0       0       0       0       0
   916 ;;      Locals:         0       0       0       0       0       0       0       0       0
   917 ;;      Temps:          0       0       0       0       0       0       0       0       0
   918 ;;      Totals:         0       0       0       0       0       0       0       0       0
   919 ;;Total ram usage:        0 bytes
   920 ;; Hardware stack levels used:    1
   921 ;; Hardware stack levels required when called:    5
   922 ;; This function calls:
   923 ;;		Nothing
   924 ;; This function is called by:
   925 ;;		_TurnOffLights
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text2
   930  001202                     __ptext2:
   931                           	opt stack 0
   932  001202                     _StopPWM:
   933                           	opt stack 24
   934                           
   935                           ;PWM.c: 23: CCP2CON=0x00;
   936                           
   937                           ;incstack = 0
   938  001202  0E00               	movlw	0
   939  001204  6EBA               	movwf	4026,c	;volatile
   940                           
   941                           ;PWM.c: 24: T1OSCEN=0U;
   942  001206  96CD               	bcf	4045,3,c	;volatile
   943                           
   944                           ;PWM.c: 25: (LATB3=0U);
   945  001208  968A               	bcf	3978,3,c	;volatile
   946  00120A  0012               	return		;funcret
   947  00120C                     __end_of_StopPWM:
   948                           	opt stack 0
   949                           tblptru	equ	0xFF8
   950                           tblptrh	equ	0xFF7
   951                           tblptrl	equ	0xFF6
   952                           tablat	equ	0xFF5
   953                           postinc0	equ	0xFEE
   954                           wreg	equ	0xFE8
   955                           postdec1	equ	0xFE5
   956                           fsr1l	equ	0xFE1
   957                           status	equ	0xFD8
   958                           
   959 ;; *************** function _TMR0_WRITE_LOW *****************
   960 ;; Defined at:
   961 ;;		line 79 in file "Timer_0.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  valorLow        1    wreg     unsigned char 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  valorLow        1    0[BANK0 ] unsigned char 
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   975 ;;      Params:         0       0       0       0       0       0       0       0       0
   976 ;;      Locals:         0       1       0       0       0       0       0       0       0
   977 ;;      Temps:          0       0       0       0       0       0       0       0       0
   978 ;;      Totals:         0       1       0       0       0       0       0       0       0
   979 ;;Total ram usage:        1 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; Hardware stack levels required when called:    5
   982 ;; This function calls:
   983 ;;		Nothing
   984 ;; This function is called by:
   985 ;;		_main
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text3
   990  00120C                     __ptext3:
   991                           	opt stack 0
   992  00120C                     _TMR0_WRITE_LOW:
   993                           	opt stack 25
   994                           
   995                           ;incstack = 0
   996                           ;TMR0_WRITE_LOW@valorLow stored from wreg
   997  00120C  0100               	movlb	0	; () banked
   998  00120E  6FCD               	movwf	TMR0_WRITE_LOW@valorLow& (0+255),b
   999                           
  1000                           ;Timer_0.c: 81: TMR0L=valorLow;
  1001  001210  C0CD  FFD6         	movff	TMR0_WRITE_LOW@valorLow,4054	;volatile
  1002  001214  0012               	return		;funcret
  1003  001216                     __end_of_TMR0_WRITE_LOW:
  1004                           	opt stack 0
  1005                           tblptru	equ	0xFF8
  1006                           tblptrh	equ	0xFF7
  1007                           tblptrl	equ	0xFF6
  1008                           tablat	equ	0xFF5
  1009                           postinc0	equ	0xFEE
  1010                           wreg	equ	0xFE8
  1011                           postdec1	equ	0xFE5
  1012                           fsr1l	equ	0xFE1
  1013                           status	equ	0xFD8
  1014                           
  1015 ;; *************** function _TMR0_WRITE_HIGH *****************
  1016 ;; Defined at:
  1017 ;;		line 66 in file "Timer_0.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;  valorHigh       1    wreg     unsigned char 
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;  valorHigh       1    0[BANK0 ] unsigned char 
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      void 
  1024 ;; Registers used:
  1025 ;;		wreg
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1031 ;;      Params:         0       0       0       0       0       0       0       0       0
  1032 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1033 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1034 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1035 ;;Total ram usage:        1 bytes
  1036 ;; Hardware stack levels used:    1
  1037 ;; Hardware stack levels required when called:    5
  1038 ;; This function calls:
  1039 ;;		Nothing
  1040 ;; This function is called by:
  1041 ;;		_main
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           	psect	text4
  1046  001216                     __ptext4:
  1047                           	opt stack 0
  1048  001216                     _TMR0_WRITE_HIGH:
  1049                           	opt stack 25
  1050                           
  1051                           ;incstack = 0
  1052                           ;TMR0_WRITE_HIGH@valorHigh stored from wreg
  1053  001216  0100               	movlb	0	; () banked
  1054  001218  6FCD               	movwf	TMR0_WRITE_HIGH@valorHigh& (0+255),b
  1055                           
  1056                           ;Timer_0.c: 68: TMR0H=valorHigh;
  1057  00121A  C0CD  FFD7         	movff	TMR0_WRITE_HIGH@valorHigh,4055	;volatile
  1058  00121E  0012               	return		;funcret
  1059  001220                     __end_of_TMR0_WRITE_HIGH:
  1060                           	opt stack 0
  1061                           tblptru	equ	0xFF8
  1062                           tblptrh	equ	0xFF7
  1063                           tblptrl	equ	0xFF6
  1064                           tablat	equ	0xFF5
  1065                           postinc0	equ	0xFEE
  1066                           wreg	equ	0xFE8
  1067                           postdec1	equ	0xFE5
  1068                           fsr1l	equ	0xFE1
  1069                           status	equ	0xFD8
  1070                           
  1071 ;; *************** function _TMR0_INIT *****************
  1072 ;; Defined at:
  1073 ;;		line 23 in file "Timer_0.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  T0PS            1    1[BANK0 ] unsigned char 
  1078 ;;  bits            1    0[BANK0 ] unsigned char 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg, status,2, status,0, prodl, prodh
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1088 ;;      Params:         0       0       0       0       0       0       0       0       0
  1089 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1091 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1092 ;;Total ram usage:        2 bytes
  1093 ;; Hardware stack levels used:    1
  1094 ;; Hardware stack levels required when called:    5
  1095 ;; This function calls:
  1096 ;;		Nothing
  1097 ;; This function is called by:
  1098 ;;		_main
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text5
  1103  001072                     __ptext5:
  1104                           	opt stack 0
  1105  001072                     _TMR0_INIT:
  1106                           	opt stack 25
  1107                           
  1108                           ; BSR set to: 0
  1109                           
  1110                           ;Timer_0.c: 30: else if (32 == 32){T0PS=4;}
  1111                           
  1112                           ; BSR set to: 0
  1113                           
  1114                           ; BSR set to: 0
  1115                           ;Timer_0.c: 29: else if (32 == 16){T0PS=3;}
  1116                           
  1117                           ; BSR set to: 0
  1118                           
  1119                           ; BSR set to: 0
  1120                           ;Timer_0.c: 28: else if (32 == 8){T0PS=2;}
  1121                           
  1122                           ; BSR set to: 0
  1123                           
  1124                           ; BSR set to: 0
  1125                           ;Timer_0.c: 27: else if (32 == 4){T0PS=1;}
  1126                           
  1127                           ;Timer_0.c: 25: u8 T0PS;
  1128                           ;Timer_0.c: 26: if (32 == 2){T0PS=0;}
  1129                           
  1130                           ;incstack = 0
  1131  001072  0E04               	movlw	4
  1132                           
  1133                           ; BSR set to: 0
  1134                           ;Timer_0.c: 33: else {T0PS=7;}
  1135                           
  1136                           ; BSR set to: 0
  1137                           
  1138                           ; BSR set to: 0
  1139                           
  1140                           ; BSR set to: 0
  1141                           ;Timer_0.c: 32: else if (32 == 128){T0PS=6;}
  1142                           
  1143                           ; BSR set to: 0
  1144                           
  1145                           ; BSR set to: 0
  1146                           ;Timer_0.c: 31: else if (32 == 64){T0PS=5;}
  1147  001074  0100               	movlb	0	; () banked
  1148  001076  6FCE               	movwf	TMR0_INIT@T0PS& (0+255),b
  1149                           
  1150                           ; BSR set to: 0
  1151                           ;Timer_0.c: 37: else {bits=0;}
  1152                           
  1153                           ; BSR set to: 0
  1154                           
  1155                           ; BSR set to: 0
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;Timer_0.c: 35: u8 bits;
  1159                           ;Timer_0.c: 36: if (16==8){bits=1;}
  1160                           
  1161                           ; BSR set to: 0
  1162                           
  1163                           ; BSR set to: 0
  1164                           
  1165                           ; BSR set to: 0
  1166                           
  1167                           ; BSR set to: 0
  1168                           
  1169                           ; BSR set to: 0
  1170                           
  1171                           ; BSR set to: 0
  1172  001078  0E00               	movlw	0
  1173  00107A  0100               	movlb	0	; () banked
  1174  00107C  6FCD               	movwf	TMR0_INIT@bits& (0+255),b
  1175                           
  1176                           ; BSR set to: 0
  1177                           ;Timer_0.c: 39: T0CON=(1*128)+(bits*64)+(0*32)+(0*16)+(0*8)+T0PS;
  1178                           
  1179                           ; BSR set to: 0
  1180  00107E  0100               	movlb	0	; () banked
  1181  001080  51CD               	movf	TMR0_INIT@bits& (0+255),w,b
  1182  001082  0D40               	mullw	64
  1183  001084  50F3               	movf	prodl,w,c
  1184  001086  0100               	movlb	0	; () banked
  1185  001088  25CE               	addwf	TMR0_INIT@T0PS& (0+255),w,b
  1186  00108A  0F80               	addlw	128
  1187  00108C  6ED5               	movwf	4053,c	;volatile
  1188                           
  1189                           ; BSR set to: 0
  1190                           ;Timer_0.c: 41: TMR0=0x15;
  1191  00108E  0E00               	movlw	0
  1192  001090  6ED7               	movwf	4055,c	;volatile
  1193  001092  0E15               	movlw	21
  1194  001094  6ED6               	movwf	4054,c	;volatile
  1195                           
  1196                           ; BSR set to: 0
  1197                           ;Timer_0.c: 42: T0IF=0;
  1198  001096  94F2               	bcf	intcon,2,c	;volatile
  1199                           
  1200                           ; BSR set to: 0
  1201  001098  0012               	return		;funcret
  1202  00109A                     __end_of_TMR0_INIT:
  1203                           	opt stack 0
  1204                           tblptru	equ	0xFF8
  1205                           tblptrh	equ	0xFF7
  1206                           tblptrl	equ	0xFF6
  1207                           tablat	equ	0xFF5
  1208                           prodl	equ	0xFF3
  1209                           intcon	equ	0xFF2
  1210                           postinc0	equ	0xFEE
  1211                           wreg	equ	0xFE8
  1212                           postdec1	equ	0xFE5
  1213                           fsr1l	equ	0xFE1
  1214                           status	equ	0xFD8
  1215                           
  1216 ;; *************** function _SerialInit *****************
  1217 ;; Defined at:
  1218 ;;		line 37 in file "SerialCOM.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;		None
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, tblptrl, tblptrh, tblptru
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1232 ;;      Params:         0       0       0       0       0       0       0       0       0
  1233 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1234 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1235 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1236 ;;Total ram usage:        0 bytes
  1237 ;; Hardware stack levels used:    1
  1238 ;; Hardware stack levels required when called:    5
  1239 ;; This function calls:
  1240 ;;		Nothing
  1241 ;; This function is called by:
  1242 ;;		_main
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text6
  1247  00109A                     __ptext6:
  1248                           	opt stack 0
  1249  00109A                     _SerialInit:
  1250                           	opt stack 25
  1251                           
  1252                           ;SerialCOM.c: 40: CSRC = 0U;
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;incstack = 0
  1256  00109A  9EAC               	bcf	4012,7,c	;volatile
  1257                           
  1258                           ;SerialCOM.c: 41: TX9 = 0U;
  1259  00109C  9CAC               	bcf	4012,6,c	;volatile
  1260                           
  1261                           ;SerialCOM.c: 42: TXEN = 1U;
  1262  00109E  8AAC               	bsf	4012,5,c	;volatile
  1263                           
  1264                           ;SerialCOM.c: 43: SYNC = 0U;
  1265  0010A0  98AC               	bcf	4012,4,c	;volatile
  1266                           
  1267                           ;SerialCOM.c: 44: SENDB = 0U;
  1268  0010A2  96AC               	bcf	4012,3,c	;volatile
  1269                           
  1270                           ;SerialCOM.c: 45: BRGH = 0U;;
  1271  0010A4  94AC               	bcf	4012,2,c	;volatile
  1272                           
  1273                           ;SerialCOM.c: 48: SPEN = 1U;
  1274  0010A6  8EAB               	bsf	4011,7,c	;volatile
  1275                           
  1276                           ;SerialCOM.c: 49: RX9 = 0U;
  1277  0010A8  9CAB               	bcf	4011,6,c	;volatile
  1278                           
  1279                           ;SerialCOM.c: 50: SREN = 0U;
  1280  0010AA  9AAB               	bcf	4011,5,c	;volatile
  1281                           
  1282                           ;SerialCOM.c: 51: CREN = 1U;
  1283  0010AC  88AB               	bsf	4011,4,c	;volatile
  1284                           
  1285                           ;SerialCOM.c: 52: ADDEN = 0U;
  1286  0010AE  96AB               	bcf	4011,3,c	;volatile
  1287                           
  1288                           ;SerialCOM.c: 55: BRG16 = 0U;
  1289  0010B0  96B8               	bcf	4024,3,c	;volatile
  1290                           
  1291                           ;SerialCOM.c: 58: SPBRG = _SPBRG;
  1292  0010B2  0E01               	movlw	low SerialCOM@_SPBRG
  1293  0010B4  6EF6               	movwf	tblptrl,c
  1294  0010B6                     	if	1	;There is more than 1 active tblptr byte
  1295  0010B6  0E08               	movlw	high SerialCOM@_SPBRG
  1296  0010B8  6EF7               	movwf	tblptrh,c
  1297  0010BA                     	endif
  1298  0010BA                     	if	0	;There are less than 3 active tblptr bytes
  1299  0010BA                     	endif
  1300  0010BA  0008               	tblrd		*
  1301  0010BC  CFF5 FFAF          	movff	tablat,4015	;volatile
  1302  0010C0  0012               	return		;funcret
  1303  0010C2                     __end_of_SerialInit:
  1304                           	opt stack 0
  1305                           tblptru	equ	0xFF8
  1306                           tblptrh	equ	0xFF7
  1307                           tblptrl	equ	0xFF6
  1308                           tablat	equ	0xFF5
  1309                           prodl	equ	0xFF3
  1310                           intcon	equ	0xFF2
  1311                           postinc0	equ	0xFEE
  1312                           wreg	equ	0xFE8
  1313                           postdec1	equ	0xFE5
  1314                           fsr1l	equ	0xFE1
  1315                           status	equ	0xFD8
  1316                           
  1317 ;; *************** function _ReadFrame *****************
  1318 ;; Defined at:
  1319 ;;		line 71 in file "SerialCOM.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  pointer         2   18[BANK0 ] PTR unsigned char 
  1322 ;;		 -> RecievedData(15), 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;		None
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1334 ;;      Params:         0       2       0       0       0       0       0       0       0
  1335 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1336 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1337 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1338 ;;Total ram usage:        6 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:    9
  1341 ;; This function calls:
  1342 ;;		_TurnOnLights
  1343 ;;		___wmul
  1344 ;; This function is called by:
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text7
  1350  000804                     __ptext7:
  1351                           	opt stack 0
  1352  000804                     _ReadFrame:
  1353                           	opt stack 21
  1354                           
  1355                           ;SerialCOM.c: 74: if(f_frameready){
  1356                           
  1357                           ;incstack = 0
  1358  000804  5032               	movf	_f_frameready,w,c
  1359  000806  B4D8               	btfsc	status,2,c
  1360  000808  0012               	return	
  1361                           
  1362                           ;SerialCOM.c: 75: f_frameready=0;
  1363  00080A  0E00               	movlw	0
  1364  00080C  6E32               	movwf	_f_frameready,c
  1365                           
  1366                           ;SerialCOM.c: 77: pointer = &RecievedData[0];
  1367  00080E  0EBE               	movlw	low _RecievedData
  1368  000810  0100               	movlb	0	; () banked
  1369  000812  6FDF               	movwf	ReadFrame@pointer& (0+255),b
  1370  000814  0E00               	movlw	high _RecievedData
  1371  000816  0100               	movlb	0	; () banked
  1372  000818  6FE0               	movwf	(ReadFrame@pointer+1)& (0+255),b
  1373                           
  1374                           ; BSR set to: 0
  1375                           ;SerialCOM.c: 79: if ((*pointer)==firstbyte[0])
  1376  00081A  C0DF  FFD9         	movff	ReadFrame@pointer,fsr2l
  1377  00081E  C0E0  FFDA         	movff	ReadFrame@pointer+1,fsr2h
  1378  000822  0100               	movlb	0	; () banked
  1379  000824  51F1               	movf	_firstbyte& (0+255),w,b
  1380  000826  18DE               	xorwf	postinc2,w,c
  1381  000828  A4D8               	btfss	status,2,c
  1382  00082A  D017               	goto	l2374
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;SerialCOM.c: 80: {
  1386                           ;SerialCOM.c: 81: pointer++;
  1387  00082C  0100               	movlb	0	; () banked
  1388  00082E  4BDF               	infsnz	ReadFrame@pointer& (0+255),f,b
  1389  000830  2BE0               	incf	(ReadFrame@pointer+1)& (0+255),f,b
  1390                           
  1391                           ; BSR set to: 0
  1392                           ;SerialCOM.c: 82: if(*pointer==light){
  1393  000832  C0DF  FFD9         	movff	ReadFrame@pointer,fsr2l
  1394  000836  C0E0  FFDA         	movff	ReadFrame@pointer+1,fsr2h
  1395  00083A  5043               	movf	_light,w,c
  1396  00083C  18DE               	xorwf	postinc2,w,c
  1397  00083E  B4D8               	btfsc	status,2,c
  1398                           
  1399                           ; BSR set to: 0
  1400                           ;SerialCOM.c: 83: TurnOnLights();
  1401  000840  ECB0  F008         	call	_TurnOnLights	;wreg free
  1402                           
  1403                           ;SerialCOM.c: 84: }
  1404                           ;SerialCOM.c: 85: if(*pointer==fan){
  1405  000844  C0DF  FFD9         	movff	ReadFrame@pointer,fsr2l
  1406  000848  C0E0  FFDA         	movff	ReadFrame@pointer+1,fsr2h
  1407  00084C  5042               	movf	_fan,w,c
  1408  00084E  18DE               	xorwf	postinc2,w,c
  1409  000850  B4D8               	btfsc	status,2,c
  1410                           
  1411                           ;SerialCOM.c: 86: (LATA3=1U);
  1412  000852  8689               	bsf	3977,3,c	;volatile
  1413                           
  1414                           ;SerialCOM.c: 87: }
  1415                           ;SerialCOM.c: 88: TimerUser=30;
  1416  000854  0E1E               	movlw	30
  1417  000856  6E2C               	movwf	_TimerUser,c
  1418                           
  1419                           ;SerialCOM.c: 89: }
  1420  000858  D0E3               	goto	l2424
  1421  00085A                     l2374:
  1422                           
  1423                           ;SerialCOM.c: 90: else if (*pointer==firstbyte[1]){
  1424  00085A  C0DF  FFD9         	movff	ReadFrame@pointer,fsr2l
  1425  00085E  C0E0  FFDA         	movff	ReadFrame@pointer+1,fsr2h
  1426  000862  0100               	movlb	0	; () banked
  1427  000864  51F2               	movf	(_firstbyte+1)& (0+255),w,b
  1428  000866  18DE               	xorwf	postinc2,w,c
  1429  000868  A4D8               	btfss	status,2,c
  1430  00086A  D01F               	goto	l2390
  1431                           
  1432                           ; BSR set to: 0
  1433                           ;SerialCOM.c: 91: pointer++;
  1434  00086C  0100               	movlb	0	; () banked
  1435  00086E  4BDF               	infsnz	ReadFrame@pointer& (0+255),f,b
  1436  000870  2BE0               	incf	(ReadFrame@pointer+1)& (0+255),f,b
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;SerialCOM.c: 92: if(*pointer=='H'){
  1440  000872  C0DF  FFD9         	movff	ReadFrame@pointer,fsr2l
  1441  000876  C0E0  FFDA         	movff	ReadFrame@pointer+1,fsr2h
  1442  00087A  0E48               	movlw	72
  1443  00087C  18DE               	xorwf	postinc2,w,c
  1444  00087E  A4D8               	btfss	status,2,c
  1445  000880  D008               	goto	l2384
  1446  000882  D00F               	goto	l2386
  1447  000884                     l2382:
  1448                           
  1449                           ; BSR set to: 0
  1450                           ;SerialCOM.c: 94: optimalhumidity= *pointer;
  1451  000884  C0DF  FFD9         	movff	ReadFrame@pointer,fsr2l
  1452  000888  C0E0  FFDA         	movff	ReadFrame@pointer+1,fsr2h
  1453  00088C  50DF               	movf	indf2,w,c
  1454  00088E  6E35               	movwf	_optimalhumidity,c
  1455                           
  1456                           ;SerialCOM.c: 95: }
  1457  000890  D0C7               	goto	l2424
  1458  000892                     l2384:
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;SerialCOM.c: 96: else if (*pointer=='T'){
  1462  000892  C0DF  FFD9         	movff	ReadFrame@pointer,fsr2l
  1463  000896  C0E0  FFDA         	movff	ReadFrame@pointer+1,fsr2h
  1464  00089A  0E54               	movlw	84
  1465  00089C  18DE               	xorwf	postinc2,w,c
  1466  00089E  A4D8               	btfss	status,2,c
  1467  0008A0  D0BF               	goto	l2424
  1468  0008A2                     l2386:
  1469                           
  1470                           ; BSR set to: 0
  1471                           ;SerialCOM.c: 97: pointer++;
  1472  0008A2  0100               	movlb	0	; () banked
  1473  0008A4  4BDF               	infsnz	ReadFrame@pointer& (0+255),f,b
  1474  0008A6  2BE0               	incf	(ReadFrame@pointer+1)& (0+255),f,b
  1475  0008A8  D7ED               	goto	l2382
  1476  0008AA                     l2390:
  1477                           
  1478                           ; BSR set to: 0
  1479                           ;SerialCOM.c: 101: else if (*pointer==firstbyte[2])
  1480  0008AA  C0DF  FFD9         	movff	ReadFrame@pointer,fsr2l
  1481  0008AE  C0E0  FFDA         	movff	ReadFrame@pointer+1,fsr2h
  1482  0008B2  0100               	movlb	0	; () banked
  1483  0008B4  51F3               	movf	(_firstbyte+2)& (0+255),w,b
  1484  0008B6  18DE               	xorwf	postinc2,w,c
  1485  0008B8  A4D8               	btfss	status,2,c
  1486  0008BA  D07E               	goto	l2404
  1487                           
  1488                           ; BSR set to: 0
  1489                           ;SerialCOM.c: 102: {
  1490                           ;SerialCOM.c: 103: pointer++;
  1491  0008BC  0100               	movlb	0	; () banked
  1492  0008BE  4BDF               	infsnz	ReadFrame@pointer& (0+255),f,b
  1493  0008C0  2BE0               	incf	(ReadFrame@pointer+1)& (0+255),f,b
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;SerialCOM.c: 104: lightperday = (*pointer-0x30)*1000;
  1497  0008C2  C0DF  FFD9         	movff	ReadFrame@pointer,fsr2l
  1498  0008C6  C0E0  FFDA         	movff	ReadFrame@pointer+1,fsr2h
  1499  0008CA  50DF               	movf	indf2,w,c
  1500  0008CC  0100               	movlb	0	; () banked
  1501  0008CE  6FE1               	movwf	??_ReadFrame& (0+255),b
  1502  0008D0  0ED0               	movlw	208
  1503  0008D2  0100               	movlb	0	; () banked
  1504  0008D4  25E1               	addwf	??_ReadFrame& (0+255),w,b
  1505  0008D6  0100               	movlb	0	; () banked
  1506  0008D8  6FCD               	movwf	___wmul@multiplier& (0+255),b
  1507  0008DA  0100               	movlb	0	; () banked
  1508  0008DC  6BCE               	clrf	(___wmul@multiplier+1)& (0+255),b
  1509  0008DE  0EFF               	movlw	255
  1510  0008E0  23CE               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
  1511  0008E2  0E03               	movlw	3
  1512  0008E4  0100               	movlb	0	; () banked
  1513  0008E6  6FD0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1514  0008E8  0EE8               	movlw	232
  1515  0008EA  6FCF               	movwf	___wmul@multiplicand& (0+255),b
  1516  0008EC  EC1E  F008         	call	___wmul	;wreg free
  1517  0008F0  C0CD  F03C         	movff	?___wmul,_lightperday
  1518  0008F4  C0CE  F03D         	movff	?___wmul+1,_lightperday+1
  1519                           
  1520                           ;SerialCOM.c: 105: pointer++;
  1521  0008F8  0100               	movlb	0	; () banked
  1522  0008FA  4BDF               	infsnz	ReadFrame@pointer& (0+255),f,b
  1523  0008FC  2BE0               	incf	(ReadFrame@pointer+1)& (0+255),f,b
  1524                           
  1525                           ;SerialCOM.c: 106: lightperday += (*pointer-0x30)*100;
  1526  0008FE  C0DF  FFD9         	movff	ReadFrame@pointer,fsr2l
  1527  000902  C0E0  FFDA         	movff	ReadFrame@pointer+1,fsr2h
  1528  000906  50DF               	movf	indf2,w,c
  1529  000908  0100               	movlb	0	; () banked
  1530  00090A  6FE1               	movwf	??_ReadFrame& (0+255),b
  1531  00090C  0ED0               	movlw	208
  1532  00090E  0100               	movlb	0	; () banked
  1533  000910  25E1               	addwf	??_ReadFrame& (0+255),w,b
  1534  000912  0100               	movlb	0	; () banked
  1535  000914  6FCD               	movwf	___wmul@multiplier& (0+255),b
  1536  000916  0100               	movlb	0	; () banked
  1537  000918  6BCE               	clrf	(___wmul@multiplier+1)& (0+255),b
  1538  00091A  0EFF               	movlw	255
  1539  00091C  23CE               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
  1540  00091E  0E00               	movlw	0
  1541  000920  0100               	movlb	0	; () banked
  1542  000922  6FD0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1543  000924  0E64               	movlw	100
  1544  000926  6FCF               	movwf	___wmul@multiplicand& (0+255),b
  1545  000928  EC1E  F008         	call	___wmul	;wreg free
  1546  00092C  0100               	movlb	0	; () banked
  1547  00092E  51CD               	movf	?___wmul& (0+255),w,b
  1548  000930  263C               	addwf	_lightperday,f,c
  1549  000932  0100               	movlb	0	; () banked
  1550  000934  51CE               	movf	(?___wmul+1)& (0+255),w,b
  1551  000936  223D               	addwfc	_lightperday+1,f,c
  1552                           
  1553                           ; BSR set to: 0
  1554                           ;SerialCOM.c: 107: pointer++;
  1555  000938  0100               	movlb	0	; () banked
  1556  00093A  4BDF               	infsnz	ReadFrame@pointer& (0+255),f,b
  1557  00093C  2BE0               	incf	(ReadFrame@pointer+1)& (0+255),f,b
  1558                           
  1559                           ; BSR set to: 0
  1560                           ;SerialCOM.c: 108: lightperday += (*pointer-0x30)*10;
  1561  00093E  C0DF  FFD9         	movff	ReadFrame@pointer,fsr2l
  1562  000942  C0E0  FFDA         	movff	ReadFrame@pointer+1,fsr2h
  1563  000946  50DF               	movf	indf2,w,c
  1564  000948  0100               	movlb	0	; () banked
  1565  00094A  6FE1               	movwf	??_ReadFrame& (0+255),b
  1566  00094C  0ED0               	movlw	208
  1567  00094E  0100               	movlb	0	; () banked
  1568  000950  25E1               	addwf	??_ReadFrame& (0+255),w,b
  1569  000952  0100               	movlb	0	; () banked
  1570  000954  6FCD               	movwf	___wmul@multiplier& (0+255),b
  1571  000956  0100               	movlb	0	; () banked
  1572  000958  6BCE               	clrf	(___wmul@multiplier+1)& (0+255),b
  1573  00095A  0EFF               	movlw	255
  1574  00095C  23CE               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
  1575  00095E  0E00               	movlw	0
  1576  000960  0100               	movlb	0	; () banked
  1577  000962  6FD0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1578  000964  0E0A               	movlw	10
  1579  000966  6FCF               	movwf	___wmul@multiplicand& (0+255),b
  1580  000968  EC1E  F008         	call	___wmul	;wreg free
  1581  00096C  0100               	movlb	0	; () banked
  1582  00096E  51CD               	movf	?___wmul& (0+255),w,b
  1583  000970  263C               	addwf	_lightperday,f,c
  1584  000972  0100               	movlb	0	; () banked
  1585  000974  51CE               	movf	(?___wmul+1)& (0+255),w,b
  1586  000976  223D               	addwfc	_lightperday+1,f,c
  1587                           
  1588                           ;SerialCOM.c: 109: pointer++;
  1589  000978  0100               	movlb	0	; () banked
  1590  00097A  4BDF               	infsnz	ReadFrame@pointer& (0+255),f,b
  1591  00097C  2BE0               	incf	(ReadFrame@pointer+1)& (0+255),f,b
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;SerialCOM.c: 110: lightperday += (*pointer-0x30);
  1595  00097E  0ED0               	movlw	208
  1596  000980  0100               	movlb	0	; () banked
  1597  000982  6FE1               	movwf	??_ReadFrame& (0+255),b
  1598  000984  0EFF               	movlw	255
  1599  000986  0100               	movlb	0	; () banked
  1600  000988  6FE2               	movwf	(??_ReadFrame+1)& (0+255),b
  1601  00098A  C0DF  FFD9         	movff	ReadFrame@pointer,fsr2l
  1602  00098E  C0E0  FFDA         	movff	ReadFrame@pointer+1,fsr2h
  1603  000992  50DF               	movf	indf2,w,c
  1604  000994  0100               	movlb	0	; () banked
  1605  000996  6FE3               	movwf	(??_ReadFrame+2)& (0+255),b
  1606  000998  6BE4               	clrf	(??_ReadFrame+3)& (0+255),b
  1607  00099A  0100               	movlb	0	; () banked
  1608  00099C  51E1               	movf	??_ReadFrame& (0+255),w,b
  1609  00099E  0100               	movlb	0	; () banked
  1610  0009A0  27E3               	addwf	(??_ReadFrame+2)& (0+255),f,b
  1611  0009A2  0100               	movlb	0	; () banked
  1612  0009A4  51E2               	movf	(??_ReadFrame+1)& (0+255),w,b
  1613  0009A6  0100               	movlb	0	; () banked
  1614  0009A8  23E4               	addwfc	(??_ReadFrame+3)& (0+255),f,b
  1615  0009AA  0100               	movlb	0	; () banked
  1616  0009AC  51E3               	movf	(??_ReadFrame+2)& (0+255),w,b
  1617  0009AE  263C               	addwf	_lightperday,f,c
  1618  0009B0  0100               	movlb	0	; () banked
  1619  0009B2  51E4               	movf	(??_ReadFrame+3)& (0+255),w,b
  1620  0009B4  223D               	addwfc	_lightperday+1,f,c
  1621                           
  1622                           ;SerialCOM.c: 111: }
  1623  0009B6  D034               	goto	l2424
  1624  0009B8                     l2404:
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;SerialCOM.c: 112: else if (*pointer==firstbyte[3])
  1628  0009B8  C0DF  FFD9         	movff	ReadFrame@pointer,fsr2l
  1629  0009BC  C0E0  FFDA         	movff	ReadFrame@pointer+1,fsr2h
  1630  0009C0  0100               	movlb	0	; () banked
  1631  0009C2  51F4               	movf	(_firstbyte+3)& (0+255),w,b
  1632  0009C4  18DE               	xorwf	postinc2,w,c
  1633  0009C6  A4D8               	btfss	status,2,c
  1634  0009C8  D017               	goto	l2416
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;SerialCOM.c: 113: {
  1638                           ;SerialCOM.c: 114: pointer++;
  1639  0009CA  0100               	movlb	0	; () banked
  1640  0009CC  4BDF               	infsnz	ReadFrame@pointer& (0+255),f,b
  1641  0009CE  2BE0               	incf	(ReadFrame@pointer+1)& (0+255),f,b
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;SerialCOM.c: 115: if(*pointer=='H'){
  1645  0009D0  C0DF  FFD9         	movff	ReadFrame@pointer,fsr2l
  1646  0009D4  C0E0  FFDA         	movff	ReadFrame@pointer+1,fsr2h
  1647  0009D8  0E48               	movlw	72
  1648  0009DA  18DE               	xorwf	postinc2,w,c
  1649  0009DC  B4D8               	btfsc	status,2,c
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;SerialCOM.c: 116: TXREG=actualhumidity;
  1653  0009DE  C02D  FFAD         	movff	_actualhumidity,4013	;volatile
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;SerialCOM.c: 117: }
  1657                           ;SerialCOM.c: 118: if(*pointer=='T'){
  1658                           
  1659                           ; BSR set to: 0
  1660  0009E2  C0DF  FFD9         	movff	ReadFrame@pointer,fsr2l
  1661  0009E6  C0E0  FFDA         	movff	ReadFrame@pointer+1,fsr2h
  1662  0009EA  0E54               	movlw	84
  1663  0009EC  18DE               	xorwf	postinc2,w,c
  1664  0009EE  A4D8               	btfss	status,2,c
  1665  0009F0  D017               	goto	l2424
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;SerialCOM.c: 119: TXREG=actualtemperature;
  1669  0009F2  C02E  FFAD         	movff	_actualtemperature,4013	;volatile
  1670                           
  1671                           ; BSR set to: 0
  1672                           ;SerialCOM.c: 120: }
  1673                           ;SerialCOM.c: 121: }
  1674  0009F6  D014               	goto	l2424
  1675  0009F8                     l2416:
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;SerialCOM.c: 122: else if (*pointer==firstbyte[4])
  1679  0009F8  C0DF  FFD9         	movff	ReadFrame@pointer,fsr2l
  1680  0009FC  C0E0  FFDA         	movff	ReadFrame@pointer+1,fsr2h
  1681  000A00  0100               	movlb	0	; () banked
  1682  000A02  51F5               	movf	(_firstbyte+4)& (0+255),w,b
  1683  000A04  18DE               	xorwf	postinc2,w,c
  1684  000A06  A4D8               	btfss	status,2,c
  1685  000A08  D00B               	goto	l2424
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;SerialCOM.c: 123: {
  1689                           ;SerialCOM.c: 124: pointer++;
  1690  000A0A  0100               	movlb	0	; () banked
  1691  000A0C  4BDF               	infsnz	ReadFrame@pointer& (0+255),f,b
  1692  000A0E  2BE0               	incf	(ReadFrame@pointer+1)& (0+255),f,b
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;SerialCOM.c: 125: if(*pointer=='F'){
  1696  000A10  C0DF  FFD9         	movff	ReadFrame@pointer,fsr2l
  1697  000A14  C0E0  FFDA         	movff	ReadFrame@pointer+1,fsr2h
  1698  000A18  0E46               	movlw	70
  1699  000A1A  18DE               	xorwf	postinc2,w,c
  1700  000A1C  B4D8               	btfsc	status,2,c
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;SerialCOM.c: 126: (LATA3=0U);
  1704  000A1E  9689               	bcf	3977,3,c	;volatile
  1705  000A20                     l2424:
  1706                           
  1707                           ;SerialCOM.c: 127: }
  1708                           ;SerialCOM.c: 128: }
  1709                           ;SerialCOM.c: 132: for(counter = 0;counter<=14;counter++)
  1710  000A20  0E00               	movlw	0
  1711  000A22  6E31               	movwf	_counter,c
  1712  000A24                     l2426:
  1713  000A24  0E0E               	movlw	14
  1714  000A26  6431               	cpfsgt	_counter,c
  1715  000A28  D001               	goto	l2430
  1716  000A2A  0012               	return	
  1717  000A2C                     l2430:
  1718                           
  1719                           ;SerialCOM.c: 133: {
  1720                           ;SerialCOM.c: 134: RecievedData[counter]='\0';
  1721  000A2C  5031               	movf	_counter,w,c
  1722  000A2E  0D01               	mullw	1
  1723  000A30  0EBE               	movlw	low _RecievedData
  1724  000A32  24F3               	addwf	prodl,w,c
  1725  000A34  6ED9               	movwf	fsr2l,c
  1726  000A36  0E00               	movlw	high _RecievedData
  1727  000A38  20F4               	addwfc	prodh,w,c
  1728  000A3A  6EDA               	movwf	fsr2h,c
  1729  000A3C  0E00               	movlw	0
  1730  000A3E  6EDF               	movwf	indf2,c
  1731  000A40  2A31               	incf	_counter,f,c
  1732  000A42  D7F0               	goto	l2426
  1733  000A44                     __end_of_ReadFrame:
  1734                           	opt stack 0
  1735                           tblptru	equ	0xFF8
  1736                           tblptrh	equ	0xFF7
  1737                           tblptrl	equ	0xFF6
  1738                           tablat	equ	0xFF5
  1739                           prodh	equ	0xFF4
  1740                           prodl	equ	0xFF3
  1741                           intcon	equ	0xFF2
  1742                           postinc0	equ	0xFEE
  1743                           wreg	equ	0xFE8
  1744                           postdec1	equ	0xFE5
  1745                           fsr1l	equ	0xFE1
  1746                           indf2	equ	0xFDF
  1747                           postinc2	equ	0xFDE
  1748                           fsr2h	equ	0xFDA
  1749                           fsr2l	equ	0xFD9
  1750                           status	equ	0xFD8
  1751                           
  1752 ;; *************** function _TurnOnLights *****************
  1753 ;; Defined at:
  1754 ;;		line 12 in file "LedDriver.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;		None
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;		None
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  2   16[None  ] int 
  1761 ;; Registers used:
  1762 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1768 ;;      Params:         0       0       0       0       0       0       0       0       0
  1769 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1770 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1771 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1772 ;;Total ram usage:        0 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; Hardware stack levels required when called:    8
  1775 ;; This function calls:
  1776 ;;		_SetPWM
  1777 ;;		_StartPWM
  1778 ;; This function is called by:
  1779 ;;		_main
  1780 ;;		_ReadFrame
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text8
  1785  001160                     __ptext8:
  1786                           	opt stack 0
  1787  001160                     _TurnOnLights:
  1788                           	opt stack 22
  1789                           
  1790                           ;LedDriver.c: 13: if(!lightstate_f){
  1791                           
  1792                           ;incstack = 0
  1793  001160  B03B               	btfsc	_lightstate_f/(0+8),_lightstate_f& (0+7),c
  1794  001162  0012               	return	
  1795                           
  1796                           ;LedDriver.c: 14: SetPWM(50);
  1797  001164  0E32               	movlw	50
  1798  001166  EC96  F008         	call	_SetPWM
  1799                           
  1800                           ;LedDriver.c: 15: StartPWM();
  1801  00116A  EC1F  F009         	call	_StartPWM	;wreg free
  1802                           
  1803                           ;LedDriver.c: 16: lightstate_f=1;
  1804  00116E  803B               	bsf	_lightstate_f/(0+8),_lightstate_f& (0+7),c
  1805  001170  0012               	return	
  1806  001172                     __end_of_TurnOnLights:
  1807                           	opt stack 0
  1808                           tblptru	equ	0xFF8
  1809                           tblptrh	equ	0xFF7
  1810                           tblptrl	equ	0xFF6
  1811                           tablat	equ	0xFF5
  1812                           prodh	equ	0xFF4
  1813                           prodl	equ	0xFF3
  1814                           intcon	equ	0xFF2
  1815                           postinc0	equ	0xFEE
  1816                           wreg	equ	0xFE8
  1817                           postdec1	equ	0xFE5
  1818                           fsr1l	equ	0xFE1
  1819                           indf2	equ	0xFDF
  1820                           postinc2	equ	0xFDE
  1821                           fsr2h	equ	0xFDA
  1822                           fsr2l	equ	0xFD9
  1823                           status	equ	0xFD8
  1824                           
  1825 ;; *************** function _StartPWM *****************
  1826 ;; Defined at:
  1827 ;;		line 17 in file "PWM.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;		None
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;		None
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg, status,2
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1841 ;;      Params:         0       0       0       0       0       0       0       0       0
  1842 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1843 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1844 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1845 ;;Total ram usage:        0 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; Hardware stack levels required when called:    5
  1848 ;; This function calls:
  1849 ;;		Nothing
  1850 ;; This function is called by:
  1851 ;;		_TurnOnLights
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text9
  1856  00123E                     __ptext9:
  1857                           	opt stack 0
  1858  00123E                     _StartPWM:
  1859                           	opt stack 24
  1860                           
  1861                           ;PWM.c: 18: CCP2CON=0x0C;
  1862                           
  1863                           ;incstack = 0
  1864  00123E  0E0C               	movlw	12
  1865  001240  6EBA               	movwf	4026,c	;volatile
  1866                           
  1867                           ;PWM.c: 19: T1OSCEN=1U;
  1868  001242  86CD               	bsf	4045,3,c	;volatile
  1869  001244  0012               	return		;funcret
  1870  001246                     __end_of_StartPWM:
  1871                           	opt stack 0
  1872                           tblptru	equ	0xFF8
  1873                           tblptrh	equ	0xFF7
  1874                           tblptrl	equ	0xFF6
  1875                           tablat	equ	0xFF5
  1876                           prodh	equ	0xFF4
  1877                           prodl	equ	0xFF3
  1878                           intcon	equ	0xFF2
  1879                           postinc0	equ	0xFEE
  1880                           wreg	equ	0xFE8
  1881                           postdec1	equ	0xFE5
  1882                           fsr1l	equ	0xFE1
  1883                           indf2	equ	0xFDF
  1884                           postinc2	equ	0xFDE
  1885                           fsr2h	equ	0xFDA
  1886                           fsr2l	equ	0xFD9
  1887                           status	equ	0xFD8
  1888                           
  1889 ;; *************** function _SetPWM *****************
  1890 ;; Defined at:
  1891 ;;		line 44 in file "PWM.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;  dutycycle       1    wreg     unsigned char 
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  dutycycle       1   17[BANK0 ] unsigned char 
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1905 ;;      Params:         0       0       0       0       0       0       0       0       0
  1906 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1908 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1909 ;;Total ram usage:        1 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; Hardware stack levels required when called:    7
  1912 ;; This function calls:
  1913 ;;		_SetDutyCycle
  1914 ;;		_SetPeriod
  1915 ;; This function is called by:
  1916 ;;		_TurnOnLights
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text10
  1921  00112C                     __ptext10:
  1922                           	opt stack 0
  1923  00112C                     _SetPWM:
  1924                           	opt stack 22
  1925                           
  1926                           ;incstack = 0
  1927                           ;SetPWM@dutycycle stored from wreg
  1928  00112C  0100               	movlb	0	; () banked
  1929  00112E  6FDE               	movwf	SetPWM@dutycycle& (0+255),b
  1930                           
  1931                           ;PWM.c: 45: T2CON=0x00;
  1932  001130  0E00               	movlw	0
  1933  001132  6ECA               	movwf	4042,c	;volatile
  1934                           
  1935                           ;PWM.c: 46: SetPeriod();
  1936  001134  EC2F  F009         	call	_SetPeriod	;wreg free
  1937                           
  1938                           ;PWM.c: 47: SetDutyCycle(dutycycle);
  1939  001138  0100               	movlb	0	; () banked
  1940  00113A  51DE               	movf	SetPWM@dutycycle& (0+255),w,b
  1941  00113C  EC11  F007         	call	_SetDutyCycle
  1942                           
  1943                           ;PWM.c: 48: (TRISBbits.TRISB3 = 0);
  1944  001140  9693               	bcf	3987,3,c	;volatile
  1945                           
  1946                           ;PWM.c: 49: T2CON=0b110;
  1947  001142  0E06               	movlw	6
  1948  001144  6ECA               	movwf	4042,c	;volatile
  1949  001146  0012               	return		;funcret
  1950  001148                     __end_of_SetPWM:
  1951                           	opt stack 0
  1952                           tblptru	equ	0xFF8
  1953                           tblptrh	equ	0xFF7
  1954                           tblptrl	equ	0xFF6
  1955                           tablat	equ	0xFF5
  1956                           prodh	equ	0xFF4
  1957                           prodl	equ	0xFF3
  1958                           intcon	equ	0xFF2
  1959                           postinc0	equ	0xFEE
  1960                           wreg	equ	0xFE8
  1961                           postdec1	equ	0xFE5
  1962                           fsr1l	equ	0xFE1
  1963                           indf2	equ	0xFDF
  1964                           postinc2	equ	0xFDE
  1965                           fsr2h	equ	0xFDA
  1966                           fsr2l	equ	0xFD9
  1967                           status	equ	0xFD8
  1968                           
  1969 ;; *************** function _SetPeriod *****************
  1970 ;; Defined at:
  1971 ;;		line 28 in file "PWM.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;		None
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;		None
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  1    wreg      void 
  1978 ;; Registers used:
  1979 ;;		wreg, status,2
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1985 ;;      Params:         0       0       0       0       0       0       0       0       0
  1986 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1987 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1988 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1989 ;;Total ram usage:        0 bytes
  1990 ;; Hardware stack levels used:    1
  1991 ;; Hardware stack levels required when called:    5
  1992 ;; This function calls:
  1993 ;;		Nothing
  1994 ;; This function is called by:
  1995 ;;		_SetPWM
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           	psect	text11
  2000  00125E                     __ptext11:
  2001                           	opt stack 0
  2002  00125E                     _SetPeriod:
  2003                           	opt stack 23
  2004                           
  2005                           ;PWM.c: 30: PR2=124;
  2006                           
  2007                           ;incstack = 0
  2008  00125E  0E7C               	movlw	124
  2009  001260  6ECB               	movwf	4043,c	;volatile
  2010  001262  0012               	return		;funcret
  2011  001264                     __end_of_SetPeriod:
  2012                           	opt stack 0
  2013                           tblptru	equ	0xFF8
  2014                           tblptrh	equ	0xFF7
  2015                           tblptrl	equ	0xFF6
  2016                           tablat	equ	0xFF5
  2017                           prodh	equ	0xFF4
  2018                           prodl	equ	0xFF3
  2019                           intcon	equ	0xFF2
  2020                           postinc0	equ	0xFEE
  2021                           wreg	equ	0xFE8
  2022                           postdec1	equ	0xFE5
  2023                           fsr1l	equ	0xFE1
  2024                           indf2	equ	0xFDF
  2025                           postinc2	equ	0xFDE
  2026                           fsr2h	equ	0xFDA
  2027                           fsr2l	equ	0xFD9
  2028                           status	equ	0xFD8
  2029                           
  2030 ;; *************** function _SetDutyCycle *****************
  2031 ;; Defined at:
  2032 ;;		line 33 in file "PWM.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  dutycycle       1    wreg     unsigned char 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  dutycycle       1   16[BANK0 ] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2046 ;;      Params:         0       0       0       0       0       0       0       0       0
  2047 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2048 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2049 ;;      Totals:         0       3       0       0       0       0       0       0       0
  2050 ;;Total ram usage:        3 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    6
  2053 ;; This function calls:
  2054 ;;		___awdiv
  2055 ;;		___wmul
  2056 ;; This function is called by:
  2057 ;;		_SetPWM
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           	psect	text12
  2062  000E22                     __ptext12:
  2063                           	opt stack 0
  2064  000E22                     _SetDutyCycle:
  2065                           	opt stack 22
  2066                           
  2067                           ;incstack = 0
  2068                           ;SetDutyCycle@dutycycle stored from wreg
  2069  000E22  0100               	movlb	0	; () banked
  2070  000E24  6FDD               	movwf	SetDutyCycle@dutycycle& (0+255),b
  2071                           
  2072                           ;PWM.c: 34: PWMValue=((dutycycle)*470)/100;
  2073  000E26  C0DD  F0CD         	movff	SetDutyCycle@dutycycle,___wmul@multiplier
  2074  000E2A  0100               	movlb	0	; () banked
  2075  000E2C  6BCE               	clrf	(___wmul@multiplier+1)& (0+255),b
  2076  000E2E  0E01               	movlw	1
  2077  000E30  0100               	movlb	0	; () banked
  2078  000E32  6FD0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2079  000E34  0ED6               	movlw	214
  2080  000E36  6FCF               	movwf	___wmul@multiplicand& (0+255),b
  2081  000E38  EC1E  F008         	call	___wmul	;wreg free
  2082  000E3C  C0CD  F0D3         	movff	?___wmul,___awdiv@dividend
  2083  000E40  C0CE  F0D4         	movff	?___wmul+1,___awdiv@dividend+1
  2084  000E44  0E00               	movlw	0
  2085  000E46  0100               	movlb	0	; () banked
  2086  000E48  6FD6               	movwf	(___awdiv@divisor+1)& (0+255),b
  2087  000E4A  0E64               	movlw	100
  2088  000E4C  6FD5               	movwf	___awdiv@divisor& (0+255),b
  2089  000E4E  EC22  F006         	call	___awdiv	;wreg free
  2090  000E52  C0D3  F023         	movff	?___awdiv,_PWMValue
  2091  000E56  C0D4  F024         	movff	?___awdiv+1,_PWMValue+1
  2092                           
  2093                           ;PWM.c: 35: LSb=PWMValue&0x03;
  2094  000E5A  0E03               	movlw	3
  2095  000E5C  1423               	andwf	_PWMValue,w,c
  2096  000E5E  0100               	movlb	0	; () banked
  2097  000E60  6FB0               	movwf	_LSb& (0+255),b
  2098  000E62  0100               	movlb	0	; () banked
  2099  000E64  6BB1               	clrf	(_LSb+1)& (0+255),b
  2100                           
  2101                           ; BSR set to: 0
  2102                           ;PWM.c: 36: MSb=PWMValue>>2;
  2103  000E66  C023  F0DB         	movff	_PWMValue,??_SetDutyCycle
  2104  000E6A  C024  F0DC         	movff	_PWMValue+1,??_SetDutyCycle+1
  2105  000E6E  0100               	movlb	0	; () banked
  2106  000E70  90D8               	bcf	status,0,c
  2107  000E72  33DC               	rrcf	(??_SetDutyCycle+1)& (0+255),f,b
  2108  000E74  33DB               	rrcf	??_SetDutyCycle& (0+255),f,b
  2109  000E76  0100               	movlb	0	; () banked
  2110  000E78  90D8               	bcf	status,0,c
  2111  000E7A  33DC               	rrcf	(??_SetDutyCycle+1)& (0+255),f,b
  2112  000E7C  33DB               	rrcf	??_SetDutyCycle& (0+255),f,b
  2113  000E7E  C0DB  F0B4         	movff	??_SetDutyCycle,_MSb
  2114  000E82  C0DC  F0B5         	movff	??_SetDutyCycle+1,_MSb+1
  2115                           
  2116                           ; BSR set to: 0
  2117                           ;PWM.c: 38: CCPR2L=MSb;
  2118  000E86  C0B4  FFBB         	movff	_MSb,4027	;volatile
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;PWM.c: 39: CCP2CON=CCP2CON|(LSb<<4);
  2122  000E8A  0100               	movlb	0	; () banked
  2123  000E8C  39B0               	swapf	_LSb& (0+255),w,b
  2124  000E8E  0BF0               	andlw	240
  2125  000E90  10BA               	iorwf	4026,w,c
  2126  000E92  6EBA               	movwf	4026,c	;volatile
  2127                           
  2128                           ; BSR set to: 0
  2129  000E94  0012               	return		;funcret
  2130  000E96                     __end_of_SetDutyCycle:
  2131                           	opt stack 0
  2132                           tblptru	equ	0xFF8
  2133                           tblptrh	equ	0xFF7
  2134                           tblptrl	equ	0xFF6
  2135                           tablat	equ	0xFF5
  2136                           prodh	equ	0xFF4
  2137                           prodl	equ	0xFF3
  2138                           intcon	equ	0xFF2
  2139                           postinc0	equ	0xFEE
  2140                           wreg	equ	0xFE8
  2141                           postdec1	equ	0xFE5
  2142                           fsr1l	equ	0xFE1
  2143                           indf2	equ	0xFDF
  2144                           postinc2	equ	0xFDE
  2145                           fsr2h	equ	0xFDA
  2146                           fsr2l	equ	0xFD9
  2147                           status	equ	0xFD8
  2148                           
  2149 ;; *************** function ___wmul *****************
  2150 ;; Defined at:
  2151 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2154 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  product         2    4[BANK0 ] unsigned int 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  2    0[BANK0 ] unsigned int 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2, status,0, prodl, prodh
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2166 ;;      Params:         0       4       0       0       0       0       0       0       0
  2167 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2168 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2169 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2170 ;;Total ram usage:        6 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    5
  2173 ;; This function calls:
  2174 ;;		Nothing
  2175 ;; This function is called by:
  2176 ;;		_SetDutyCycle
  2177 ;;		_ReadFrame
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text13
  2182  00103C                     __ptext13:
  2183                           	opt stack 0
  2184  00103C                     ___wmul:
  2185                           	opt stack 22
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;incstack = 0
  2189  00103C  0100               	movlb	0	; () banked
  2190  00103E  51CD               	movf	___wmul@multiplier& (0+255),w,b
  2191  001040  0100               	movlb	0	; () banked
  2192  001042  03CF               	mulwf	___wmul@multiplicand& (0+255),b
  2193  001044  CFF3 F0D1          	movff	prodl,___wmul@product
  2194  001048  CFF4 F0D2          	movff	prodh,___wmul@product+1
  2195  00104C  0100               	movlb	0	; () banked
  2196  00104E  51CD               	movf	___wmul@multiplier& (0+255),w,b
  2197  001050  0100               	movlb	0	; () banked
  2198  001052  03D0               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2199  001054  50F3               	movf	prodl,w,c
  2200  001056  0100               	movlb	0	; () banked
  2201  001058  27D2               	addwf	(___wmul@product+1)& (0+255),f,b
  2202  00105A  0100               	movlb	0	; () banked
  2203  00105C  51CE               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2204  00105E  0100               	movlb	0	; () banked
  2205  001060  03CF               	mulwf	___wmul@multiplicand& (0+255),b
  2206  001062  50F3               	movf	prodl,w,c
  2207  001064  0100               	movlb	0	; () banked
  2208  001066  27D2               	addwf	(___wmul@product+1)& (0+255),f,b
  2209                           
  2210                           ; BSR set to: 0
  2211  001068  C0D1  F0CD         	movff	___wmul@product,?___wmul
  2212  00106C  C0D2  F0CE         	movff	___wmul@product+1,?___wmul+1
  2213  001070  0012               	return	
  2214  001072                     __end_of___wmul:
  2215                           	opt stack 0
  2216                           tblptru	equ	0xFF8
  2217                           tblptrh	equ	0xFF7
  2218                           tblptrl	equ	0xFF6
  2219                           tablat	equ	0xFF5
  2220                           prodh	equ	0xFF4
  2221                           prodl	equ	0xFF3
  2222                           intcon	equ	0xFF2
  2223                           postinc0	equ	0xFEE
  2224                           wreg	equ	0xFE8
  2225                           postdec1	equ	0xFE5
  2226                           fsr1l	equ	0xFE1
  2227                           indf2	equ	0xFDF
  2228                           postinc2	equ	0xFDE
  2229                           fsr2h	equ	0xFDA
  2230                           fsr2l	equ	0xFD9
  2231                           status	equ	0xFD8
  2232                           
  2233 ;; *************** function ___awdiv *****************
  2234 ;; Defined at:
  2235 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  dividend        2    6[BANK0 ] int 
  2238 ;;  divisor         2    8[BANK0 ] int 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  quotient        2   12[BANK0 ] int 
  2241 ;;  sign            1   11[BANK0 ] unsigned char 
  2242 ;;  counter         1   10[BANK0 ] unsigned char 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  2    6[BANK0 ] int 
  2245 ;; Registers used:
  2246 ;;		wreg, status,2, status,0
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2252 ;;      Params:         0       4       0       0       0       0       0       0       0
  2253 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2254 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2255 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2256 ;;Total ram usage:        8 bytes
  2257 ;; Hardware stack levels used:    1
  2258 ;; Hardware stack levels required when called:    5
  2259 ;; This function calls:
  2260 ;;		Nothing
  2261 ;; This function is called by:
  2262 ;;		_SetDutyCycle
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           	psect	text14
  2267  000C44                     __ptext14:
  2268                           	opt stack 0
  2269  000C44                     ___awdiv:
  2270                           	opt stack 22
  2271                           
  2272                           ; BSR set to: 0
  2273                           ;incstack = 0
  2274  000C44  0E00               	movlw	0
  2275  000C46  0100               	movlb	0	; () banked
  2276  000C48  6FD8               	movwf	___awdiv@sign& (0+255),b
  2277                           
  2278                           ; BSR set to: 0
  2279  000C4A  0100               	movlb	0	; () banked
  2280  000C4C  AFD6               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2281  000C4E  D008               	goto	l2200
  2282                           
  2283                           ; BSR set to: 0
  2284  000C50  0100               	movlb	0	; () banked
  2285  000C52  6DD5               	negf	___awdiv@divisor& (0+255),b
  2286  000C54  1FD6               	comf	(___awdiv@divisor+1)& (0+255),f,b
  2287  000C56  B0D8               	btfsc	status,0,c
  2288  000C58  2BD6               	incf	(___awdiv@divisor+1)& (0+255),f,b
  2289                           
  2290                           ; BSR set to: 0
  2291  000C5A  0E01               	movlw	1
  2292  000C5C  0100               	movlb	0	; () banked
  2293  000C5E  6FD8               	movwf	___awdiv@sign& (0+255),b
  2294  000C60                     l2200:
  2295                           
  2296                           ; BSR set to: 0
  2297  000C60  0100               	movlb	0	; () banked
  2298  000C62  AFD4               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  2299  000C64  D008               	goto	l2206
  2300                           
  2301                           ; BSR set to: 0
  2302  000C66  0100               	movlb	0	; () banked
  2303  000C68  6DD3               	negf	___awdiv@dividend& (0+255),b
  2304  000C6A  1FD4               	comf	(___awdiv@dividend+1)& (0+255),f,b
  2305  000C6C  B0D8               	btfsc	status,0,c
  2306  000C6E  2BD4               	incf	(___awdiv@dividend+1)& (0+255),f,b
  2307                           
  2308                           ; BSR set to: 0
  2309  000C70  0E01               	movlw	1
  2310  000C72  0100               	movlb	0	; () banked
  2311  000C74  1BD8               	xorwf	___awdiv@sign& (0+255),f,b
  2312  000C76                     l2206:
  2313                           
  2314                           ; BSR set to: 0
  2315  000C76  0E00               	movlw	0
  2316  000C78  0100               	movlb	0	; () banked
  2317  000C7A  6FDA               	movwf	(___awdiv@quotient+1)& (0+255),b
  2318  000C7C  0E00               	movlw	0
  2319  000C7E  6FD9               	movwf	___awdiv@quotient& (0+255),b
  2320                           
  2321                           ; BSR set to: 0
  2322  000C80  0100               	movlb	0	; () banked
  2323  000C82  51D5               	movf	___awdiv@divisor& (0+255),w,b
  2324  000C84  0100               	movlb	0	; () banked
  2325  000C86  11D6               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  2326  000C88  B4D8               	btfsc	status,2,c
  2327  000C8A  D02C               	goto	l2228
  2328                           
  2329                           ; BSR set to: 0
  2330  000C8C  0E01               	movlw	1
  2331  000C8E  0100               	movlb	0	; () banked
  2332  000C90  6FD7               	movwf	___awdiv@counter& (0+255),b
  2333  000C92  D006               	goto	l2214
  2334  000C94                     l2212:
  2335                           
  2336                           ; BSR set to: 0
  2337  000C94  0100               	movlb	0	; () banked
  2338  000C96  90D8               	bcf	status,0,c
  2339  000C98  37D5               	rlcf	___awdiv@divisor& (0+255),f,b
  2340  000C9A  37D6               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  2341  000C9C  0100               	movlb	0	; () banked
  2342  000C9E  2BD7               	incf	___awdiv@counter& (0+255),f,b
  2343  000CA0                     l2214:
  2344                           
  2345                           ; BSR set to: 0
  2346  000CA0  0100               	movlb	0	; () banked
  2347  000CA2  AFD6               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2348  000CA4  D7F7               	goto	l2212
  2349  000CA6                     l2216:
  2350                           
  2351                           ; BSR set to: 0
  2352  000CA6  0100               	movlb	0	; () banked
  2353  000CA8  90D8               	bcf	status,0,c
  2354  000CAA  37D9               	rlcf	___awdiv@quotient& (0+255),f,b
  2355  000CAC  37DA               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  2356                           
  2357                           ; BSR set to: 0
  2358  000CAE  0100               	movlb	0	; () banked
  2359  000CB0  51D5               	movf	___awdiv@divisor& (0+255),w,b
  2360  000CB2  0100               	movlb	0	; () banked
  2361  000CB4  5DD3               	subwf	___awdiv@dividend& (0+255),w,b
  2362  000CB6  0100               	movlb	0	; () banked
  2363  000CB8  51D6               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2364  000CBA  0100               	movlb	0	; () banked
  2365  000CBC  59D4               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  2366  000CBE  A0D8               	btfss	status,0,c
  2367  000CC0  D00A               	goto	l2224
  2368                           
  2369                           ; BSR set to: 0
  2370  000CC2  0100               	movlb	0	; () banked
  2371  000CC4  51D5               	movf	___awdiv@divisor& (0+255),w,b
  2372  000CC6  0100               	movlb	0	; () banked
  2373  000CC8  5FD3               	subwf	___awdiv@dividend& (0+255),f,b
  2374  000CCA  0100               	movlb	0	; () banked
  2375  000CCC  51D6               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2376  000CCE  0100               	movlb	0	; () banked
  2377  000CD0  5BD4               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  2378                           
  2379                           ; BSR set to: 0
  2380  000CD2  0100               	movlb	0	; () banked
  2381  000CD4  81D9               	bsf	___awdiv@quotient& (0+255),0,b
  2382  000CD6                     l2224:
  2383                           
  2384                           ; BSR set to: 0
  2385  000CD6  0100               	movlb	0	; () banked
  2386  000CD8  90D8               	bcf	status,0,c
  2387  000CDA  33D6               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  2388  000CDC  33D5               	rrcf	___awdiv@divisor& (0+255),f,b
  2389                           
  2390                           ; BSR set to: 0
  2391  000CDE  0100               	movlb	0	; () banked
  2392  000CE0  2FD7               	decfsz	___awdiv@counter& (0+255),f,b
  2393  000CE2  D7E1               	goto	l2216
  2394  000CE4                     l2228:
  2395                           
  2396                           ; BSR set to: 0
  2397  000CE4  0100               	movlb	0	; () banked
  2398  000CE6  51D8               	movf	___awdiv@sign& (0+255),w,b
  2399  000CE8  0100               	movlb	0	; () banked
  2400  000CEA  B4D8               	btfsc	status,2,c
  2401  000CEC  D005               	goto	l2232
  2402                           
  2403                           ; BSR set to: 0
  2404  000CEE  0100               	movlb	0	; () banked
  2405  000CF0  6DD9               	negf	___awdiv@quotient& (0+255),b
  2406  000CF2  1FDA               	comf	(___awdiv@quotient+1)& (0+255),f,b
  2407  000CF4  B0D8               	btfsc	status,0,c
  2408  000CF6  2BDA               	incf	(___awdiv@quotient+1)& (0+255),f,b
  2409  000CF8                     l2232:
  2410                           
  2411                           ; BSR set to: 0
  2412  000CF8  C0D9  F0D3         	movff	___awdiv@quotient,?___awdiv
  2413  000CFC  C0DA  F0D4         	movff	___awdiv@quotient+1,?___awdiv+1
  2414  000D00  0012               	return	
  2415  000D02                     __end_of___awdiv:
  2416                           	opt stack 0
  2417                           tblptru	equ	0xFF8
  2418                           tblptrh	equ	0xFF7
  2419                           tblptrl	equ	0xFF6
  2420                           tablat	equ	0xFF5
  2421                           prodh	equ	0xFF4
  2422                           prodl	equ	0xFF3
  2423                           intcon	equ	0xFF2
  2424                           postinc0	equ	0xFEE
  2425                           wreg	equ	0xFE8
  2426                           postdec1	equ	0xFE5
  2427                           fsr1l	equ	0xFE1
  2428                           indf2	equ	0xFDF
  2429                           postinc2	equ	0xFDE
  2430                           fsr2h	equ	0xFDA
  2431                           fsr2l	equ	0xFD9
  2432                           status	equ	0xFD8
  2433                           
  2434 ;; *************** function _Interrupt_Init *****************
  2435 ;; Defined at:
  2436 ;;		line 94 in file "Interrupts.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;		None
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2450 ;;      Params:         0       0       0       0       0       0       0       0       0
  2451 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2453 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2454 ;;Total ram usage:        0 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:    6
  2457 ;; This function calls:
  2458 ;;		_INIT_INTCON
  2459 ;;		_INIT_INTCON2
  2460 ;;		_INIT_INTCON3
  2461 ;;		_INIT_IPR1
  2462 ;;		_INIT_IPR2
  2463 ;;		_INIT_PIE1
  2464 ;;		_INIT_PIE2
  2465 ;;		_INIT_RCON
  2466 ;; This function is called by:
  2467 ;;		_main
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           	psect	text15
  2472  0010E8                     __ptext15:
  2473                           	opt stack 0
  2474  0010E8                     _Interrupt_Init:
  2475                           	opt stack 24
  2476                           
  2477                           ;Interrupts.c: 95: INIT_RCON();
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;incstack = 0
  2481  0010E8  EC35  F009         	call	_INIT_RCON	;wreg free
  2482                           
  2483                           ;Interrupts.c: 96: INIT_INTCON();
  2484  0010EC  ECF5  F008         	call	_INIT_INTCON	;wreg free
  2485                           
  2486                           ;Interrupts.c: 97: INIT_INTCON2();
  2487  0010F0  ECE8  F008         	call	_INIT_INTCON2	;wreg free
  2488                           
  2489                           ;Interrupts.c: 98: INIT_INTCON3();
  2490  0010F4  EC10  F009         	call	_INIT_INTCON3	;wreg free
  2491                           
  2492                           ;Interrupts.c: 99: INIT_PIE1();
  2493  0010F8  ECC2  F008         	call	_INIT_PIE1	;wreg free
  2494                           
  2495                           ;Interrupts.c: 100: INIT_PIE2();
  2496  0010FC  ECDA  F008         	call	_INIT_PIE2	;wreg free
  2497                           
  2498                           ;Interrupts.c: 101: INIT_IPR1();
  2499  001100  ECCA  F008         	call	_INIT_IPR1	;wreg free
  2500                           
  2501                           ;Interrupts.c: 102: INIT_IPR2();
  2502  001104  ECE1  F008         	call	_INIT_IPR2	;wreg free
  2503  001108  0012               	return		;funcret
  2504  00110A                     __end_of_Interrupt_Init:
  2505                           	opt stack 0
  2506                           tblptru	equ	0xFF8
  2507                           tblptrh	equ	0xFF7
  2508                           tblptrl	equ	0xFF6
  2509                           tablat	equ	0xFF5
  2510                           prodh	equ	0xFF4
  2511                           prodl	equ	0xFF3
  2512                           intcon	equ	0xFF2
  2513                           postinc0	equ	0xFEE
  2514                           wreg	equ	0xFE8
  2515                           postdec1	equ	0xFE5
  2516                           fsr1l	equ	0xFE1
  2517                           indf2	equ	0xFDF
  2518                           postinc2	equ	0xFDE
  2519                           fsr2h	equ	0xFDA
  2520                           fsr2l	equ	0xFD9
  2521                           status	equ	0xFD8
  2522                           
  2523 ;; *************** function _INIT_RCON *****************
  2524 ;; Defined at:
  2525 ;;		line 47 in file "Interrupts.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;		None
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;		None
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  1    wreg      void 
  2532 ;; Registers used:
  2533 ;;		None
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2539 ;;      Params:         0       0       0       0       0       0       0       0       0
  2540 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2542 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2543 ;;Total ram usage:        0 bytes
  2544 ;; Hardware stack levels used:    1
  2545 ;; Hardware stack levels required when called:    5
  2546 ;; This function calls:
  2547 ;;		Nothing
  2548 ;; This function is called by:
  2549 ;;		_Interrupt_Init
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           	psect	text16
  2554  00126A                     __ptext16:
  2555                           	opt stack 0
  2556  00126A                     _INIT_RCON:
  2557                           	opt stack 24
  2558                           
  2559                           ;Interrupts.c: 49: RCONbits.IPEN = 1U;
  2560                           
  2561                           ;incstack = 0
  2562  00126A  8ED0               	bsf	4048,7,c	;volatile
  2563  00126C  0012               	return		;funcret
  2564  00126E                     __end_of_INIT_RCON:
  2565                           	opt stack 0
  2566                           tblptru	equ	0xFF8
  2567                           tblptrh	equ	0xFF7
  2568                           tblptrl	equ	0xFF6
  2569                           tablat	equ	0xFF5
  2570                           prodh	equ	0xFF4
  2571                           prodl	equ	0xFF3
  2572                           intcon	equ	0xFF2
  2573                           postinc0	equ	0xFEE
  2574                           wreg	equ	0xFE8
  2575                           postdec1	equ	0xFE5
  2576                           fsr1l	equ	0xFE1
  2577                           indf2	equ	0xFDF
  2578                           postinc2	equ	0xFDE
  2579                           fsr2h	equ	0xFDA
  2580                           fsr2l	equ	0xFD9
  2581                           status	equ	0xFD8
  2582                           
  2583 ;; *************** function _INIT_PIE2 *****************
  2584 ;; Defined at:
  2585 ;;		line 63 in file "Interrupts.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;		None
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;		None
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1    wreg      void 
  2592 ;; Registers used:
  2593 ;;		None
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2599 ;;      Params:         0       0       0       0       0       0       0       0       0
  2600 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2601 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2602 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2603 ;;Total ram usage:        0 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; Hardware stack levels required when called:    5
  2606 ;; This function calls:
  2607 ;;		Nothing
  2608 ;; This function is called by:
  2609 ;;		_Interrupt_Init
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text17
  2614  0011B4                     __ptext17:
  2615                           	opt stack 0
  2616  0011B4                     _INIT_PIE2:
  2617                           	opt stack 24
  2618                           
  2619                           ;Interrupts.c: 65: PIE2bits.OSCFIE=0U;
  2620                           
  2621                           ;incstack = 0
  2622  0011B4  9EA0               	bcf	4000,7,c	;volatile
  2623                           
  2624                           ;Interrupts.c: 66: PIE2bits.CMIE=0U;
  2625  0011B6  9CA0               	bcf	4000,6,c	;volatile
  2626                           
  2627                           ;Interrupts.c: 67: PIE2bits.EEIE=0U;
  2628  0011B8  98A0               	bcf	4000,4,c	;volatile
  2629                           
  2630                           ;Interrupts.c: 68: PIE2bits.HLVDIE=0U;
  2631  0011BA  94A0               	bcf	4000,2,c	;volatile
  2632                           
  2633                           ;Interrupts.c: 69: PIE2bits.BCLIE=0U;
  2634  0011BC  96A0               	bcf	4000,3,c	;volatile
  2635                           
  2636                           ;Interrupts.c: 70: PIE2bits.TMR3IE=0U;
  2637  0011BE  92A0               	bcf	4000,1,c	;volatile
  2638  0011C0  0012               	return		;funcret
  2639  0011C2                     __end_of_INIT_PIE2:
  2640                           	opt stack 0
  2641                           tblptru	equ	0xFF8
  2642                           tblptrh	equ	0xFF7
  2643                           tblptrl	equ	0xFF6
  2644                           tablat	equ	0xFF5
  2645                           prodh	equ	0xFF4
  2646                           prodl	equ	0xFF3
  2647                           intcon	equ	0xFF2
  2648                           postinc0	equ	0xFEE
  2649                           wreg	equ	0xFE8
  2650                           postdec1	equ	0xFE5
  2651                           fsr1l	equ	0xFE1
  2652                           indf2	equ	0xFDF
  2653                           postinc2	equ	0xFDE
  2654                           fsr2h	equ	0xFDA
  2655                           fsr2l	equ	0xFD9
  2656                           status	equ	0xFD8
  2657                           
  2658 ;; *************** function _INIT_PIE1 *****************
  2659 ;; Defined at:
  2660 ;;		line 52 in file "Interrupts.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;		None
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;		None
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  1    wreg      void 
  2667 ;; Registers used:
  2668 ;;		None
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2674 ;;      Params:         0       0       0       0       0       0       0       0       0
  2675 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2676 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2677 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2678 ;;Total ram usage:        0 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; Hardware stack levels required when called:    5
  2681 ;; This function calls:
  2682 ;;		Nothing
  2683 ;; This function is called by:
  2684 ;;		_Interrupt_Init
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           	psect	text18
  2689  001184                     __ptext18:
  2690                           	opt stack 0
  2691  001184                     _INIT_PIE1:
  2692                           	opt stack 24
  2693                           
  2694                           ;Interrupts.c: 54: PIE1bits.ADIE = 1U;
  2695                           
  2696                           ;incstack = 0
  2697  001184  8C9D               	bsf	3997,6,c	;volatile
  2698                           
  2699                           ;Interrupts.c: 55: PIE1bits.RCIE = 1U;
  2700  001186  8A9D               	bsf	3997,5,c	;volatile
  2701                           
  2702                           ;Interrupts.c: 56: PIE1bits.TXIE = 0U;
  2703  001188  989D               	bcf	3997,4,c	;volatile
  2704                           
  2705                           ;Interrupts.c: 57: PIE1bits.SSPIE = 0U;
  2706  00118A  969D               	bcf	3997,3,c	;volatile
  2707                           
  2708                           ;Interrupts.c: 58: PIE1bits.CCP1IE = 0U;
  2709  00118C  949D               	bcf	3997,2,c	;volatile
  2710                           
  2711                           ;Interrupts.c: 59: PIE1bits.TMR2IE = 0U;
  2712  00118E  929D               	bcf	3997,1,c	;volatile
  2713                           
  2714                           ;Interrupts.c: 60: PIE1bits.TMR1IE = 0U;
  2715  001190  909D               	bcf	3997,0,c	;volatile
  2716  001192  0012               	return		;funcret
  2717  001194                     __end_of_INIT_PIE1:
  2718                           	opt stack 0
  2719                           tblptru	equ	0xFF8
  2720                           tblptrh	equ	0xFF7
  2721                           tblptrl	equ	0xFF6
  2722                           tablat	equ	0xFF5
  2723                           prodh	equ	0xFF4
  2724                           prodl	equ	0xFF3
  2725                           intcon	equ	0xFF2
  2726                           postinc0	equ	0xFEE
  2727                           wreg	equ	0xFE8
  2728                           postdec1	equ	0xFE5
  2729                           fsr1l	equ	0xFE1
  2730                           indf2	equ	0xFDF
  2731                           postinc2	equ	0xFDE
  2732                           fsr2h	equ	0xFDA
  2733                           fsr2l	equ	0xFD9
  2734                           status	equ	0xFD8
  2735                           
  2736 ;; *************** function _INIT_IPR2 *****************
  2737 ;; Defined at:
  2738 ;;		line 84 in file "Interrupts.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;		None
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;		None
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		None
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2752 ;;      Params:         0       0       0       0       0       0       0       0       0
  2753 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2755 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2756 ;;Total ram usage:        0 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    5
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_Interrupt_Init
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text19
  2767  0011C2                     __ptext19:
  2768                           	opt stack 0
  2769  0011C2                     _INIT_IPR2:
  2770                           	opt stack 24
  2771                           
  2772                           ;Interrupts.c: 85: IPR2bits.OSCFIP=0U;
  2773                           
  2774                           ;incstack = 0
  2775  0011C2  9EA2               	bcf	4002,7,c	;volatile
  2776                           
  2777                           ;Interrupts.c: 86: IPR2bits.CMIP=0U;
  2778  0011C4  9CA2               	bcf	4002,6,c	;volatile
  2779                           
  2780                           ;Interrupts.c: 87: IPR2bits.EEIP=0U;
  2781  0011C6  98A2               	bcf	4002,4,c	;volatile
  2782                           
  2783                           ;Interrupts.c: 88: IPR2bits.HLVDIP=0U;
  2784  0011C8  94A2               	bcf	4002,2,c	;volatile
  2785                           
  2786                           ;Interrupts.c: 89: IPR2bits.BCLIP=0U;
  2787  0011CA  96A2               	bcf	4002,3,c	;volatile
  2788                           
  2789                           ;Interrupts.c: 90: IPR2bits.TMR3IP=0U;
  2790  0011CC  92A2               	bcf	4002,1,c	;volatile
  2791  0011CE  0012               	return		;funcret
  2792  0011D0                     __end_of_INIT_IPR2:
  2793                           	opt stack 0
  2794                           tblptru	equ	0xFF8
  2795                           tblptrh	equ	0xFF7
  2796                           tblptrl	equ	0xFF6
  2797                           tablat	equ	0xFF5
  2798                           prodh	equ	0xFF4
  2799                           prodl	equ	0xFF3
  2800                           intcon	equ	0xFF2
  2801                           postinc0	equ	0xFEE
  2802                           wreg	equ	0xFE8
  2803                           postdec1	equ	0xFE5
  2804                           fsr1l	equ	0xFE1
  2805                           indf2	equ	0xFDF
  2806                           postinc2	equ	0xFDE
  2807                           fsr2h	equ	0xFDA
  2808                           fsr2l	equ	0xFD9
  2809                           status	equ	0xFD8
  2810                           
  2811 ;; *************** function _INIT_IPR1 *****************
  2812 ;; Defined at:
  2813 ;;		line 74 in file "Interrupts.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      void 
  2820 ;; Registers used:
  2821 ;;		None
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2827 ;;      Params:         0       0       0       0       0       0       0       0       0
  2828 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2829 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2830 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2831 ;;Total ram usage:        0 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:    5
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_Interrupt_Init
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text20
  2842  001194                     __ptext20:
  2843                           	opt stack 0
  2844  001194                     _INIT_IPR1:
  2845                           	opt stack 24
  2846                           
  2847                           ;Interrupts.c: 75: IPR1bits.ADIP=1U;
  2848                           
  2849                           ;incstack = 0
  2850  001194  8C9F               	bsf	3999,6,c	;volatile
  2851                           
  2852                           ;Interrupts.c: 76: IPR1bits.RCIP=1U;
  2853  001196  8A9F               	bsf	3999,5,c	;volatile
  2854                           
  2855                           ;Interrupts.c: 77: IPR1bits.TXIP=0U;
  2856  001198  989F               	bcf	3999,4,c	;volatile
  2857                           
  2858                           ;Interrupts.c: 78: IPR1bits.SSPIP=0U;
  2859  00119A  969F               	bcf	3999,3,c	;volatile
  2860                           
  2861                           ;Interrupts.c: 79: IPR1bits.CCP1IP=1U;
  2862  00119C  849F               	bsf	3999,2,c	;volatile
  2863                           
  2864                           ;Interrupts.c: 80: IPR1bits.TMR2IP=0U;
  2865  00119E  929F               	bcf	3999,1,c	;volatile
  2866                           
  2867                           ;Interrupts.c: 81: IPR1bits.TMR1IP=0U;
  2868  0011A0  909F               	bcf	3999,0,c	;volatile
  2869  0011A2  0012               	return		;funcret
  2870  0011A4                     __end_of_INIT_IPR1:
  2871                           	opt stack 0
  2872                           tblptru	equ	0xFF8
  2873                           tblptrh	equ	0xFF7
  2874                           tblptrl	equ	0xFF6
  2875                           tablat	equ	0xFF5
  2876                           prodh	equ	0xFF4
  2877                           prodl	equ	0xFF3
  2878                           intcon	equ	0xFF2
  2879                           postinc0	equ	0xFEE
  2880                           wreg	equ	0xFE8
  2881                           postdec1	equ	0xFE5
  2882                           fsr1l	equ	0xFE1
  2883                           indf2	equ	0xFDF
  2884                           postinc2	equ	0xFDE
  2885                           fsr2h	equ	0xFDA
  2886                           fsr2l	equ	0xFD9
  2887                           status	equ	0xFD8
  2888                           
  2889 ;; *************** function _INIT_INTCON3 *****************
  2890 ;; Defined at:
  2891 ;;		line 39 in file "Interrupts.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;		None
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;		None
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  1    wreg      void 
  2898 ;; Registers used:
  2899 ;;		None
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2905 ;;      Params:         0       0       0       0       0       0       0       0       0
  2906 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2907 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2908 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2909 ;;Total ram usage:        0 bytes
  2910 ;; Hardware stack levels used:    1
  2911 ;; Hardware stack levels required when called:    5
  2912 ;; This function calls:
  2913 ;;		Nothing
  2914 ;; This function is called by:
  2915 ;;		_Interrupt_Init
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text21
  2920  001220                     __ptext21:
  2921                           	opt stack 0
  2922  001220                     _INIT_INTCON3:
  2923                           	opt stack 24
  2924                           
  2925                           ;Interrupts.c: 40: INTCON3bits.INT2IP=1U;
  2926                           
  2927                           ;incstack = 0
  2928  001220  8EF0               	bsf	intcon3,7,c	;volatile
  2929                           
  2930                           ;Interrupts.c: 41: INTCON3bits.INT1IP=0U;
  2931  001222  9CF0               	bcf	intcon3,6,c	;volatile
  2932                           
  2933                           ;Interrupts.c: 43: INTCON3bits.INT2IE=1U;
  2934  001224  88F0               	bsf	intcon3,4,c	;volatile
  2935                           
  2936                           ;Interrupts.c: 44: INTCON3bits.INT1IE=0U;
  2937  001226  96F0               	bcf	intcon3,3,c	;volatile
  2938  001228  0012               	return		;funcret
  2939  00122A                     __end_of_INIT_INTCON3:
  2940                           	opt stack 0
  2941                           tblptru	equ	0xFF8
  2942                           tblptrh	equ	0xFF7
  2943                           tblptrl	equ	0xFF6
  2944                           tablat	equ	0xFF5
  2945                           prodh	equ	0xFF4
  2946                           prodl	equ	0xFF3
  2947                           intcon	equ	0xFF2
  2948                           intcon3	equ	0xFF0
  2949                           postinc0	equ	0xFEE
  2950                           wreg	equ	0xFE8
  2951                           postdec1	equ	0xFE5
  2952                           fsr1l	equ	0xFE1
  2953                           indf2	equ	0xFDF
  2954                           postinc2	equ	0xFDE
  2955                           fsr2h	equ	0xFDA
  2956                           fsr2l	equ	0xFD9
  2957                           status	equ	0xFD8
  2958                           
  2959 ;; *************** function _INIT_INTCON2 *****************
  2960 ;; Defined at:
  2961 ;;		line 28 in file "Interrupts.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		None
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2975 ;;      Params:         0       0       0       0       0       0       0       0       0
  2976 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2978 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2979 ;;Total ram usage:        0 bytes
  2980 ;; Hardware stack levels used:    1
  2981 ;; Hardware stack levels required when called:    5
  2982 ;; This function calls:
  2983 ;;		Nothing
  2984 ;; This function is called by:
  2985 ;;		_Interrupt_Init
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text22
  2990  0011D0                     __ptext22:
  2991                           	opt stack 0
  2992  0011D0                     _INIT_INTCON2:
  2993                           	opt stack 24
  2994                           
  2995                           ;Interrupts.c: 29: INTCON2bits.nRBPU=1U;
  2996                           
  2997                           ;incstack = 0
  2998  0011D0  8EF1               	bsf	intcon2,7,c	;volatile
  2999                           
  3000                           ;Interrupts.c: 30: INTCON2bits.INTEDG0=0U;
  3001  0011D2  9CF1               	bcf	intcon2,6,c	;volatile
  3002                           
  3003                           ;Interrupts.c: 31: INTCON2bits.INTEDG1=0U;
  3004  0011D4  9AF1               	bcf	intcon2,5,c	;volatile
  3005                           
  3006                           ;Interrupts.c: 32: INTCON2bits.INTEDG2=1U;
  3007  0011D6  88F1               	bsf	intcon2,4,c	;volatile
  3008                           
  3009                           ;Interrupts.c: 34: INTCON2bits.T0IP=1U;
  3010  0011D8  84F1               	bsf	intcon2,2,c	;volatile
  3011                           
  3012                           ;Interrupts.c: 36: INTCON2bits.RBIP=0U;
  3013  0011DA  90F1               	bcf	intcon2,0,c	;volatile
  3014  0011DC  0012               	return		;funcret
  3015  0011DE                     __end_of_INIT_INTCON2:
  3016                           	opt stack 0
  3017                           tblptru	equ	0xFF8
  3018                           tblptrh	equ	0xFF7
  3019                           tblptrl	equ	0xFF6
  3020                           tablat	equ	0xFF5
  3021                           prodh	equ	0xFF4
  3022                           prodl	equ	0xFF3
  3023                           intcon	equ	0xFF2
  3024                           intcon2	equ	0xFF1
  3025                           intcon3	equ	0xFF0
  3026                           postinc0	equ	0xFEE
  3027                           wreg	equ	0xFE8
  3028                           postdec1	equ	0xFE5
  3029                           fsr1l	equ	0xFE1
  3030                           indf2	equ	0xFDF
  3031                           postinc2	equ	0xFDE
  3032                           fsr2h	equ	0xFDA
  3033                           fsr2l	equ	0xFD9
  3034                           status	equ	0xFD8
  3035                           
  3036 ;; *************** function _INIT_INTCON *****************
  3037 ;; Defined at:
  3038 ;;		line 11 in file "Interrupts.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;		None
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;		None
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      void 
  3045 ;; Registers used:
  3046 ;;		None
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3052 ;;      Params:         0       0       0       0       0       0       0       0       0
  3053 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3055 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3056 ;;Total ram usage:        0 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:    5
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_Interrupt_Init
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           	psect	text23
  3067  0011EA                     __ptext23:
  3068                           	opt stack 0
  3069  0011EA                     _INIT_INTCON:
  3070                           	opt stack 24
  3071                           
  3072                           ;Interrupts.c: 13: INTCONbits.GIE = 1U;
  3073                           
  3074                           ;incstack = 0
  3075  0011EA  8EF2               	bsf	intcon,7,c	;volatile
  3076                           
  3077                           ;Interrupts.c: 14: INTCONbits.PEIE = 0U;
  3078  0011EC  9CF2               	bcf	intcon,6,c	;volatile
  3079                           
  3080                           ;Interrupts.c: 15: INTCONbits.TMR0IE = 1U;
  3081  0011EE  8AF2               	bsf	intcon,5,c	;volatile
  3082                           
  3083                           ;Interrupts.c: 16: INTCONbits.INT0E=0U;
  3084  0011F0  98F2               	bcf	intcon,4,c	;volatile
  3085                           
  3086                           ;Interrupts.c: 17: INTCONbits.RBIE=0U;
  3087  0011F2  96F2               	bcf	intcon,3,c	;volatile
  3088  0011F4  0012               	return		;funcret
  3089  0011F6                     __end_of_INIT_INTCON:
  3090                           	opt stack 0
  3091                           tblptru	equ	0xFF8
  3092                           tblptrh	equ	0xFF7
  3093                           tblptrl	equ	0xFF6
  3094                           tablat	equ	0xFF5
  3095                           prodh	equ	0xFF4
  3096                           prodl	equ	0xFF3
  3097                           intcon	equ	0xFF2
  3098                           intcon2	equ	0xFF1
  3099                           intcon3	equ	0xFF0
  3100                           postinc0	equ	0xFEE
  3101                           wreg	equ	0xFE8
  3102                           postdec1	equ	0xFE5
  3103                           fsr1l	equ	0xFE1
  3104                           indf2	equ	0xFDF
  3105                           postinc2	equ	0xFDE
  3106                           fsr2h	equ	0xFDA
  3107                           fsr2l	equ	0xFD9
  3108                           status	equ	0xFD8
  3109                           
  3110 ;; *************** function _InitDHT11Driver *****************
  3111 ;; Defined at:
  3112 ;;		line 106 in file "DHT11Driver.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;		None
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;		None
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      void 
  3119 ;; Registers used:
  3120 ;;		wreg, status,2, status,0, cstack
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3126 ;;      Params:         0       0       0       0       0       0       0       0       0
  3127 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3128 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3129 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3130 ;;Total ram usage:        0 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    6
  3133 ;; This function calls:
  3134 ;;		_ConfigureTimer1
  3135 ;; This function is called by:
  3136 ;;		_main
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           	psect	text24
  3141  00122A                     __ptext24:
  3142                           	opt stack 0
  3143  00122A                     _InitDHT11Driver:
  3144                           	opt stack 24
  3145                           
  3146                           ;DHT11Driver.c: 107: (TRISCbits.TRISC2 = 0);
  3147                           
  3148                           ;incstack = 0
  3149  00122A  9494               	bcf	3988,2,c	;volatile
  3150                           
  3151                           ;DHT11Driver.c: 108: (LATC2=1U);
  3152  00122C  848B               	bsf	3979,2,c	;volatile
  3153                           
  3154                           ;DHT11Driver.c: 109: ConfigureTimer1();
  3155  00122E  ECDE  F007         	call	_ConfigureTimer1	;wreg free
  3156  001232  0012               	return		;funcret
  3157  001234                     __end_of_InitDHT11Driver:
  3158                           	opt stack 0
  3159                           tblptru	equ	0xFF8
  3160                           tblptrh	equ	0xFF7
  3161                           tblptrl	equ	0xFF6
  3162                           tablat	equ	0xFF5
  3163                           prodh	equ	0xFF4
  3164                           prodl	equ	0xFF3
  3165                           intcon	equ	0xFF2
  3166                           intcon2	equ	0xFF1
  3167                           intcon3	equ	0xFF0
  3168                           postinc0	equ	0xFEE
  3169                           wreg	equ	0xFE8
  3170                           postdec1	equ	0xFE5
  3171                           fsr1l	equ	0xFE1
  3172                           indf2	equ	0xFDF
  3173                           postinc2	equ	0xFDE
  3174                           fsr2h	equ	0xFDA
  3175                           fsr2l	equ	0xFD9
  3176                           status	equ	0xFD8
  3177                           
  3178 ;; *************** function _ConfigureTimer1 *****************
  3179 ;; Defined at:
  3180 ;;		line 6 in file "CCP1.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;		None
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;		None
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  2  318[None  ] int 
  3187 ;; Registers used:
  3188 ;;		wreg, status,2, status,0
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3194 ;;      Params:         0       0       0       0       0       0       0       0       0
  3195 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3196 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3197 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3198 ;;Total ram usage:        0 bytes
  3199 ;; Hardware stack levels used:    1
  3200 ;; Hardware stack levels required when called:    5
  3201 ;; This function calls:
  3202 ;;		Nothing
  3203 ;; This function is called by:
  3204 ;;		_InitDHT11Driver
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           	psect	text25
  3209  000FBC                     __ptext25:
  3210                           	opt stack 0
  3211  000FBC                     _ConfigureTimer1:
  3212                           	opt stack 24
  3213                           
  3214                           ;CCP1.c: 7: T1CONbits.RD16=1;
  3215                           
  3216                           ;incstack = 0
  3217  000FBC  8ECD               	bsf	4045,7,c	;volatile
  3218                           
  3219                           ;CCP1.c: 8: T1RUN=1U;
  3220  000FBE  8CCD               	bsf	4045,6,c	;volatile
  3221                           
  3222                           ;CCP1.c: 9: T1OSCEN=1U;
  3223  000FC0  86CD               	bsf	4045,3,c	;volatile
  3224                           
  3225                           ;CCP1.c: 10: TMR1CS=0U;
  3226  000FC2  92CD               	bcf	4045,1,c	;volatile
  3227                           
  3228                           ;CCP1.c: 11: TMR1ON=0U;
  3229  000FC4  90CD               	bcf	4045,0,c	;volatile
  3230                           
  3231                           ;CCP1.c: 13: mask = T1CON & 0xCF;
  3232  000FC6  50CD               	movf	4045,w,c	;volatile
  3233  000FC8  0BCF               	andlw	207
  3234  000FCA  6E34               	movwf	_mask,c
  3235                           
  3236                           ;CCP1.c: 14: if (prescaler == 8) T1CON = mask | 0x30;
  3237  000FCC  0E08               	movlw	8
  3238  000FCE  1844               	xorwf	_prescaler,w,c
  3239  000FD0  A4D8               	btfss	status,2,c
  3240  000FD2  D004               	goto	l2298
  3241  000FD4  5034               	movf	_mask,w,c
  3242  000FD6  0930               	iorlw	48
  3243  000FD8  6ECD               	movwf	4045,c	;volatile
  3244  000FDA  0012               	return	
  3245  000FDC                     l2298:
  3246                           
  3247                           ;CCP1.c: 15: else if (prescaler == 4) T1CON = mask | 0x20;
  3248  000FDC  0E04               	movlw	4
  3249  000FDE  1844               	xorwf	_prescaler,w,c
  3250  000FE0  A4D8               	btfss	status,2,c
  3251  000FE2  D004               	goto	l2302
  3252  000FE4  5034               	movf	_mask,w,c
  3253  000FE6  0920               	iorlw	32
  3254  000FE8  6ECD               	movwf	4045,c	;volatile
  3255  000FEA  0012               	return	
  3256  000FEC                     l2302:
  3257                           
  3258                           ;CCP1.c: 16: else if (prescaler == 2) T1CON = mask | 0x10;
  3259  000FEC  0E02               	movlw	2
  3260  000FEE  1844               	xorwf	_prescaler,w,c
  3261  000FF0  A4D8               	btfss	status,2,c
  3262  000FF2  D004               	goto	l398
  3263  000FF4  5034               	movf	_mask,w,c
  3264  000FF6  0910               	iorlw	16
  3265  000FF8  6ECD               	movwf	4045,c	;volatile
  3266  000FFA  0012               	return	
  3267  000FFC                     l398:
  3268                           
  3269                           ;CCP1.c: 17: else T1CON = mask;
  3270  000FFC  C034  FFCD         	movff	_mask,4045	;volatile
  3271  001000  0012               	return	
  3272  001002                     __end_of_ConfigureTimer1:
  3273                           	opt stack 0
  3274                           tblptru	equ	0xFF8
  3275                           tblptrh	equ	0xFF7
  3276                           tblptrl	equ	0xFF6
  3277                           tablat	equ	0xFF5
  3278                           prodh	equ	0xFF4
  3279                           prodl	equ	0xFF3
  3280                           intcon	equ	0xFF2
  3281                           intcon2	equ	0xFF1
  3282                           intcon3	equ	0xFF0
  3283                           postinc0	equ	0xFEE
  3284                           wreg	equ	0xFE8
  3285                           postdec1	equ	0xFE5
  3286                           fsr1l	equ	0xFE1
  3287                           indf2	equ	0xFDF
  3288                           postinc2	equ	0xFDE
  3289                           fsr2h	equ	0xFDA
  3290                           fsr2l	equ	0xFD9
  3291                           status	equ	0xFD8
  3292                           
  3293 ;; *************** function _HighISR *****************
  3294 ;; Defined at:
  3295 ;;		line 69 in file "Main.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3309 ;;      Params:         0       0       0       0       0       0       0       0       0
  3310 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3311 ;;      Temps:         16       0       0       0       0       0       0       0       0
  3312 ;;      Totals:        16       0       0       0       0       0       0       0       0
  3313 ;;Total ram usage:       16 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; Hardware stack levels required when called:    4
  3316 ;; This function calls:
  3317 ;;		_DHTSignalResponse
  3318 ;;		_FirstStateRequest
  3319 ;;		_Idle
  3320 ;;		_RecievingData
  3321 ;;		_SecondStateRequest
  3322 ;;		i2_TMR0_WRITE_HIGH
  3323 ;;		i2_TMR0_WRITE_LOW
  3324 ;;		i2_TurnOnLights
  3325 ;; This function is called by:
  3326 ;;		Interrupt level 2
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           	psect	intcode
  3331  000008                     __pintcode:
  3332                           	opt stack 0
  3333  000008                     _HighISR:
  3334                           	opt stack 21
  3335                           
  3336                           ;incstack = 0
  3337  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3338  00000A  CFFA F015          	movff	pclath,??_HighISR+2
  3339  00000E  CFFB F016          	movff	pclatu,??_HighISR+3
  3340  000012  ED22  F005         	call	int_func,f	;refresh shadow registers
  3341                           pclatu	equ	0xFFB
  3342                           pclath	equ	0xFFA
  3343                           tblptru	equ	0xFF8
  3344                           tblptrh	equ	0xFF7
  3345                           tblptrl	equ	0xFF6
  3346                           tablat	equ	0xFF5
  3347                           prodh	equ	0xFF4
  3348                           prodl	equ	0xFF3
  3349                           intcon	equ	0xFF2
  3350                           intcon2	equ	0xFF1
  3351                           intcon3	equ	0xFF0
  3352                           postinc0	equ	0xFEE
  3353                           wreg	equ	0xFE8
  3354                           postdec1	equ	0xFE5
  3355                           fsr1l	equ	0xFE1
  3356                           indf2	equ	0xFDF
  3357                           postinc2	equ	0xFDE
  3358                           fsr2h	equ	0xFDA
  3359                           fsr2l	equ	0xFD9
  3360                           status	equ	0xFD8
  3361                           
  3362                           	psect	intcode_body
  3363  000A44                     __pintcode_body:
  3364                           	opt stack 21
  3365  000A44                     int_func:
  3366                           	opt stack 21
  3367  000A44  0006               	pop		; remove dummy address from shadow register refresh
  3368  000A46  CFE9 F017          	movff	fsr0l,??_HighISR+4
  3369  000A4A  CFEA F018          	movff	fsr0h,??_HighISR+5
  3370  000A4E  CFE1 F019          	movff	fsr1l,??_HighISR+6
  3371  000A52  CFE2 F01A          	movff	fsr1h,??_HighISR+7
  3372  000A56  CFD9 F01B          	movff	fsr2l,??_HighISR+8
  3373  000A5A  CFDA F01C          	movff	fsr2h,??_HighISR+9
  3374  000A5E  CFF3 F01D          	movff	prodl,??_HighISR+10
  3375  000A62  CFF4 F01E          	movff	prodh,??_HighISR+11
  3376  000A66  CFF6 F01F          	movff	tblptrl,??_HighISR+12
  3377  000A6A  CFF7 F020          	movff	tblptrh,??_HighISR+13
  3378  000A6E  CFF8 F021          	movff	tblptru,??_HighISR+14
  3379  000A72  CFF5 F022          	movff	tablat,??_HighISR+15
  3380                           
  3381                           ;Main.c: 72: if(INT2IF){
  3382  000A76  A2F0               	btfss	intcon3,1,c	;volatile
  3383  000A78  D00B               	goto	i2l2052
  3384                           
  3385                           ;Main.c: 73: INT2IF=0;
  3386  000A7A  92F0               	bcf	intcon3,1,c	;volatile
  3387                           
  3388                           ;Main.c: 74: if(Door_f){
  3389  000A7C  A03A               	btfss	_Door_f/(0+8),_Door_f& (0+7),c
  3390  000A7E  D003               	goto	i2l2044
  3391                           
  3392                           ;Main.c: 75: INTEDG2=1U;
  3393  000A80  88F1               	bsf	intcon2,4,c	;volatile
  3394                           
  3395                           ;Main.c: 76: Door_f=0;
  3396  000A82  903A               	bcf	_Door_f/(0+8),_Door_f& (0+7),c
  3397                           
  3398                           ;Main.c: 77: }
  3399  000A84  D005               	goto	i2l2052
  3400  000A86                     i2l2044:
  3401                           
  3402                           ;Main.c: 78: else{
  3403                           ;Main.c: 79: TurnOnLights();
  3404  000A86  ECB9  F008         	call	i2_TurnOnLights	;wreg free
  3405                           
  3406                           ;Main.c: 80: lightstate=1;
  3407  000A8A  8E3A               	bsf	_lightstate/(0+8),_lightstate& (0+7),c
  3408                           
  3409                           ;Main.c: 81: INTEDG2=0U;
  3410  000A8C  98F1               	bcf	intcon2,4,c	;volatile
  3411                           
  3412                           ;Main.c: 82: Door_f=1;
  3413  000A8E  803A               	bsf	_Door_f/(0+8),_Door_f& (0+7),c
  3414  000A90                     i2l2052:
  3415                           
  3416                           ;Main.c: 83: }
  3417                           ;Main.c: 84: }
  3418                           ;Main.c: 87: if((RCIF && RCIE))
  3419  000A90  BA9E               	btfsc	3998,5,c	;volatile
  3420  000A92  AA9D               	btfss	3997,5,c	;volatile
  3421  000A94  D01C               	goto	i2l2070
  3422                           
  3423                           ;Main.c: 88: {
  3424                           ;Main.c: 89: RCIF=0;
  3425  000A96  9A9E               	bcf	3998,5,c	;volatile
  3426                           
  3427                           ;Main.c: 90: if(RCREG!='\n' && RCREG!=0xea)
  3428  000A98  0E0A               	movlw	10
  3429  000A9A  18AE               	xorwf	4014,w,c	;volatile
  3430  000A9C  B4D8               	btfsc	status,2,c
  3431  000A9E  D00F               	goto	i2l2066
  3432  000AA0  0EEA               	movlw	234
  3433  000AA2  18AE               	xorwf	4014,w,c	;volatile
  3434  000AA4  B4D8               	btfsc	status,2,c
  3435  000AA6  D00B               	goto	i2l2066
  3436                           
  3437                           ;Main.c: 91: {
  3438                           ;Main.c: 92: RecievedData[serialcount]=RCREG;
  3439  000AA8  5037               	movf	_serialcount,w,c
  3440  000AAA  0D01               	mullw	1
  3441  000AAC  0EBE               	movlw	low _RecievedData
  3442  000AAE  24F3               	addwf	prodl,w,c
  3443  000AB0  6ED9               	movwf	fsr2l,c
  3444  000AB2  0E00               	movlw	high _RecievedData
  3445  000AB4  20F4               	addwfc	prodh,w,c
  3446  000AB6  6EDA               	movwf	fsr2h,c
  3447  000AB8  CFAE FFDF          	movff	4014,indf2	;volatile
  3448                           
  3449                           ;Main.c: 93: serialcount++;
  3450  000ABC  2A37               	incf	_serialcount,f,c
  3451  000ABE                     i2l2066:
  3452                           
  3453                           ;Main.c: 94: }
  3454                           ;Main.c: 95: if(RCREG==0x24)
  3455  000ABE  0E24               	movlw	36
  3456  000AC0  18AE               	xorwf	4014,w,c	;volatile
  3457  000AC2  A4D8               	btfss	status,2,c
  3458  000AC4  D004               	goto	i2l2070
  3459                           
  3460                           ;Main.c: 96: {
  3461                           ;Main.c: 97: serialcount=0;
  3462  000AC6  0E00               	movlw	0
  3463  000AC8  6E37               	movwf	_serialcount,c
  3464                           
  3465                           ;Main.c: 98: f_frameready=1;
  3466  000ACA  0E01               	movlw	1
  3467  000ACC  6E32               	movwf	_f_frameready,c
  3468  000ACE                     i2l2070:
  3469                           
  3470                           ;Main.c: 99: }
  3471                           ;Main.c: 100: }
  3472                           ;Main.c: 103: if(ADIF){
  3473  000ACE  AC9E               	btfss	3998,6,c	;volatile
  3474  000AD0  D02D               	goto	i2l137
  3475                           
  3476                           ;Main.c: 104: ADIF=0;
  3477  000AD2  9C9E               	bcf	3998,6,c	;volatile
  3478                           
  3479                           ;Main.c: 105: if(ADRES<=MinLightValue){
  3480  000AD4  5040               	movf	_MinLightValue,w,c
  3481  000AD6  6E13               	movwf	??_HighISR& (0+255),c
  3482  000AD8  6A14               	clrf	(??_HighISR+1)& (0+255),c
  3483  000ADA  50C3               	movf	4035,w,c	;volatile
  3484  000ADC  5C13               	subwf	??_HighISR,w,c
  3485  000ADE  50C4               	movf	4036,w,c	;volatile
  3486  000AE0  5814               	subwfb	??_HighISR+1,w,c
  3487  000AE2  A0D8               	btfss	status,0,c
  3488  000AE4  D004               	goto	i2l2080
  3489                           
  3490                           ;Main.c: 106: lightcounter++;
  3491  000AE6  0100               	movlb	0	; () banked
  3492  000AE8  4BBA               	infsnz	_lightcounter& (0+255),f,b
  3493  000AEA  2BBB               	incf	(_lightcounter+1)& (0+255),f,b
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;Main.c: 107: Light_f=0;
  3497  000AEC  923A               	bcf	_Light_f/(0+8),_Light_f& (0+7),c
  3498  000AEE                     i2l2080:
  3499                           
  3500                           ;Main.c: 108: }
  3501                           ;Main.c: 109: if(ADRES>MinLightValue ){
  3502  000AEE  5040               	movf	_MinLightValue,w,c
  3503  000AF0  6E13               	movwf	??_HighISR& (0+255),c
  3504  000AF2  6A14               	clrf	(??_HighISR+1)& (0+255),c
  3505  000AF4  50C3               	movf	4035,w,c	;volatile
  3506  000AF6  5C13               	subwf	??_HighISR,w,c
  3507  000AF8  50C4               	movf	4036,w,c	;volatile
  3508  000AFA  5814               	subwfb	??_HighISR+1,w,c
  3509  000AFC  B0D8               	btfsc	status,0,c
  3510  000AFE  D016               	goto	i2l137
  3511                           
  3512                           ;Main.c: 110: if(lightcounter<=lightperday && actualtime>timetostartlight ){
  3513  000B00  0100               	movlb	0	; () banked
  3514  000B02  51BA               	movf	_lightcounter& (0+255),w,b
  3515  000B04  5C3C               	subwf	_lightperday,w,c
  3516  000B06  0100               	movlb	0	; () banked
  3517  000B08  51BB               	movf	(_lightcounter+1)& (0+255),w,b
  3518  000B0A  583D               	subwfb	_lightperday+1,w,c
  3519  000B0C  A0D8               	btfss	status,0,c
  3520  000B0E  D00D               	goto	i2l140
  3521                           
  3522                           ; BSR set to: 0
  3523  000B10  5025               	movf	_actualtime,w,c
  3524  000B12  0100               	movlb	0	; () banked
  3525  000B14  5DBC               	subwf	_timetostartlight& (0+255),w,b
  3526  000B16  5026               	movf	_actualtime+1,w,c
  3527  000B18  0100               	movlb	0	; () banked
  3528  000B1A  59BD               	subwfb	(_timetostartlight+1)& (0+255),w,b
  3529  000B1C  B0D8               	btfsc	status,0,c
  3530  000B1E  D005               	goto	i2l140
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;Main.c: 111: Light_f=1;
  3534  000B20  823A               	bsf	_Light_f/(0+8),_Light_f& (0+7),c
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;Main.c: 112: lightcounter++;
  3538  000B22  0100               	movlb	0	; () banked
  3539  000B24  4BBA               	infsnz	_lightcounter& (0+255),f,b
  3540  000B26  2BBB               	incf	(_lightcounter+1)& (0+255),f,b
  3541                           
  3542                           ;Main.c: 113: }
  3543  000B28  D001               	goto	i2l137
  3544  000B2A                     i2l140:
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;Main.c: 114: else{
  3548                           ;Main.c: 115: Light_f=0;
  3549  000B2A  923A               	bcf	_Light_f/(0+8),_Light_f& (0+7),c
  3550  000B2C                     i2l137:
  3551                           
  3552                           ;Main.c: 116: }
  3553                           ;Main.c: 117: }
  3554                           ;Main.c: 119: }
  3555                           ;Main.c: 121: if(TMR0IF){
  3556  000B2C  A4F2               	btfss	intcon,2,c	;volatile
  3557  000B2E  D055               	goto	i2l2132
  3558                           
  3559                           ;Main.c: 123: TMR0IF=0;
  3560  000B30  94F2               	bcf	intcon,2,c	;volatile
  3561                           
  3562                           ;Main.c: 124: TimerCounter++;
  3563  000B32  2A2B               	incf	_TimerCounter,f,c
  3564                           
  3565                           ;Main.c: 125: if (TimerCounter==1) TXREG='%';
  3566  000B34  042B               	decf	_TimerCounter,w,c
  3567  000B36  A4D8               	btfss	status,2,c
  3568  000B38  D002               	goto	i2l2098
  3569  000B3A  0E25               	movlw	37
  3570  000B3C  6EAD               	movwf	4013,c	;volatile
  3571  000B3E                     i2l2098:
  3572                           
  3573                           ;Main.c: 126: if (TimerCounter==2) TXREG='F';
  3574  000B3E  0E02               	movlw	2
  3575  000B40  182B               	xorwf	_TimerCounter,w,c
  3576  000B42  A4D8               	btfss	status,2,c
  3577  000B44  D002               	goto	i2l2102
  3578  000B46  0E46               	movlw	70
  3579  000B48  6EAD               	movwf	4013,c	;volatile
  3580  000B4A                     i2l2102:
  3581                           
  3582                           ;Main.c: 127: if (TimerCounter==3) TXREG='$';
  3583  000B4A  0E03               	movlw	3
  3584  000B4C  182B               	xorwf	_TimerCounter,w,c
  3585  000B4E  A4D8               	btfss	status,2,c
  3586  000B50  D002               	goto	i2l145
  3587  000B52  0E24               	movlw	36
  3588  000B54  6EAD               	movwf	4013,c	;volatile
  3589  000B56                     i2l145:
  3590                           
  3591                           ;Main.c: 129: if (TimerUser!=0)TimerUser--;
  3592  000B56  502C               	movf	_TimerUser,w,c
  3593  000B58  A4D8               	btfss	status,2,c
  3594  000B5A  062C               	decf	_TimerUser,f,c
  3595                           
  3596                           ;Main.c: 130: if (TimerCounter==3){
  3597  000B5C  0E03               	movlw	3
  3598  000B5E  182B               	xorwf	_TimerCounter,w,c
  3599  000B60  A4D8               	btfss	status,2,c
  3600  000B62  D033               	goto	i2l2124
  3601                           
  3602                           ;Main.c: 131: TimerCounter=0;
  3603  000B64  0E00               	movlw	0
  3604  000B66  6E2B               	movwf	_TimerCounter,c
  3605                           
  3606                           ;Main.c: 132: actualtime++;
  3607  000B68  4A25               	infsnz	_actualtime,f,c
  3608  000B6A  2A26               	incf	_actualtime+1,f,c
  3609                           
  3610                           ;Main.c: 134: ADCON0bits.GO=1;
  3611  000B6C  82C2               	bsf	4034,1,c	;volatile
  3612                           
  3613                           ;Main.c: 136: DHT_StateMachine[_FirstStateRequest]();
  3614  000B6E  EE20  F0E9         	lfsr	2,_DHT_StateMachine+2
  3615  000B72  D801               	call	i2u114_48
  3616  000B74  D00A               	goto	i2l2118
  3617  000B76                     i2u114_48:
  3618  000B76  0005               	push	
  3619  000B78  6EFA               	movwf	pclath,c
  3620  000B7A  50DE               	movf	postinc2,w,c
  3621  000B7C  6EFD               	movwf	tosl,c
  3622  000B7E  50DE               	movf	postinc2,w,c
  3623  000B80  6EFE               	movwf	tosh,c
  3624  000B82  50F8               	movf	tblptru,w,c
  3625  000B84  6EFF               	movwf	tosu,c
  3626  000B86  50FA               	movf	pclath,w,c
  3627  000B88  0012               	return		;indir
  3628  000B8A                     i2l2118:
  3629                           
  3630                           ;Main.c: 137: if (actualtime==totaldaytime) {
  3631  000B8A  503E               	movf	_totaldaytime,w,c
  3632  000B8C  1825               	xorwf	_actualtime,w,c
  3633  000B8E  E11D               	bnz	i2l2124
  3634  000B90  503F               	movf	_totaldaytime+1,w,c
  3635  000B92  1826               	xorwf	_actualtime+1,w,c
  3636  000B94  A4D8               	btfss	status,2,c
  3637  000B96  D019               	goto	i2l2124
  3638                           
  3639                           ;Main.c: 139: actualtime=0;
  3640  000B98  0E00               	movlw	0
  3641  000B9A  6E26               	movwf	_actualtime+1,c
  3642  000B9C  0E00               	movlw	0
  3643  000B9E  6E25               	movwf	_actualtime,c
  3644                           
  3645                           ;Main.c: 140: lightcounter=0;
  3646  000BA0  0E00               	movlw	0
  3647  000BA2  0100               	movlb	0	; () banked
  3648  000BA4  6FBB               	movwf	(_lightcounter+1)& (0+255),b
  3649  000BA6  0E00               	movlw	0
  3650  000BA8  6FBA               	movwf	_lightcounter& (0+255),b
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;Main.c: 142: timetostartlight=totaldaytime-lightperday;
  3654  000BAA  C03C  F013         	movff	_lightperday,??_HighISR
  3655  000BAE  C03D  F014         	movff	_lightperday+1,??_HighISR+1
  3656  000BB2  1E13               	comf	??_HighISR,f,c
  3657  000BB4  1E14               	comf	??_HighISR+1,f,c
  3658  000BB6  4A13               	infsnz	??_HighISR,f,c
  3659  000BB8  2A14               	incf	??_HighISR+1,f,c
  3660  000BBA  503E               	movf	_totaldaytime,w,c
  3661  000BBC  2413               	addwf	??_HighISR,w,c
  3662  000BBE  0100               	movlb	0	; () banked
  3663  000BC0  6FBC               	movwf	_timetostartlight& (0+255),b
  3664  000BC2  503F               	movf	_totaldaytime+1,w,c
  3665  000BC4  2014               	addwfc	??_HighISR+1,w,c
  3666  000BC6  0100               	movlb	0	; () banked
  3667  000BC8  6FBD               	movwf	(_timetostartlight+1)& (0+255),b
  3668  000BCA                     i2l2124:
  3669                           
  3670                           ;Main.c: 143: }
  3671                           ;Main.c: 144: }
  3672                           ;Main.c: 145: TMR0ON = 0;
  3673  000BCA  9ED5               	bcf	4053,7,c	;volatile
  3674                           
  3675                           ;Main.c: 146: TMR0_WRITE_HIGH(0xB);
  3676  000BCC  0E0B               	movlw	11
  3677  000BCE  EC2B  F009         	call	i2_TMR0_WRITE_HIGH
  3678                           
  3679                           ;Main.c: 147: TMR0_WRITE_LOW(0xD0);
  3680  000BD2  0ED0               	movlw	208
  3681  000BD4  EC27  F009         	call	i2_TMR0_WRITE_LOW
  3682                           
  3683                           ;Main.c: 148: TMR0ON = 1;
  3684  000BD8  8ED5               	bsf	4053,7,c	;volatile
  3685  000BDA                     i2l2132:
  3686                           
  3687                           ;Main.c: 149: }
  3688                           ;Main.c: 152: if (CCP1IF){
  3689  000BDA  A49E               	btfss	3998,2,c	;volatile
  3690  000BDC  D015               	goto	i2l150
  3691                           
  3692                           ;Main.c: 153: CCP1IF=0;
  3693  000BDE  949E               	bcf	3998,2,c	;volatile
  3694                           
  3695                           ;Main.c: 154: DHT_StateMachine[state]();
  3696  000BE0  5038               	movf	_state,w,c
  3697  000BE2  0D02               	mullw	2
  3698  000BE4  0EE7               	movlw	low _DHT_StateMachine
  3699  000BE6  24F3               	addwf	prodl,w,c
  3700  000BE8  6ED9               	movwf	fsr2l,c
  3701  000BEA  0E00               	movlw	high _DHT_StateMachine
  3702  000BEC  20F4               	addwfc	prodh,w,c
  3703  000BEE  6EDA               	movwf	fsr2h,c
  3704  000BF0  D801               	call	i2u117_48
  3705  000BF2  D00A               	goto	i2l150
  3706  000BF4                     i2u117_48:
  3707  000BF4  0005               	push	
  3708  000BF6  6EFA               	movwf	pclath,c
  3709  000BF8  50DE               	movf	postinc2,w,c
  3710  000BFA  6EFD               	movwf	tosl,c
  3711  000BFC  50DE               	movf	postinc2,w,c
  3712  000BFE  6EFE               	movwf	tosh,c
  3713  000C00  50F8               	movf	tblptru,w,c
  3714  000C02  6EFF               	movwf	tosu,c
  3715  000C04  50FA               	movf	pclath,w,c
  3716  000C06  0012               	return		;indir
  3717  000C08                     i2l150:
  3718  000C08  C022  FFF5         	movff	??_HighISR+15,tablat
  3719  000C0C  C021  FFF8         	movff	??_HighISR+14,tblptru
  3720  000C10  C020  FFF7         	movff	??_HighISR+13,tblptrh
  3721  000C14  C01F  FFF6         	movff	??_HighISR+12,tblptrl
  3722  000C18  C01E  FFF4         	movff	??_HighISR+11,prodh
  3723  000C1C  C01D  FFF3         	movff	??_HighISR+10,prodl
  3724  000C20  C01C  FFDA         	movff	??_HighISR+9,fsr2h
  3725  000C24  C01B  FFD9         	movff	??_HighISR+8,fsr2l
  3726  000C28  C01A  FFE2         	movff	??_HighISR+7,fsr1h
  3727  000C2C  C019  FFE1         	movff	??_HighISR+6,fsr1l
  3728  000C30  C018  FFEA         	movff	??_HighISR+5,fsr0h
  3729  000C34  C017  FFE9         	movff	??_HighISR+4,fsr0l
  3730  000C38  C016  FFFB         	movff	??_HighISR+3,pclatu
  3731  000C3C  C015  FFFA         	movff	??_HighISR+2,pclath
  3732  000C40  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3733  000C42  0011               	retfie		f
  3734  000C44                     __end_of_HighISR:
  3735                           	opt stack 0
  3736                           tosu	equ	0xFFF
  3737                           tosh	equ	0xFFE
  3738                           tosl	equ	0xFFD
  3739                           pclatu	equ	0xFFB
  3740                           pclath	equ	0xFFA
  3741                           tblptru	equ	0xFF8
  3742                           tblptrh	equ	0xFF7
  3743                           tblptrl	equ	0xFF6
  3744                           tablat	equ	0xFF5
  3745                           prodh	equ	0xFF4
  3746                           prodl	equ	0xFF3
  3747                           intcon	equ	0xFF2
  3748                           intcon2	equ	0xFF1
  3749                           intcon3	equ	0xFF0
  3750                           postinc0	equ	0xFEE
  3751                           fsr0h	equ	0xFEA
  3752                           fsr0l	equ	0xFE9
  3753                           wreg	equ	0xFE8
  3754                           postdec1	equ	0xFE5
  3755                           fsr1h	equ	0xFE2
  3756                           fsr1l	equ	0xFE1
  3757                           indf2	equ	0xFDF
  3758                           postinc2	equ	0xFDE
  3759                           fsr2h	equ	0xFDA
  3760                           fsr2l	equ	0xFD9
  3761                           status	equ	0xFD8
  3762                           
  3763 ;; *************** function i2_TurnOnLights *****************
  3764 ;; Defined at:
  3765 ;;		line 12 in file "LedDriver.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;		None
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;		None
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  2    0[None  ] int 
  3772 ;; Registers used:
  3773 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3779 ;;      Params:         0       0       0       0       0       0       0       0       0
  3780 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3781 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3782 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3783 ;;Total ram usage:        0 bytes
  3784 ;; Hardware stack levels used:    1
  3785 ;; Hardware stack levels required when called:    3
  3786 ;; This function calls:
  3787 ;;		i2_SetPWM
  3788 ;;		i2_StartPWM
  3789 ;; This function is called by:
  3790 ;;		_HighISR
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           	psect	text27
  3795  001172                     __ptext27:
  3796                           	opt stack 0
  3797  001172                     i2_TurnOnLights:
  3798                           	opt stack 21
  3799                           
  3800                           ;LedDriver.c: 13: if(!lightstate_f){
  3801                           
  3802                           ;incstack = 0
  3803  001172  B03B               	btfsc	_lightstate_f/(0+8),_lightstate_f& (0+7),c
  3804  001174  0012               	return	
  3805                           
  3806                           ;LedDriver.c: 14: SetPWM(50);
  3807  001176  0E32               	movlw	50
  3808  001178  ECA4  F008         	call	i2_SetPWM
  3809                           
  3810                           ;LedDriver.c: 15: StartPWM();
  3811  00117C  EC23  F009         	call	i2_StartPWM	;wreg free
  3812                           
  3813                           ;LedDriver.c: 16: lightstate_f=1;
  3814  001180  803B               	bsf	_lightstate_f/(0+8),_lightstate_f& (0+7),c
  3815  001182  0012               	return	
  3816  001184                     __end_ofi2_TurnOnLights:
  3817                           	opt stack 0
  3818                           tosu	equ	0xFFF
  3819                           tosh	equ	0xFFE
  3820                           tosl	equ	0xFFD
  3821                           pclatu	equ	0xFFB
  3822                           pclath	equ	0xFFA
  3823                           tblptru	equ	0xFF8
  3824                           tblptrh	equ	0xFF7
  3825                           tblptrl	equ	0xFF6
  3826                           tablat	equ	0xFF5
  3827                           prodh	equ	0xFF4
  3828                           prodl	equ	0xFF3
  3829                           intcon	equ	0xFF2
  3830                           intcon2	equ	0xFF1
  3831                           intcon3	equ	0xFF0
  3832                           postinc0	equ	0xFEE
  3833                           fsr0h	equ	0xFEA
  3834                           fsr0l	equ	0xFE9
  3835                           wreg	equ	0xFE8
  3836                           postdec1	equ	0xFE5
  3837                           fsr1h	equ	0xFE2
  3838                           fsr1l	equ	0xFE1
  3839                           indf2	equ	0xFDF
  3840                           postinc2	equ	0xFDE
  3841                           fsr2h	equ	0xFDA
  3842                           fsr2l	equ	0xFD9
  3843                           status	equ	0xFD8
  3844                           
  3845 ;; *************** function i2_StartPWM *****************
  3846 ;; Defined at:
  3847 ;;		line 17 in file "PWM.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;		None
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;		None
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      void 
  3854 ;; Registers used:
  3855 ;;		wreg, status,2
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3861 ;;      Params:         0       0       0       0       0       0       0       0       0
  3862 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3863 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3864 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3865 ;;Total ram usage:        0 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; This function calls:
  3868 ;;		Nothing
  3869 ;; This function is called by:
  3870 ;;		i2_TurnOnLights
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text28
  3875  001246                     __ptext28:
  3876                           	opt stack 0
  3877  001246                     i2_StartPWM:
  3878                           	opt stack 23
  3879                           
  3880                           ;PWM.c: 18: CCP2CON=0x0C;
  3881                           
  3882                           ;incstack = 0
  3883  001246  0E0C               	movlw	12
  3884  001248  6EBA               	movwf	4026,c	;volatile
  3885                           
  3886                           ;PWM.c: 19: T1OSCEN=1U;
  3887  00124A  86CD               	bsf	4045,3,c	;volatile
  3888  00124C  0012               	return		;funcret
  3889  00124E                     __end_ofi2_StartPWM:
  3890                           	opt stack 0
  3891                           tosu	equ	0xFFF
  3892                           tosh	equ	0xFFE
  3893                           tosl	equ	0xFFD
  3894                           pclatu	equ	0xFFB
  3895                           pclath	equ	0xFFA
  3896                           tblptru	equ	0xFF8
  3897                           tblptrh	equ	0xFF7
  3898                           tblptrl	equ	0xFF6
  3899                           tablat	equ	0xFF5
  3900                           prodh	equ	0xFF4
  3901                           prodl	equ	0xFF3
  3902                           intcon	equ	0xFF2
  3903                           intcon2	equ	0xFF1
  3904                           intcon3	equ	0xFF0
  3905                           postinc0	equ	0xFEE
  3906                           fsr0h	equ	0xFEA
  3907                           fsr0l	equ	0xFE9
  3908                           wreg	equ	0xFE8
  3909                           postdec1	equ	0xFE5
  3910                           fsr1h	equ	0xFE2
  3911                           fsr1l	equ	0xFE1
  3912                           indf2	equ	0xFDF
  3913                           postinc2	equ	0xFDE
  3914                           fsr2h	equ	0xFDA
  3915                           fsr2l	equ	0xFD9
  3916                           status	equ	0xFD8
  3917                           
  3918 ;; *************** function i2_SetPWM *****************
  3919 ;; Defined at:
  3920 ;;		line 44 in file "PWM.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;  dutycycle       1    wreg     unsigned char 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  dutycycle       1   17[COMRAM] unsigned char 
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      void 
  3927 ;; Registers used:
  3928 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3934 ;;      Params:         0       0       0       0       0       0       0       0       0
  3935 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3936 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3937 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3938 ;;Total ram usage:        1 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; Hardware stack levels required when called:    2
  3941 ;; This function calls:
  3942 ;;		i2_SetDutyCycle
  3943 ;;		i2_SetPeriod
  3944 ;; This function is called by:
  3945 ;;		i2_TurnOnLights
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           	psect	text29
  3950  001148                     __ptext29:
  3951                           	opt stack 0
  3952  001148                     i2_SetPWM:
  3953                           	opt stack 21
  3954                           
  3955                           ;incstack = 0
  3956                           ;i2SetPWM@dutycycle stored from wreg
  3957  001148  6E12               	movwf	i2SetPWM@dutycycle,c
  3958                           
  3959                           ;PWM.c: 45: T2CON=0x00;
  3960  00114A  0E00               	movlw	0
  3961  00114C  6ECA               	movwf	4042,c	;volatile
  3962                           
  3963                           ;PWM.c: 46: SetPeriod();
  3964  00114E  EC32  F009         	call	i2_SetPeriod	;wreg free
  3965                           
  3966                           ;PWM.c: 47: SetDutyCycle(dutycycle);
  3967  001152  5012               	movf	i2SetPWM@dutycycle,w,c
  3968  001154  EC80  F007         	call	i2_SetDutyCycle
  3969                           
  3970                           ;PWM.c: 48: (TRISBbits.TRISB3 = 0);
  3971  001158  9693               	bcf	3987,3,c	;volatile
  3972                           
  3973                           ;PWM.c: 49: T2CON=0b110;
  3974  00115A  0E06               	movlw	6
  3975  00115C  6ECA               	movwf	4042,c	;volatile
  3976  00115E  0012               	return		;funcret
  3977  001160                     __end_ofi2_SetPWM:
  3978                           	opt stack 0
  3979                           tosu	equ	0xFFF
  3980                           tosh	equ	0xFFE
  3981                           tosl	equ	0xFFD
  3982                           pclatu	equ	0xFFB
  3983                           pclath	equ	0xFFA
  3984                           tblptru	equ	0xFF8
  3985                           tblptrh	equ	0xFF7
  3986                           tblptrl	equ	0xFF6
  3987                           tablat	equ	0xFF5
  3988                           prodh	equ	0xFF4
  3989                           prodl	equ	0xFF3
  3990                           intcon	equ	0xFF2
  3991                           intcon2	equ	0xFF1
  3992                           intcon3	equ	0xFF0
  3993                           postinc0	equ	0xFEE
  3994                           fsr0h	equ	0xFEA
  3995                           fsr0l	equ	0xFE9
  3996                           wreg	equ	0xFE8
  3997                           postdec1	equ	0xFE5
  3998                           fsr1h	equ	0xFE2
  3999                           fsr1l	equ	0xFE1
  4000                           indf2	equ	0xFDF
  4001                           postinc2	equ	0xFDE
  4002                           fsr2h	equ	0xFDA
  4003                           fsr2l	equ	0xFD9
  4004                           status	equ	0xFD8
  4005                           
  4006 ;; *************** function i2_SetPeriod *****************
  4007 ;; Defined at:
  4008 ;;		line 28 in file "PWM.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;		None
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;		None
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  1    wreg      void 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4022 ;;      Params:         0       0       0       0       0       0       0       0       0
  4023 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4024 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4025 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4026 ;;Total ram usage:        0 bytes
  4027 ;; Hardware stack levels used:    1
  4028 ;; This function calls:
  4029 ;;		Nothing
  4030 ;; This function is called by:
  4031 ;;		i2_SetPWM
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           	psect	text30
  4036  001264                     __ptext30:
  4037                           	opt stack 0
  4038  001264                     i2_SetPeriod:
  4039                           	opt stack 22
  4040                           
  4041                           ;PWM.c: 30: PR2=124;
  4042                           
  4043                           ;incstack = 0
  4044  001264  0E7C               	movlw	124
  4045  001266  6ECB               	movwf	4043,c	;volatile
  4046  001268  0012               	return		;funcret
  4047  00126A                     __end_ofi2_SetPeriod:
  4048                           	opt stack 0
  4049                           tosu	equ	0xFFF
  4050                           tosh	equ	0xFFE
  4051                           tosl	equ	0xFFD
  4052                           pclatu	equ	0xFFB
  4053                           pclath	equ	0xFFA
  4054                           tblptru	equ	0xFF8
  4055                           tblptrh	equ	0xFF7
  4056                           tblptrl	equ	0xFF6
  4057                           tablat	equ	0xFF5
  4058                           prodh	equ	0xFF4
  4059                           prodl	equ	0xFF3
  4060                           intcon	equ	0xFF2
  4061                           intcon2	equ	0xFF1
  4062                           intcon3	equ	0xFF0
  4063                           postinc0	equ	0xFEE
  4064                           fsr0h	equ	0xFEA
  4065                           fsr0l	equ	0xFE9
  4066                           wreg	equ	0xFE8
  4067                           postdec1	equ	0xFE5
  4068                           fsr1h	equ	0xFE2
  4069                           fsr1l	equ	0xFE1
  4070                           indf2	equ	0xFDF
  4071                           postinc2	equ	0xFDE
  4072                           fsr2h	equ	0xFDA
  4073                           fsr2l	equ	0xFD9
  4074                           status	equ	0xFD8
  4075                           
  4076 ;; *************** function i2_SetDutyCycle *****************
  4077 ;; Defined at:
  4078 ;;		line 33 in file "PWM.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;  dutycycle       1    wreg     unsigned char 
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;  dutycycle       1   16[COMRAM] unsigned char 
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      void 
  4085 ;; Registers used:
  4086 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4092 ;;      Params:         0       0       0       0       0       0       0       0       0
  4093 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4094 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4095 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4096 ;;Total ram usage:        3 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; Hardware stack levels required when called:    1
  4099 ;; This function calls:
  4100 ;;		i2___awdiv
  4101 ;;		i2___wmul
  4102 ;; This function is called by:
  4103 ;;		i2_SetPWM
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text31
  4108  000F00                     __ptext31:
  4109                           	opt stack 0
  4110  000F00                     i2_SetDutyCycle:
  4111                           	opt stack 21
  4112                           
  4113                           ;incstack = 0
  4114                           ;i2SetDutyCycle@dutycycle stored from wreg
  4115  000F00  6E11               	movwf	i2SetDutyCycle@dutycycle,c
  4116                           
  4117                           ;PWM.c: 34: PWMValue=((dutycycle)*470)/100;
  4118  000F02  C011  F001         	movff	i2SetDutyCycle@dutycycle,i2___wmul@multiplier
  4119  000F06  6A02               	clrf	i2___wmul@multiplier+1,c
  4120  000F08  0E01               	movlw	1
  4121  000F0A  6E04               	movwf	i2___wmul@multiplicand+1,c
  4122  000F0C  0ED6               	movlw	214
  4123  000F0E  6E03               	movwf	i2___wmul@multiplicand,c
  4124  000F10  EC61  F008         	call	i2___wmul	;wreg free
  4125  000F14  C001  F007         	movff	?i2___wmul,i2___awdiv@dividend
  4126  000F18  C002  F008         	movff	?i2___wmul+1,i2___awdiv@dividend+1
  4127  000F1C  0E00               	movlw	0
  4128  000F1E  6E0A               	movwf	i2___awdiv@divisor+1,c
  4129  000F20  0E64               	movlw	100
  4130  000F22  6E09               	movwf	i2___awdiv@divisor,c
  4131  000F24  ECCF  F006         	call	i2___awdiv	;wreg free
  4132  000F28  C007  F023         	movff	?i2___awdiv,_PWMValue
  4133  000F2C  C008  F024         	movff	?i2___awdiv+1,_PWMValue+1
  4134                           
  4135                           ;PWM.c: 35: LSb=PWMValue&0x03;
  4136  000F30  0E03               	movlw	3
  4137  000F32  1423               	andwf	_PWMValue,w,c
  4138  000F34  0100               	movlb	0	; () banked
  4139  000F36  6FB0               	movwf	_LSb& (0+255),b
  4140  000F38  0100               	movlb	0	; () banked
  4141  000F3A  6BB1               	clrf	(_LSb+1)& (0+255),b
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;PWM.c: 36: MSb=PWMValue>>2;
  4145  000F3C  C023  F00F         	movff	_PWMValue,??i2_SetDutyCycle
  4146  000F40  C024  F010         	movff	_PWMValue+1,??i2_SetDutyCycle+1
  4147  000F44  90D8               	bcf	status,0,c
  4148  000F46  3210               	rrcf	??i2_SetDutyCycle+1,f,c
  4149  000F48  320F               	rrcf	??i2_SetDutyCycle,f,c
  4150  000F4A  90D8               	bcf	status,0,c
  4151  000F4C  3210               	rrcf	??i2_SetDutyCycle+1,f,c
  4152  000F4E  320F               	rrcf	??i2_SetDutyCycle,f,c
  4153  000F50  C00F  F0B4         	movff	??i2_SetDutyCycle,_MSb
  4154  000F54  C010  F0B5         	movff	??i2_SetDutyCycle+1,_MSb+1
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;PWM.c: 38: CCPR2L=MSb;
  4158  000F58  C0B4  FFBB         	movff	_MSb,4027	;volatile
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;PWM.c: 39: CCP2CON=CCP2CON|(LSb<<4);
  4162  000F5C  0100               	movlb	0	; () banked
  4163  000F5E  39B0               	swapf	_LSb& (0+255),w,b
  4164  000F60  0BF0               	andlw	240
  4165  000F62  10BA               	iorwf	4026,w,c
  4166  000F64  6EBA               	movwf	4026,c	;volatile
  4167                           
  4168                           ; BSR set to: 0
  4169  000F66  0012               	return		;funcret
  4170  000F68                     __end_ofi2_SetDutyCycle:
  4171                           	opt stack 0
  4172                           tosu	equ	0xFFF
  4173                           tosh	equ	0xFFE
  4174                           tosl	equ	0xFFD
  4175                           pclatu	equ	0xFFB
  4176                           pclath	equ	0xFFA
  4177                           tblptru	equ	0xFF8
  4178                           tblptrh	equ	0xFF7
  4179                           tblptrl	equ	0xFF6
  4180                           tablat	equ	0xFF5
  4181                           prodh	equ	0xFF4
  4182                           prodl	equ	0xFF3
  4183                           intcon	equ	0xFF2
  4184                           intcon2	equ	0xFF1
  4185                           intcon3	equ	0xFF0
  4186                           postinc0	equ	0xFEE
  4187                           fsr0h	equ	0xFEA
  4188                           fsr0l	equ	0xFE9
  4189                           wreg	equ	0xFE8
  4190                           postdec1	equ	0xFE5
  4191                           fsr1h	equ	0xFE2
  4192                           fsr1l	equ	0xFE1
  4193                           indf2	equ	0xFDF
  4194                           postinc2	equ	0xFDE
  4195                           fsr2h	equ	0xFDA
  4196                           fsr2l	equ	0xFD9
  4197                           status	equ	0xFD8
  4198                           
  4199 ;; *************** function i2___wmul *****************
  4200 ;; Defined at:
  4201 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  multiplier      2    0[COMRAM] unsigned int 
  4204 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;  __wmul          2    4[COMRAM] unsigned int 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  2    0[COMRAM] unsigned int 
  4209 ;; Registers used:
  4210 ;;		wreg, status,2, status,0, prodl, prodh
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4216 ;;      Params:         4       0       0       0       0       0       0       0       0
  4217 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4218 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4219 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4220 ;;Total ram usage:        6 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; This function calls:
  4223 ;;		Nothing
  4224 ;; This function is called by:
  4225 ;;		i2_SetDutyCycle
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228                           
  4229                           	psect	text32
  4230  0010C2                     __ptext32:
  4231                           	opt stack 0
  4232  0010C2                     i2___wmul:
  4233                           	opt stack 21
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;incstack = 0
  4237  0010C2  5001               	movf	i2___wmul@multiplier,w,c
  4238  0010C4  0203               	mulwf	i2___wmul@multiplicand,c
  4239  0010C6  CFF3 F005          	movff	prodl,i2___wmul@product
  4240  0010CA  CFF4 F006          	movff	prodh,i2___wmul@product+1
  4241  0010CE  5001               	movf	i2___wmul@multiplier,w,c
  4242  0010D0  0204               	mulwf	i2___wmul@multiplicand+1,c
  4243  0010D2  50F3               	movf	prodl,w,c
  4244  0010D4  2606               	addwf	i2___wmul@product+1,f,c
  4245  0010D6  5002               	movf	i2___wmul@multiplier+1,w,c
  4246  0010D8  0203               	mulwf	i2___wmul@multiplicand,c
  4247  0010DA  50F3               	movf	prodl,w,c
  4248  0010DC  2606               	addwf	i2___wmul@product+1,f,c
  4249  0010DE  C005  F001         	movff	i2___wmul@product,?i2___wmul
  4250  0010E2  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  4251  0010E6  0012               	return	
  4252  0010E8                     __end_ofi2___wmul:
  4253                           	opt stack 0
  4254                           tosu	equ	0xFFF
  4255                           tosh	equ	0xFFE
  4256                           tosl	equ	0xFFD
  4257                           pclatu	equ	0xFFB
  4258                           pclath	equ	0xFFA
  4259                           tblptru	equ	0xFF8
  4260                           tblptrh	equ	0xFF7
  4261                           tblptrl	equ	0xFF6
  4262                           tablat	equ	0xFF5
  4263                           prodh	equ	0xFF4
  4264                           prodl	equ	0xFF3
  4265                           intcon	equ	0xFF2
  4266                           intcon2	equ	0xFF1
  4267                           intcon3	equ	0xFF0
  4268                           postinc0	equ	0xFEE
  4269                           fsr0h	equ	0xFEA
  4270                           fsr0l	equ	0xFE9
  4271                           wreg	equ	0xFE8
  4272                           postdec1	equ	0xFE5
  4273                           fsr1h	equ	0xFE2
  4274                           fsr1l	equ	0xFE1
  4275                           indf2	equ	0xFDF
  4276                           postinc2	equ	0xFDE
  4277                           fsr2h	equ	0xFDA
  4278                           fsr2l	equ	0xFD9
  4279                           status	equ	0xFD8
  4280                           
  4281 ;; *************** function i2___awdiv *****************
  4282 ;; Defined at:
  4283 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;  dividend        2    6[COMRAM] int 
  4286 ;;  divisor         2    8[COMRAM] int 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;  __awdiv         2   12[COMRAM] int 
  4289 ;;  __awdiv         1   11[COMRAM] unsigned char 
  4290 ;;  __awdiv         1   10[COMRAM] unsigned char 
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  2    6[COMRAM] int 
  4293 ;; Registers used:
  4294 ;;		wreg, status,2, status,0
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4300 ;;      Params:         4       0       0       0       0       0       0       0       0
  4301 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4302 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4303 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4304 ;;Total ram usage:        8 bytes
  4305 ;; Hardware stack levels used:    1
  4306 ;; This function calls:
  4307 ;;		Nothing
  4308 ;; This function is called by:
  4309 ;;		i2_SetDutyCycle
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           	psect	text33
  4314  000D9E                     __ptext33:
  4315                           	opt stack 0
  4316  000D9E                     i2___awdiv:
  4317                           	opt stack 21
  4318                           
  4319                           ;incstack = 0
  4320  000D9E  0E00               	movlw	0
  4321  000DA0  6E0C               	movwf	i2___awdiv@sign,c
  4322  000DA2  AE0A               	btfss	i2___awdiv@divisor+1,7,c
  4323  000DA4  D006               	goto	i2l1720
  4324  000DA6  6C09               	negf	i2___awdiv@divisor,c
  4325  000DA8  1E0A               	comf	i2___awdiv@divisor+1,f,c
  4326  000DAA  B0D8               	btfsc	status,0,c
  4327  000DAC  2A0A               	incf	i2___awdiv@divisor+1,f,c
  4328  000DAE  0E01               	movlw	1
  4329  000DB0  6E0C               	movwf	i2___awdiv@sign,c
  4330  000DB2                     i2l1720:
  4331  000DB2  AE08               	btfss	i2___awdiv@dividend+1,7,c
  4332  000DB4  D006               	goto	i2l1726
  4333  000DB6  6C07               	negf	i2___awdiv@dividend,c
  4334  000DB8  1E08               	comf	i2___awdiv@dividend+1,f,c
  4335  000DBA  B0D8               	btfsc	status,0,c
  4336  000DBC  2A08               	incf	i2___awdiv@dividend+1,f,c
  4337  000DBE  0E01               	movlw	1
  4338  000DC0  1A0C               	xorwf	i2___awdiv@sign,f,c
  4339  000DC2                     i2l1726:
  4340  000DC2  0E00               	movlw	0
  4341  000DC4  6E0E               	movwf	i2___awdiv@quotient+1,c
  4342  000DC6  0E00               	movlw	0
  4343  000DC8  6E0D               	movwf	i2___awdiv@quotient,c
  4344  000DCA  5009               	movf	i2___awdiv@divisor,w,c
  4345  000DCC  100A               	iorwf	i2___awdiv@divisor+1,w,c
  4346  000DCE  B4D8               	btfsc	status,2,c
  4347  000DD0  D01C               	goto	i2l1748
  4348  000DD2  0E01               	movlw	1
  4349  000DD4  6E0B               	movwf	i2___awdiv@counter,c
  4350  000DD6  D004               	goto	i2l1734
  4351  000DD8                     i2l1732:
  4352  000DD8  90D8               	bcf	status,0,c
  4353  000DDA  3609               	rlcf	i2___awdiv@divisor,f,c
  4354  000DDC  360A               	rlcf	i2___awdiv@divisor+1,f,c
  4355  000DDE  2A0B               	incf	i2___awdiv@counter,f,c
  4356  000DE0                     i2l1734:
  4357  000DE0  AE0A               	btfss	i2___awdiv@divisor+1,7,c
  4358  000DE2  D7FA               	goto	i2l1732
  4359  000DE4                     i2l1736:
  4360  000DE4  90D8               	bcf	status,0,c
  4361  000DE6  360D               	rlcf	i2___awdiv@quotient,f,c
  4362  000DE8  360E               	rlcf	i2___awdiv@quotient+1,f,c
  4363  000DEA  5009               	movf	i2___awdiv@divisor,w,c
  4364  000DEC  5C07               	subwf	i2___awdiv@dividend,w,c
  4365  000DEE  500A               	movf	i2___awdiv@divisor+1,w,c
  4366  000DF0  5808               	subwfb	i2___awdiv@dividend+1,w,c
  4367  000DF2  A0D8               	btfss	status,0,c
  4368  000DF4  D005               	goto	i2l1744
  4369  000DF6  5009               	movf	i2___awdiv@divisor,w,c
  4370  000DF8  5E07               	subwf	i2___awdiv@dividend,f,c
  4371  000DFA  500A               	movf	i2___awdiv@divisor+1,w,c
  4372  000DFC  5A08               	subwfb	i2___awdiv@dividend+1,f,c
  4373  000DFE  800D               	bsf	i2___awdiv@quotient,0,c
  4374  000E00                     i2l1744:
  4375  000E00  90D8               	bcf	status,0,c
  4376  000E02  320A               	rrcf	i2___awdiv@divisor+1,f,c
  4377  000E04  3209               	rrcf	i2___awdiv@divisor,f,c
  4378  000E06  2E0B               	decfsz	i2___awdiv@counter,f,c
  4379  000E08  D7ED               	goto	i2l1736
  4380  000E0A                     i2l1748:
  4381  000E0A  500C               	movf	i2___awdiv@sign,w,c
  4382  000E0C  B4D8               	btfsc	status,2,c
  4383  000E0E  D004               	goto	i2l1752
  4384  000E10  6C0D               	negf	i2___awdiv@quotient,c
  4385  000E12  1E0E               	comf	i2___awdiv@quotient+1,f,c
  4386  000E14  B0D8               	btfsc	status,0,c
  4387  000E16  2A0E               	incf	i2___awdiv@quotient+1,f,c
  4388  000E18                     i2l1752:
  4389  000E18  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
  4390  000E1C  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  4391  000E20  0012               	return	
  4392  000E22                     __end_ofi2___awdiv:
  4393                           	opt stack 0
  4394                           tosu	equ	0xFFF
  4395                           tosh	equ	0xFFE
  4396                           tosl	equ	0xFFD
  4397                           pclatu	equ	0xFFB
  4398                           pclath	equ	0xFFA
  4399                           tblptru	equ	0xFF8
  4400                           tblptrh	equ	0xFF7
  4401                           tblptrl	equ	0xFF6
  4402                           tablat	equ	0xFF5
  4403                           prodh	equ	0xFF4
  4404                           prodl	equ	0xFF3
  4405                           intcon	equ	0xFF2
  4406                           intcon2	equ	0xFF1
  4407                           intcon3	equ	0xFF0
  4408                           postinc0	equ	0xFEE
  4409                           fsr0h	equ	0xFEA
  4410                           fsr0l	equ	0xFE9
  4411                           wreg	equ	0xFE8
  4412                           postdec1	equ	0xFE5
  4413                           fsr1h	equ	0xFE2
  4414                           fsr1l	equ	0xFE1
  4415                           indf2	equ	0xFDF
  4416                           postinc2	equ	0xFDE
  4417                           fsr2h	equ	0xFDA
  4418                           fsr2l	equ	0xFD9
  4419                           status	equ	0xFD8
  4420                           
  4421 ;; *************** function i2_TMR0_WRITE_LOW *****************
  4422 ;; Defined at:
  4423 ;;		line 79 in file "Timer_0.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;  valorLow        1    wreg     unsigned char 
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;  valorLow        1    0[COMRAM] unsigned char 
  4428 ;; Return value:  Size  Location     Type
  4429 ;;                  1    wreg      void 
  4430 ;; Registers used:
  4431 ;;		wreg
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4437 ;;      Params:         0       0       0       0       0       0       0       0       0
  4438 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4439 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4440 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4441 ;;Total ram usage:        1 bytes
  4442 ;; Hardware stack levels used:    1
  4443 ;; This function calls:
  4444 ;;		Nothing
  4445 ;; This function is called by:
  4446 ;;		_HighISR
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450                           	psect	text34
  4451  00124E                     __ptext34:
  4452                           	opt stack 0
  4453  00124E                     i2_TMR0_WRITE_LOW:
  4454                           	opt stack 24
  4455                           
  4456                           ;incstack = 0
  4457                           ;i2TMR0_WRITE_LOW@valorLow stored from wreg
  4458  00124E  6E01               	movwf	i2TMR0_WRITE_LOW@valorLow,c
  4459                           
  4460                           ;Timer_0.c: 81: TMR0L=valorLow;
  4461  001250  C001  FFD6         	movff	i2TMR0_WRITE_LOW@valorLow,4054	;volatile
  4462  001254  0012               	return		;funcret
  4463  001256                     __end_ofi2_TMR0_WRITE_LOW:
  4464                           	opt stack 0
  4465                           tosu	equ	0xFFF
  4466                           tosh	equ	0xFFE
  4467                           tosl	equ	0xFFD
  4468                           pclatu	equ	0xFFB
  4469                           pclath	equ	0xFFA
  4470                           tblptru	equ	0xFF8
  4471                           tblptrh	equ	0xFF7
  4472                           tblptrl	equ	0xFF6
  4473                           tablat	equ	0xFF5
  4474                           prodh	equ	0xFF4
  4475                           prodl	equ	0xFF3
  4476                           intcon	equ	0xFF2
  4477                           intcon2	equ	0xFF1
  4478                           intcon3	equ	0xFF0
  4479                           postinc0	equ	0xFEE
  4480                           fsr0h	equ	0xFEA
  4481                           fsr0l	equ	0xFE9
  4482                           wreg	equ	0xFE8
  4483                           postdec1	equ	0xFE5
  4484                           fsr1h	equ	0xFE2
  4485                           fsr1l	equ	0xFE1
  4486                           indf2	equ	0xFDF
  4487                           postinc2	equ	0xFDE
  4488                           fsr2h	equ	0xFDA
  4489                           fsr2l	equ	0xFD9
  4490                           status	equ	0xFD8
  4491                           
  4492 ;; *************** function i2_TMR0_WRITE_HIGH *****************
  4493 ;; Defined at:
  4494 ;;		line 66 in file "Timer_0.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  valorHigh       1    wreg     unsigned char 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;  valorHigh       1    0[COMRAM] unsigned char 
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  1    wreg      void 
  4501 ;; Registers used:
  4502 ;;		wreg
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4508 ;;      Params:         0       0       0       0       0       0       0       0       0
  4509 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4510 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4511 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4512 ;;Total ram usage:        1 bytes
  4513 ;; Hardware stack levels used:    1
  4514 ;; This function calls:
  4515 ;;		Nothing
  4516 ;; This function is called by:
  4517 ;;		_HighISR
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           	psect	text35
  4522  001256                     __ptext35:
  4523                           	opt stack 0
  4524  001256                     i2_TMR0_WRITE_HIGH:
  4525                           	opt stack 24
  4526                           
  4527                           ;incstack = 0
  4528                           ;i2TMR0_WRITE_HIGH@valorHigh stored from wreg
  4529  001256  6E01               	movwf	i2TMR0_WRITE_HIGH@valorHigh,c
  4530                           
  4531                           ;Timer_0.c: 68: TMR0H=valorHigh;
  4532  001258  C001  FFD7         	movff	i2TMR0_WRITE_HIGH@valorHigh,4055	;volatile
  4533  00125C  0012               	return		;funcret
  4534  00125E                     __end_ofi2_TMR0_WRITE_HIGH:
  4535                           	opt stack 0
  4536                           tosu	equ	0xFFF
  4537                           tosh	equ	0xFFE
  4538                           tosl	equ	0xFFD
  4539                           pclatu	equ	0xFFB
  4540                           pclath	equ	0xFFA
  4541                           tblptru	equ	0xFF8
  4542                           tblptrh	equ	0xFF7
  4543                           tblptrl	equ	0xFF6
  4544                           tablat	equ	0xFF5
  4545                           prodh	equ	0xFF4
  4546                           prodl	equ	0xFF3
  4547                           intcon	equ	0xFF2
  4548                           intcon2	equ	0xFF1
  4549                           intcon3	equ	0xFF0
  4550                           postinc0	equ	0xFEE
  4551                           fsr0h	equ	0xFEA
  4552                           fsr0l	equ	0xFE9
  4553                           wreg	equ	0xFE8
  4554                           postdec1	equ	0xFE5
  4555                           fsr1h	equ	0xFE2
  4556                           fsr1l	equ	0xFE1
  4557                           indf2	equ	0xFDF
  4558                           postinc2	equ	0xFDE
  4559                           fsr2h	equ	0xFDA
  4560                           fsr2l	equ	0xFD9
  4561                           status	equ	0xFD8
  4562                           
  4563 ;; *************** function _RecievingData *****************
  4564 ;; Defined at:
  4565 ;;		line 64 in file "DHT11Driver.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;		None
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;		None
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  1    wreg      void 
  4572 ;; Registers used:
  4573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4579 ;;      Params:         0       0       0       0       0       0       0       0       0
  4580 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4581 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4582 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4583 ;;Total ram usage:        2 bytes
  4584 ;; Hardware stack levels used:    1
  4585 ;; This function calls:
  4586 ;;		Nothing
  4587 ;; This function is called by:
  4588 ;;		_HighISR
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           	psect	text36
  4593  000F68                     __ptext36:
  4594                           	opt stack 0
  4595  000F68                     _RecievingData:
  4596                           	opt stack 24
  4597                           
  4598                           ;DHT11Driver.c: 66: times[bitcount]=CCPR1-lasttime;
  4599                           
  4600                           ;incstack = 0
  4601  000F68  C0B8  F001         	movff	_lasttime,??_RecievingData
  4602  000F6C  C0B9  F002         	movff	_lasttime+1,??_RecievingData+1
  4603  000F70  1E01               	comf	??_RecievingData,f,c
  4604  000F72  1E02               	comf	??_RecievingData+1,f,c
  4605  000F74  4A01               	infsnz	??_RecievingData,f,c
  4606  000F76  2A02               	incf	??_RecievingData+1,f,c
  4607  000F78  50BE               	movf	4030,w,c	;volatile
  4608  000F7A  2601               	addwf	??_RecievingData,f,c
  4609  000F7C  50BF               	movf	4031,w,c	;volatile
  4610  000F7E  2202               	addwfc	??_RecievingData+1,f,c
  4611  000F80  502F               	movf	_bitcount,w,c
  4612  000F82  0D02               	mullw	2
  4613  000F84  0E60               	movlw	low _times
  4614  000F86  24F3               	addwf	prodl,w,c
  4615  000F88  6ED9               	movwf	fsr2l,c
  4616  000F8A  0E00               	movlw	high _times
  4617  000F8C  20F4               	addwfc	prodh,w,c
  4618  000F8E  6EDA               	movwf	fsr2h,c
  4619  000F90  C001  FFDE         	movff	??_RecievingData,postinc2
  4620  000F94  C002  FFDD         	movff	??_RecievingData+1,postdec2
  4621                           
  4622                           ;DHT11Driver.c: 67: lasttime=CCPR1;
  4623  000F98  CFBE F0B8          	movff	4030,_lasttime	;volatile
  4624  000F9C  CFBF F0B9          	movff	4031,_lasttime+1	;volatile
  4625                           
  4626                           ;DHT11Driver.c: 68: bitcount++;
  4627  000FA0  2A2F               	incf	_bitcount,f,c
  4628                           
  4629                           ;DHT11Driver.c: 91: if(bitcount==40){
  4630  000FA2  0E28               	movlw	40
  4631  000FA4  182F               	xorwf	_bitcount,w,c
  4632  000FA6  A4D8               	btfss	status,2,c
  4633  000FA8  0012               	return	
  4634                           
  4635                           ;DHT11Driver.c: 94: T1CON--;
  4636  000FAA  06CD               	decf	4045,f,c	;volatile
  4637                           
  4638                           ;DHT11Driver.c: 95: CCP1IE=0;
  4639  000FAC  949D               	bcf	3997,2,c	;volatile
  4640                           
  4641                           ;DHT11Driver.c: 97: (TRISCbits.TRISC2 = 0);
  4642  000FAE  9494               	bcf	3988,2,c	;volatile
  4643                           
  4644                           ;DHT11Driver.c: 99: (LATC2=1U);
  4645  000FB0  848B               	bsf	3979,2,c	;volatile
  4646                           
  4647                           ;DHT11Driver.c: 100: bitcount=0;
  4648  000FB2  0E00               	movlw	0
  4649  000FB4  6E2F               	movwf	_bitcount,c
  4650                           
  4651                           ;DHT11Driver.c: 101: state = _Idle;
  4652  000FB6  0E00               	movlw	0
  4653  000FB8  6E38               	movwf	_state,c
  4654  000FBA  0012               	return	
  4655  000FBC                     __end_of_RecievingData:
  4656                           	opt stack 0
  4657                           tosu	equ	0xFFF
  4658                           tosh	equ	0xFFE
  4659                           tosl	equ	0xFFD
  4660                           pclatu	equ	0xFFB
  4661                           pclath	equ	0xFFA
  4662                           tblptru	equ	0xFF8
  4663                           tblptrh	equ	0xFF7
  4664                           tblptrl	equ	0xFF6
  4665                           tablat	equ	0xFF5
  4666                           prodh	equ	0xFF4
  4667                           prodl	equ	0xFF3
  4668                           intcon	equ	0xFF2
  4669                           intcon2	equ	0xFF1
  4670                           intcon3	equ	0xFF0
  4671                           postinc0	equ	0xFEE
  4672                           fsr0h	equ	0xFEA
  4673                           fsr0l	equ	0xFE9
  4674                           wreg	equ	0xFE8
  4675                           postdec1	equ	0xFE5
  4676                           fsr1h	equ	0xFE2
  4677                           fsr1l	equ	0xFE1
  4678                           indf2	equ	0xFDF
  4679                           postinc2	equ	0xFDE
  4680                           postdec2	equ	0xFDD
  4681                           fsr2h	equ	0xFDA
  4682                           fsr2l	equ	0xFD9
  4683                           status	equ	0xFD8
  4684                           
  4685 ;; *************** function _DHTSignalResponse *****************
  4686 ;; Defined at:
  4687 ;;		line 52 in file "DHT11Driver.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;		None
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;		None
  4692 ;; Return value:  Size  Location     Type
  4693 ;;                  1    wreg      void 
  4694 ;; Registers used:
  4695 ;;		wreg, status,2, status,0
  4696 ;; Tracked objects:
  4697 ;;		On entry : 0/0
  4698 ;;		On exit  : 0/0
  4699 ;;		Unchanged: 0/0
  4700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4701 ;;      Params:         0       0       0       0       0       0       0       0       0
  4702 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4703 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4704 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4705 ;;Total ram usage:        0 bytes
  4706 ;; Hardware stack levels used:    1
  4707 ;; This function calls:
  4708 ;;		Nothing
  4709 ;; This function is called by:
  4710 ;;		_HighISR
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           	psect	text37
  4715  00110A                     __ptext37:
  4716                           	opt stack 0
  4717  00110A                     _DHTSignalResponse:
  4718                           	opt stack 24
  4719                           
  4720                           ;DHT11Driver.c: 53: T1CON--;
  4721                           
  4722                           ;incstack = 0
  4723  00110A  06CD               	decf	4045,f,c	;volatile
  4724                           
  4725                           ;DHT11Driver.c: 54: TMR1H=0;
  4726  00110C  0E00               	movlw	0
  4727  00110E  6ECF               	movwf	4047,c	;volatile
  4728                           
  4729                           ;DHT11Driver.c: 55: TMR1L=0;
  4730  001110  0E00               	movlw	0
  4731  001112  6ECE               	movwf	4046,c	;volatile
  4732                           
  4733                           ;DHT11Driver.c: 56: CCPR1=0;
  4734  001114  0E00               	movlw	0
  4735  001116  6EBF               	movwf	4031,c	;volatile
  4736  001118  0E00               	movlw	0
  4737  00111A  6EBE               	movwf	4030,c	;volatile
  4738                           
  4739                           ;DHT11Driver.c: 57: T1CON++;
  4740  00111C  2ACD               	incf	4045,f,c	;volatile
  4741                           
  4742                           ;DHT11Driver.c: 59: lasttime=CCPR1;
  4743  00111E  CFBE F0B8          	movff	4030,_lasttime	;volatile
  4744  001122  CFBF F0B9          	movff	4031,_lasttime+1	;volatile
  4745                           
  4746                           ;DHT11Driver.c: 61: state=_RecievingData;
  4747  001126  0E04               	movlw	4
  4748  001128  6E38               	movwf	_state,c
  4749  00112A  0012               	return		;funcret
  4750  00112C                     __end_of_DHTSignalResponse:
  4751                           	opt stack 0
  4752                           tosu	equ	0xFFF
  4753                           tosh	equ	0xFFE
  4754                           tosl	equ	0xFFD
  4755                           pclatu	equ	0xFFB
  4756                           pclath	equ	0xFFA
  4757                           tblptru	equ	0xFF8
  4758                           tblptrh	equ	0xFF7
  4759                           tblptrl	equ	0xFF6
  4760                           tablat	equ	0xFF5
  4761                           prodh	equ	0xFF4
  4762                           prodl	equ	0xFF3
  4763                           intcon	equ	0xFF2
  4764                           intcon2	equ	0xFF1
  4765                           intcon3	equ	0xFF0
  4766                           postinc0	equ	0xFEE
  4767                           fsr0h	equ	0xFEA
  4768                           fsr0l	equ	0xFE9
  4769                           wreg	equ	0xFE8
  4770                           postdec1	equ	0xFE5
  4771                           fsr1h	equ	0xFE2
  4772                           fsr1l	equ	0xFE1
  4773                           indf2	equ	0xFDF
  4774                           postinc2	equ	0xFDE
  4775                           postdec2	equ	0xFDD
  4776                           fsr2h	equ	0xFDA
  4777                           fsr2l	equ	0xFD9
  4778                           status	equ	0xFD8
  4779                           
  4780 ;; *************** function _FirstStateRequest *****************
  4781 ;; Defined at:
  4782 ;;		line 22 in file "DHT11Driver.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;		None
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;		None
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  1    wreg      void 
  4789 ;; Registers used:
  4790 ;;		wreg, status,2, status,0
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4796 ;;      Params:         0       0       0       0       0       0       0       0       0
  4797 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4798 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4799 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4800 ;;Total ram usage:        0 bytes
  4801 ;; Hardware stack levels used:    1
  4802 ;; This function calls:
  4803 ;;		Nothing
  4804 ;; This function is called by:
  4805 ;;		_HighISR
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text38
  4810  001002                     __ptext38:
  4811                           	opt stack 0
  4812  001002                     _FirstStateRequest:
  4813                           	opt stack 24
  4814                           
  4815                           ;DHT11Driver.c: 24: CCP1IE=1U;
  4816                           
  4817                           ;incstack = 0
  4818  001002  849D               	bsf	3997,2,c	;volatile
  4819                           
  4820                           ;DHT11Driver.c: 27: CCP1CON=0x08;
  4821  001004  0E08               	movlw	8
  4822  001006  6EBD               	movwf	4029,c	;volatile
  4823                           
  4824                           ;DHT11Driver.c: 29: TMR1H=0;
  4825  001008  0E00               	movlw	0
  4826  00100A  6ECF               	movwf	4047,c	;volatile
  4827                           
  4828                           ;DHT11Driver.c: 30: TMR1L=0;
  4829  00100C  0E00               	movlw	0
  4830  00100E  6ECE               	movwf	4046,c	;volatile
  4831                           
  4832                           ;DHT11Driver.c: 32: counts=TMR1+18000;
  4833  001010  0E50               	movlw	80
  4834  001012  24CE               	addwf	4046,w,c	;volatile
  4835  001014  0100               	movlb	0	; () banked
  4836  001016  6FB6               	movwf	_counts& (0+255),b
  4837  001018  0E46               	movlw	70
  4838  00101A  20CF               	addwfc	4047,w,c	;volatile
  4839  00101C  0100               	movlb	0	; () banked
  4840  00101E  6FB7               	movwf	(_counts+1)& (0+255),b
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;DHT11Driver.c: 33: T3CON=0b10100000;
  4844  001020  0EA0               	movlw	160
  4845  001022  6EB1               	movwf	4017,c	;volatile
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;DHT11Driver.c: 34: T1CON=0b11001000;
  4849  001024  0EC8               	movlw	200
  4850  001026  6ECD               	movwf	4045,c	;volatile
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;DHT11Driver.c: 36: (TRISCbits.TRISC2 = 0);
  4854  001028  9494               	bcf	3988,2,c	;volatile
  4855                           
  4856                           ; BSR set to: 0
  4857                           ;DHT11Driver.c: 39: CCPR1H=counts>>8;
  4858  00102A  0100               	movlb	0	; () banked
  4859  00102C  51B7               	movf	(_counts+1)& (0+255),w,b
  4860  00102E  6EBF               	movwf	4031,c	;volatile
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;DHT11Driver.c: 40: CCPR1L=(u8)counts;
  4864  001030  C0B6  FFBE         	movff	_counts,4030	;volatile
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;DHT11Driver.c: 42: T1CON++;
  4868  001034  2ACD               	incf	4045,f,c	;volatile
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;DHT11Driver.c: 43: state = _SecondStateRequest;
  4872  001036  0E02               	movlw	2
  4873  001038  6E38               	movwf	_state,c
  4874                           
  4875                           ; BSR set to: 0
  4876  00103A  0012               	return		;funcret
  4877  00103C                     __end_of_FirstStateRequest:
  4878                           	opt stack 0
  4879                           tosu	equ	0xFFF
  4880                           tosh	equ	0xFFE
  4881                           tosl	equ	0xFFD
  4882                           pclatu	equ	0xFFB
  4883                           pclath	equ	0xFFA
  4884                           tblptru	equ	0xFF8
  4885                           tblptrh	equ	0xFF7
  4886                           tblptrl	equ	0xFF6
  4887                           tablat	equ	0xFF5
  4888                           prodh	equ	0xFF4
  4889                           prodl	equ	0xFF3
  4890                           intcon	equ	0xFF2
  4891                           intcon2	equ	0xFF1
  4892                           intcon3	equ	0xFF0
  4893                           postinc0	equ	0xFEE
  4894                           fsr0h	equ	0xFEA
  4895                           fsr0l	equ	0xFE9
  4896                           wreg	equ	0xFE8
  4897                           postdec1	equ	0xFE5
  4898                           fsr1h	equ	0xFE2
  4899                           fsr1l	equ	0xFE1
  4900                           indf2	equ	0xFDF
  4901                           postinc2	equ	0xFDE
  4902                           postdec2	equ	0xFDD
  4903                           fsr2h	equ	0xFDA
  4904                           fsr2l	equ	0xFD9
  4905                           status	equ	0xFD8
  4906                           
  4907 ;; *************** function _Idle *****************
  4908 ;; Defined at:
  4909 ;;		line 19 in file "DHT11Driver.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;		None
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;		None
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  1    wreg      void 
  4916 ;; Registers used:
  4917 ;;		None
  4918 ;; Tracked objects:
  4919 ;;		On entry : 0/0
  4920 ;;		On exit  : 0/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4923 ;;      Params:         0       0       0       0       0       0       0       0       0
  4924 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4925 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4926 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4927 ;;Total ram usage:        0 bytes
  4928 ;; Hardware stack levels used:    1
  4929 ;; This function calls:
  4930 ;;		Nothing
  4931 ;; This function is called by:
  4932 ;;		_HighISR
  4933 ;; This function uses a non-reentrant model
  4934 ;;
  4935                           
  4936                           	psect	text39
  4937  00126E                     __ptext39:
  4938                           	opt stack 0
  4939  00126E                     _Idle:
  4940                           	opt stack 24
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;incstack = 0
  4944  00126E  0012               	return		;funcret
  4945  001270                     __end_of_Idle:
  4946                           	opt stack 0
  4947                           tosu	equ	0xFFF
  4948                           tosh	equ	0xFFE
  4949                           tosl	equ	0xFFD
  4950                           pclatu	equ	0xFFB
  4951                           pclath	equ	0xFFA
  4952                           tblptru	equ	0xFF8
  4953                           tblptrh	equ	0xFF7
  4954                           tblptrl	equ	0xFF6
  4955                           tablat	equ	0xFF5
  4956                           prodh	equ	0xFF4
  4957                           prodl	equ	0xFF3
  4958                           intcon	equ	0xFF2
  4959                           intcon2	equ	0xFF1
  4960                           intcon3	equ	0xFF0
  4961                           postinc0	equ	0xFEE
  4962                           fsr0h	equ	0xFEA
  4963                           fsr0l	equ	0xFE9
  4964                           wreg	equ	0xFE8
  4965                           postdec1	equ	0xFE5
  4966                           fsr1h	equ	0xFE2
  4967                           fsr1l	equ	0xFE1
  4968                           indf2	equ	0xFDF
  4969                           postinc2	equ	0xFDE
  4970                           postdec2	equ	0xFDD
  4971                           fsr2h	equ	0xFDA
  4972                           fsr2l	equ	0xFD9
  4973                           status	equ	0xFD8
  4974                           
  4975 ;; *************** function _SecondStateRequest *****************
  4976 ;; Defined at:
  4977 ;;		line 45 in file "DHT11Driver.c"
  4978 ;; Parameters:    Size  Location     Type
  4979 ;;		None
  4980 ;; Auto vars:     Size  Location     Type
  4981 ;;		None
  4982 ;; Return value:  Size  Location     Type
  4983 ;;                  1    wreg      void 
  4984 ;; Registers used:
  4985 ;;		wreg, status,2
  4986 ;; Tracked objects:
  4987 ;;		On entry : 0/0
  4988 ;;		On exit  : 0/0
  4989 ;;		Unchanged: 0/0
  4990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4991 ;;      Params:         0       0       0       0       0       0       0       0       0
  4992 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4993 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4994 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4995 ;;Total ram usage:        0 bytes
  4996 ;; Hardware stack levels used:    1
  4997 ;; This function calls:
  4998 ;;		Nothing
  4999 ;; This function is called by:
  5000 ;;		_HighISR
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003                           
  5004                           	psect	text40
  5005  0011F6                     __ptext40:
  5006                           	opt stack 0
  5007  0011F6                     _SecondStateRequest:
  5008                           	opt stack 24
  5009                           
  5010                           ;DHT11Driver.c: 46: CCP1CON=0x04;
  5011                           
  5012                           ;incstack = 0
  5013  0011F6  0E04               	movlw	4
  5014  0011F8  6EBD               	movwf	4029,c	;volatile
  5015                           
  5016                           ;DHT11Driver.c: 48: (TRISCbits.TRISC2 = 1);
  5017  0011FA  8494               	bsf	3988,2,c	;volatile
  5018                           
  5019                           ;DHT11Driver.c: 49: state = _DHTSignalResponse;
  5020  0011FC  0E03               	movlw	3
  5021  0011FE  6E38               	movwf	_state,c
  5022  001200  0012               	return		;funcret
  5023  001202                     __end_of_SecondStateRequest:
  5024                           	opt stack 0
  5025                           tosu	equ	0xFFF
  5026                           tosh	equ	0xFFE
  5027                           tosl	equ	0xFFD
  5028                           pclatu	equ	0xFFB
  5029                           pclath	equ	0xFFA
  5030                           tblptru	equ	0xFF8
  5031                           tblptrh	equ	0xFF7
  5032                           tblptrl	equ	0xFF6
  5033                           tablat	equ	0xFF5
  5034                           prodh	equ	0xFF4
  5035                           prodl	equ	0xFF3
  5036                           intcon	equ	0xFF2
  5037                           intcon2	equ	0xFF1
  5038                           intcon3	equ	0xFF0
  5039                           postinc0	equ	0xFEE
  5040                           fsr0h	equ	0xFEA
  5041                           fsr0l	equ	0xFE9
  5042                           wreg	equ	0xFE8
  5043                           postdec1	equ	0xFE5
  5044                           fsr1h	equ	0xFE2
  5045                           fsr1l	equ	0xFE1
  5046                           indf2	equ	0xFDF
  5047                           postinc2	equ	0xFDE
  5048                           postdec2	equ	0xFDD
  5049                           fsr2h	equ	0xFDA
  5050                           fsr2l	equ	0xFD9
  5051                           status	equ	0xFD8
  5052                           tosu	equ	0xFFF
  5053                           tosh	equ	0xFFE
  5054                           tosl	equ	0xFFD
  5055                           pclatu	equ	0xFFB
  5056                           pclath	equ	0xFFA
  5057                           tblptru	equ	0xFF8
  5058                           tblptrh	equ	0xFF7
  5059                           tblptrl	equ	0xFF6
  5060                           tablat	equ	0xFF5
  5061                           prodh	equ	0xFF4
  5062                           prodl	equ	0xFF3
  5063                           intcon	equ	0xFF2
  5064                           intcon2	equ	0xFF1
  5065                           intcon3	equ	0xFF0
  5066                           postinc0	equ	0xFEE
  5067                           fsr0h	equ	0xFEA
  5068                           fsr0l	equ	0xFE9
  5069                           wreg	equ	0xFE8
  5070                           postdec1	equ	0xFE5
  5071                           fsr1h	equ	0xFE2
  5072                           fsr1l	equ	0xFE1
  5073                           indf2	equ	0xFDF
  5074                           postinc2	equ	0xFDE
  5075                           postdec2	equ	0xFDD
  5076                           fsr2h	equ	0xFDA
  5077                           fsr2l	equ	0xFD9
  5078                           status	equ	0xFD8
  5079                           
  5080                           	psect	text41
  5081  000000                     __ptext41:
  5082                           	opt stack 0
  5083                           tosu	equ	0xFFF
  5084                           tosh	equ	0xFFE
  5085                           tosl	equ	0xFFD
  5086                           pclatu	equ	0xFFB
  5087                           pclath	equ	0xFFA
  5088                           tblptru	equ	0xFF8
  5089                           tblptrh	equ	0xFF7
  5090                           tblptrl	equ	0xFF6
  5091                           tablat	equ	0xFF5
  5092                           prodh	equ	0xFF4
  5093                           prodl	equ	0xFF3
  5094                           intcon	equ	0xFF2
  5095                           intcon2	equ	0xFF1
  5096                           intcon3	equ	0xFF0
  5097                           postinc0	equ	0xFEE
  5098                           fsr0h	equ	0xFEA
  5099                           fsr0l	equ	0xFE9
  5100                           wreg	equ	0xFE8
  5101                           postdec1	equ	0xFE5
  5102                           fsr1h	equ	0xFE2
  5103                           fsr1l	equ	0xFE1
  5104                           indf2	equ	0xFDF
  5105                           postinc2	equ	0xFDE
  5106                           postdec2	equ	0xFDD
  5107                           fsr2h	equ	0xFDA
  5108                           fsr2l	equ	0xFD9
  5109                           status	equ	0xFD8
  5110                           
  5111                           	psect	rparam
  5112  0000                     tosu	equ	0xFFF
  5113                           tosh	equ	0xFFE
  5114                           tosl	equ	0xFFD
  5115                           pclatu	equ	0xFFB
  5116                           pclath	equ	0xFFA
  5117                           tblptru	equ	0xFF8
  5118                           tblptrh	equ	0xFF7
  5119                           tblptrl	equ	0xFF6
  5120                           tablat	equ	0xFF5
  5121                           prodh	equ	0xFF4
  5122                           prodl	equ	0xFF3
  5123                           intcon	equ	0xFF2
  5124                           intcon2	equ	0xFF1
  5125                           intcon3	equ	0xFF0
  5126                           postinc0	equ	0xFEE
  5127                           fsr0h	equ	0xFEA
  5128                           fsr0l	equ	0xFE9
  5129                           wreg	equ	0xFE8
  5130                           postdec1	equ	0xFE5
  5131                           fsr1h	equ	0xFE2
  5132                           fsr1l	equ	0xFE1
  5133                           indf2	equ	0xFDF
  5134                           postinc2	equ	0xFDE
  5135                           postdec2	equ	0xFDD
  5136                           fsr2h	equ	0xFDA
  5137                           fsr2l	equ	0xFD9
  5138                           status	equ	0xFD8
  5139                           
  5140                           	psect	temp
  5141  000045                     btemp:
  5142                           	opt stack 0
  5143  000045                     	ds	1
  5144  0000                     int$flags	set	btemp
  5145                           tosu	equ	0xFFF
  5146                           tosh	equ	0xFFE
  5147                           tosl	equ	0xFFD
  5148                           pclatu	equ	0xFFB
  5149                           pclath	equ	0xFFA
  5150                           tblptru	equ	0xFF8
  5151                           tblptrh	equ	0xFF7
  5152                           tblptrl	equ	0xFF6
  5153                           tablat	equ	0xFF5
  5154                           prodh	equ	0xFF4
  5155                           prodl	equ	0xFF3
  5156                           intcon	equ	0xFF2
  5157                           intcon2	equ	0xFF1
  5158                           intcon3	equ	0xFF0
  5159                           postinc0	equ	0xFEE
  5160                           fsr0h	equ	0xFEA
  5161                           fsr0l	equ	0xFE9
  5162                           wreg	equ	0xFE8
  5163                           postdec1	equ	0xFE5
  5164                           fsr1h	equ	0xFE2
  5165                           fsr1l	equ	0xFE1
  5166                           indf2	equ	0xFDF
  5167                           postinc2	equ	0xFDE
  5168                           postdec2	equ	0xFDD
  5169                           fsr2h	equ	0xFDA
  5170                           fsr2l	equ	0xFD9
  5171                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    2
    Data        24
    BSS         132
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      68
    BANK0           160     26     150
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ReadFrame@pointer	PTR unsigned char  size(2) Largest target is 15
		 -> RecievedData(BANK0[15]), 

    DHT_StateMachine	PTR FTN()void [5] size(2) Largest target is 1
		 -> RecievingData(), DHTSignalResponse(), SecondStateRequest(), FirstStateRequest(), 
		 -> Idle(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_TurnOnLights->i2_SetPWM
    i2_SetPWM->i2_SetDutyCycle
    i2_SetDutyCycle->i2___awdiv
    i2___awdiv->i2___wmul

Critical Paths under _main in BANK0

    _main->_ReadFrame
    _TurnOnLights->_SetPWM
    _SetPWM->_SetDutyCycle
    _SetDutyCycle->___awdiv
    ___awdiv->___wmul

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4958
                                             24 BANK0      2     2      0
                    _InitDHT11Driver
                     _Interrupt_Init
                          _ReadFrame
                         _SerialInit
                          _TMR0_INIT
                    _TMR0_WRITE_HIGH
                     _TMR0_WRITE_LOW
                      _TurnOffLights
                       _TurnOnLights
 ---------------------------------------------------------------------------------
 (1) _TurnOffLights                                        0     0      0       0
                            _StopPWM
 ---------------------------------------------------------------------------------
 (2) _StopPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WRITE_LOW                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WRITE_HIGH                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_INIT                                            2     2      0      92
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SerialInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadFrame                                            6     4      2    3205
                                             18 BANK0      6     4      2
                       _TurnOnLights
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _TurnOnLights                                         0     0      0    1599
                             _SetPWM
                           _StartPWM
 ---------------------------------------------------------------------------------
 (2) _StartPWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SetPWM                                               1     1      0    1599
                                             17 BANK0      1     1      0
                       _SetDutyCycle
                          _SetPeriod
 ---------------------------------------------------------------------------------
 (3) _SetPeriod                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SetDutyCycle                                         3     3      0    1568
                                             14 BANK0      3     3      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     938
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     599
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Interrupt_Init                                       0     0      0       0
                        _INIT_INTCON
                       _INIT_INTCON2
                       _INIT_INTCON3
                          _INIT_IPR1
                          _INIT_IPR2
                          _INIT_PIE1
                          _INIT_PIE2
                          _INIT_RCON
 ---------------------------------------------------------------------------------
 (2) _INIT_RCON                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_PIE2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_PIE1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_IPR2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_IPR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_INTCON3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_INTCON2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_INTCON                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitDHT11Driver                                      0     0      0       0
                    _ConfigureTimer1
 ---------------------------------------------------------------------------------
 (2) _ConfigureTimer1                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                             16    16      0     649
                                             18 COMRAM    16    16      0
                  _DHTSignalResponse *
                  _FirstStateRequest *
                               _Idle *
                      _RecievingData *
                 _SecondStateRequest *
                  i2_TMR0_WRITE_HIGH
                   i2_TMR0_WRITE_LOW
                     i2_TurnOnLights
 ---------------------------------------------------------------------------------
 (7) i2_TurnOnLights                                       0     0      0     605
                           i2_SetPWM
                         i2_StartPWM
 ---------------------------------------------------------------------------------
 (8) i2_StartPWM                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_SetPWM                                             1     1      0     605
                                             17 COMRAM     1     1      0
                     i2_SetDutyCycle
                        i2_SetPeriod
 ---------------------------------------------------------------------------------
 (9) i2_SetPeriod                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i2_SetDutyCycle                                       3     3      0     583
                                             14 COMRAM     3     3      0
                          i2___awdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) i2___wmul                                            6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) i2___awdiv                                           8     4      4     352
                                              6 COMRAM     8     4      4
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) i2_TMR0_WRITE_LOW                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) i2_TMR0_WRITE_HIGH                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _SecondStateRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _RecievingData                                        2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _Idle                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _FirstStateRequest                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _DHTSignalResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitDHT11Driver
     _ConfigureTimer1
   _Interrupt_Init
     _INIT_INTCON
     _INIT_INTCON2
     _INIT_INTCON3
     _INIT_IPR1
     _INIT_IPR2
     _INIT_PIE1
     _INIT_PIE2
     _INIT_RCON
   _ReadFrame
     _TurnOnLights
       _SetPWM
         _SetDutyCycle
           ___awdiv
             ___wmul (ARG)
           ___wmul
         _SetPeriod
       _StartPWM
     ___wmul
   _SerialInit
   _TMR0_INIT
   _TMR0_WRITE_HIGH
   _TMR0_WRITE_LOW
   _TurnOffLights
     _StopPWM
   _TurnOnLights
     _SetPWM
       _SetDutyCycle
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _SetPeriod
     _StartPWM

 _HighISR (ROOT)
   _DHTSignalResponse *
   _FirstStateRequest *
   _Idle *
   _RecievingData *
   _SecondStateRequest *
   i2_TMR0_WRITE_HIGH *
   i2_TMR0_WRITE_LOW *
   i2_TurnOnLights *
     i2_SetPWM
       i2_SetDutyCycle
         i2___awdiv
           i2___wmul (ARG)
         i2___wmul
       i2_SetPeriod
     i2_StartPWM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1A      96       5       93.8%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     22      44       1       72.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DA      20        0.0%
DATA                 0      0      DA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Tue May 03 01:04:06 2016

           ??_Interrupt_Init 00CD                   i2_StartPWM 1246                  __CFG_CP0$ON 000000  
                __CFG_CP1$ON 000000                  __CFG_CP2$ON 000000                  __CFG_CP3$ON 000000  
                __CFG_CPB$ON 000000                  __CFG_CPD$ON 000000                 ___awdiv@sign 00D8  
        ___wmul@multiplicand 00CF                  __CFG_BORV$3 000000        __size_of_TurnOnLights 0012  
                __CFG_LVP$ON 000000                          l156 0D80                          l398 0FFC  
              _MinLightValue 0040                          _PR2 000FCB                          _RX9 007D5E  
                        _LSb 00B0                          _TX9 007D66                          _PWM 01D3  
                        _MSb 00B4     TMR0_WRITE_HIGH@valorHigh 00CD                          _fan 0042  
                        prod 000FF3       __size_of_TurnOffLights 000C                          tosl 000FFD  
                        wreg 000FE8                 _f_Send2Bytes 01D5              ?i2_SetDutyCycle 0001  
               __CFG_WDT$OFF 000000                         l2200 0C60                         l2212 0C94  
                       l2302 0FEC                         l2214 0CA0                         l2206 0C76  
                       l2232 0CF8                         l2224 0CD6                         l2216 0CA6  
                       l2228 0CE4                         l2404 09B8                         l2430 0A2C  
                       l2416 09F8                         l2424 0A20                         l2426 0A24  
                       l2382 0884                         l2390 08AA                         l2374 085A  
                       l2470 0D60                         l2384 0892                         l2480 0D86  
                       l2298 0FDC                         l2386 08A2                         _ADIF 007CF6  
                       _BRGH 007D62                         _T0IF 007F92                         _CREN 007D5C  
                       _CSRC 007D67                 ?_INIT_INTCON 0001                         _RCIE 007CED  
                       _RCIF 007CF5                         _TMR0 000FD6                         _TMR1 000FCE  
                       _SPEN 007D5F                         _SREN 007D5D                         _TXEN 007D65  
                       _SYNC 007D64                         _Idle 126E                 __CFG_WRT0$ON 000000  
               __CFG_WRT1$ON 000000                 __CFG_WRT2$ON 000000                 __CFG_WRT3$ON 000000  
              __CFG_EBTR0$ON 000000                __CFG_EBTR1$ON 000000                __CFG_EBTR2$ON 000000  
              __CFG_EBTR3$ON 000000                 __CFG_WRTB$ON 000000                 __CFG_WRTC$ON 000000  
              __CFG_BOR$SOFT 000000                 __CFG_WRTD$ON 000000                __CFG_EBTRB$ON 000000  
                       _main 0D02                         _mask 0034                         _time 0039  
                       fsr0h 000FEA    __size_ofi2_TMR0_WRITE_LOW 0008                         fsr1h 000FE2  
                       fsr0l 000FE9                         fsr2h 000FDA                         fsr1l 000FE1  
                       indf2 000FDF                         fsr2l 000FD9           _IntegerTemperature 002A  
                       btemp 0045                         pclat 000FFA                         prodh 000FF4  
                       prodl 000FF3                         start 0016                __CFG_IESO$OFF 000000  
         __size_of_INIT_IPR1 0010           __size_of_INIT_IPR2 000E           __size_of_INIT_PIE1 0010  
         __size_of_INIT_PIE2 000E              __end_of_HighISR 0C44           __size_of_INIT_RCON 0004  
               _TurnOnLights 1160                 ___param_bank 000010                 _totaldaytime 003E  
    __size_ofi2_TurnOnLights 0012                __CFG_PLLDIV$1 000000                        ?_Idle 0001  
           ?_TMR0_WRITE_HIGH 0001              __end_of_StopPWM 120C                        _ADDEN 007D5B  
                      ?_main 0001              __end_of___awdiv 0D02                        _ADRES 000FC3  
                      _CCPR1 000FBE                        _BRG16 007DC3                        _T0CON 000FD5  
            ___awdiv@divisor 00D5                        _T1CON 000FCD                        _T2CON 000FCA  
                      _LATA3 007C4B                        _LATB3 007C53                        _LATC2 007C5A  
                      _T3CON 000FB1                ?_INIT_INTCON2 0001                ?_INIT_INTCON3 0001  
                      _T1RUN 007E6E                        i2l140 0B2A                        i2l150 0C08  
                      i2l145 0B56                        i2l137 0B2C              ___awdiv@counter 00D7  
                      _RCREG 000FAE                        _SENDB 007D63                        _TMR0H 000FD7  
                      _TMR1H 000FCF                        _TMR0L 000FD6                        _TMR1L 000FCE  
                      _SPBRG 000FAF                __CFG_USBDIV$1 000000                        _TXREG 000FAD  
              __CFG_PWRT$OFF 000000           __size_of_TMR0_INIT 0028               __CFG_FCMEN$OFF 000000  
                      _frame 0033                        _light 0043             __end_ofi2_SetPWM 1160  
                      _times 0060                        _state 0038               __pbitbssCOMRAM 01D0  
                      pclath 000FFA                        tablat 000FF5             __end_ofi2___wmul 10E8  
                      status 000FD8           __size_ofi2___awdiv 0084                _TurnOffLights 11DE  
            _ConfigureTimer1 0FBC               __CFG_MCLRE$OFF 000000                 __end_of_Idle 1270  
            __initialization 0E96                   _LightValue 00B2     __size_of_InitDHT11Driver 000A  
               __end_of_main 0D9E                  ?i2_StartPWM 0001              SetPWM@dutycycle 00DE  
    i2SetDutyCycle@dutycycle 0011                       ??_Idle 0001                       ??_main 00E5  
             ??_INIT_INTCON2 00CD               ??_INIT_INTCON3 00CD                __activetblptr 000002  
          __end_of_INIT_IPR1 11A4            __end_of_INIT_IPR2 11D0            __end_of_INIT_PIE1 1194  
          __end_of_INIT_PIE2 11C2            __end_of_INIT_RCON 126E              __CFG_CCP2MX$OFF 000000  
           __end_of_StartPWM 1246                       _ADCON0 000FC2                       _ADCON1 000FC1  
                     _CCP1IE 007CEA                       _CCP1IF 007CF2                       _CCPR1H 000FBF  
                     _CCPR1L 000FBE                       _CCPR2L 000FBB             ___awdiv@dividend 00D3  
__size_of_SecondStateRequest 000C                       _INT2IF 007F81                       i2l2102 0B4A  
                     i2l2124 0BCA                       i2l2132 0BDA                       i2l2044 0A86  
                     i2l2052 0A90                       i2l2118 0B8A                       i2l2070 0ACE  
                     i2l2080 0AEE                       i2l2066 0ABE                       i2l1720 0DB2  
                     i2l2098 0B3E                       i2l1732 0DD8                       i2l1734 0DE0  
                     i2l1726 0DC2                       i2l1752 0E18                       i2l1744 0E00  
                     i2l1736 0DE4                       i2l1748 0E0A                       _OSCCON 000FD3  
                  ??_HighISR 0013                       _TMR0IF 007F92                       _TMR1CS 007E69  
                     _TMR0ON 007EAF                       _TMR1ON 007E68           __size_of_ReadFrame 0240  
             ?_TurnOffLights 0001                       __SPBRG 0802                   _SerialInit 109A  
                     _Door_f 01D0                       _SetPWM 112C               __CFG_XINST$OFF 000000  
     __size_of_RecievingData 0054              SerialCOM@_SPBRG 0801            __end_of_TMR0_INIT 109A  
                  ??_StopPWM 00CD                       ___wmul 103C                    ??___awdiv 00D7  
             __CFG_STVREN$ON 000000           __size_of_SetPeriod 0006               _actualhumidity 002D  
                     _counts 00B6                       clear_0 0E9C                       clear_1 0EAC  
           ___awdiv@quotient 00D9      __size_of_TMR0_WRITE_LOW 000A               i2___awdiv@sign 000C  
               __pdataCOMRAM 003C                   _f_SSPReady 01D4            __end_ofi2___awdiv 0E22  
               __mediumconst 0000                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                ?_SetDutyCycle 0001          __size_ofi2_StartPWM 0008  
    __end_of_ConfigureTimer1 1002                   __accesstop 0060      __end_of__initialization 0EF2  
            __CFG_PBADEN$OFF 000000             i2_TMR0_WRITE_LOW 124E         __size_of_INIT_INTCON 000C  
               ?i2_SetPeriod 0001                ___rparam_used 000001                   _f_SendByte 01D6  
             __pcstackCOMRAM 0001                 _f_frameready 0032                 __pidataBANK0 11A4  
             i2_TurnOnLights 1172                    ?i2_SetPWM 0001            ??_InitDHT11Driver 00CD  
          __end_of_ReadFrame 0A44                    ?i2___wmul 0001             ??i2_SetDutyCycle 000F  
              _RecievingData 0F68               ??_SetDutyCycle 00DB            __end_of_SetPeriod 1264  
                 __pbssBANK0 0060      __end_ofSerialCOM@_SPBRG 0802              ??_TurnOffLights 00CD  
           ReadFrame@pointer 00DF         __end_of_INIT_INTCON2 11DE         __end_of_INIT_INTCON3 122A  
            _DecimalHumidity 0027                   _actualtime 0025                  ?_SerialInit 0001  
                    ?_SetPWM 0001       __end_ofi2_TurnOnLights 1184                      ?___wmul 00CD  
                  ?_StartPWM 0001                      _CCP1CON 000FBD                      _CCP2CON 000FBA  
                 ??i2_SetPWM 0012            _FirstStateRequest 1002                   ??i2___wmul 0005  
                    _T1OSCEN 007E6B                      _INTEDG2 007F8C               ?_RecievingData 0001  
         ?_FirstStateRequest 0001          ??_FirstStateRequest 0001              __CFG_VREGEN$OFF 000000  
           ?_ConfigureTimer1 0001                      _HighISR 0008                      _Light_f 01D1  
                    _Night_f 01D2                      __Hparam 0000                      __Lparam 0000  
            __size_of_SetPWM 001C              ?i2_TurnOnLights 0001                      _StopPWM 1202  
                    ___awdiv 0C44                 ??i2_StartPWM 0001                   ??_StartPWM 00CD  
            __size_of___wmul 0036                 __psmallconst 0800    __end_of_FirstStateRequest 103C  
                    __pcinit 0E96                   _lightstate 01D7               _TMR0_WRITE_LOW 120C  
                    __ramtop 0800                      __ptext0 0D02                      __ptext1 11DE  
                    __ptext2 1202                      __ptext3 120C                      __ptext4 1216  
                    __ptext5 1072                      __ptext6 109A                      __ptext7 0804  
                    __ptext8 1160                      __ptext9 123E                      _endbyte 0041  
                  _T1CONbits 000FCD                      _counter 0031      __size_of_Interrupt_Init 0022  
        __size_of_SerialInit 0028     __size_of_TMR0_WRITE_HIGH 000A               __pintcode_body 0A44  
     TMR0_WRITE_LOW@valorLow 00CD         end_of_initialization 0EF2                    _INIT_IPR1 1194  
                  _INIT_IPR2 11C2                    _INIT_PIE1 1184                    _INIT_PIE2 11B4  
                  _INIT_RCON 126A           __end_ofi2_StartPWM 124E                __Lmediumconst 0000  
                    int_func 0A44          i2___wmul@multiplier 0001         __size_ofi2_SetPeriod 0006  
       __end_of_SetDutyCycle 0E96                      postdec1 000FE5                      postdec2 000FDD  
                    postinc0 000FEE                      postinc2 000FDE       __end_of_TMR0_WRITE_LOW 1216  
                  _TMR0_INIT 1072              ??_RecievingData 0001     __end_ofi2_TMR0_WRITE_LOW 1256  
                  _TRISAbits 000F92                    _TRISBbits 000F93                    _TRISCbits 000F94  
 __end_of_SecondStateRequest 1202            i2_TMR0_WRITE_HIGH 1256             _timetostartlight 00BC  
                  i2___awdiv 0D9E        __size_of_INIT_INTCON2 000E        __size_of_INIT_INTCON3 000A  
                 ?_INIT_IPR1 0001                   ?_INIT_IPR2 0001                   ?_INIT_PIE1 0001  
                 ?_INIT_PIE2 0001                   ?_INIT_RCON 0001           ?i2_TMR0_WRITE_HIGH 0001  
         _optimaltemperature 0036           i2___awdiv@dividend 0007          ??i2_TMR0_WRITE_HIGH 0001  
            _InitDHT11Driver 122A               __end_of__SPBRG 0803               __end_of_SetPWM 1148  
            ?_TMR0_WRITE_LOW 0001   __size_of_FirstStateRequest 003A               __end_of___wmul 1072  
                 ?_TMR0_INIT 0001             _DHT_StateMachine 00E7                __pidataCOMRAM 1234  
          __size_ofi2_SetPWM 0018             i2___wmul@product 0005                 _INIT_INTCON2 11D0  
               _INIT_INTCON3 1220          start_initialization 0E96    __end_ofi2_TMR0_WRITE_HIGH 125E  
         i2___awdiv@quotient 000D            __size_ofi2___wmul 0026                    _ReadFrame 0804  
                 ?i2___awdiv 0007                ??_INIT_INTCON 00CD            ??_TMR0_WRITE_HIGH 00CD  
                  _SetPeriod 125E                 ??_SerialInit 00CD                     ??_SetPWM 00DE  
              ?_TurnOnLights 0001                     ??___wmul 00D1                    _TimerUser 002C  
                __pdataBANK0 00E7             __CFG_LPT1OSC$OFF 000000                TMR0_INIT@T0PS 00CE  
          __size_of_StartPWM 0008                TMR0_INIT@bits 00CD               _Interrupt_Init 10E8  
                __pbssCOMRAM 0023                __pcstackBANK0 00CD                   ?_ReadFrame 00DF  
         __end_of_SerialInit 10C2            _DHTSignalResponse 110A                 _RecievedData 00BE  
                ??_INIT_IPR1 00CD                  ??_INIT_IPR2 00CD                  ??_INIT_PIE1 00CD  
                ??_INIT_PIE2 00CD           ?_DHTSignalResponse 0001                  ??_INIT_RCON 00CD  
               _lightcounter 00BA      __end_of_InitDHT11Driver 1234                     ?_HighISR 0001  
      __size_of_SetDutyCycle 0074             ??i2_TurnOnLights 0013                   ?_SetPeriod 0001  
      __end_of_TurnOffLights 11EA          ??_DHTSignalResponse 0001                 _lightstate_f 01D8  
             ??_TurnOnLights 00DF          __end_of_INIT_INTCON 11F6                    __pintcode 0008  
                   ?_StopPWM 0001                     ?___awdiv 00D3                  ??_TMR0_INIT 00CD  
            _optimalhumidity 0035       __end_of_Interrupt_Init 110A           _DecimalTemperature 0028  
                __smallconst 0800    __end_of_DHTSignalResponse 112C   __size_ofi2_TMR0_WRITE_HIGH 0008  
                  _firstbyte 00F1                 _SetDutyCycle 0E22                  ??i2___awdiv 000B  
                  _bytecount 0030      __size_ofi2_SetDutyCycle 0068               ___wmul@product 00D1  
                   _IPR1bits 000F9F                     _IPR2bits 000FA2                     _PIE1bits 000F9D  
                   _PIE2bits 000FA0                     i2u114_48 0B76                     i2u117_48 0BF4  
                   _RCONbits 000FD0     __size_of_ConfigureTimer1 0046             __CFG_WDTPS$32768 000000  
                  _prescaler 0044                     i2_SetPWM 1148              ?_Interrupt_Init 0001  
                 _ADCON0bits 000FC2                   _ADCON2bits 000FC0            ___wmul@multiplier 00CD  
                   _PWMValue 0023   i2TMR0_WRITE_HIGH@valorHigh 0001                     i2___wmul 10C2  
          ?i2_TMR0_WRITE_LOW 0001            i2___awdiv@divisor 0009           ??i2_TMR0_WRITE_LOW 0001  
          i2___awdiv@counter 000B                  ??_ReadFrame 00E1                  _INTCON2bits 000FF1  
                _INTCON3bits 000FF0                    copy_data0 0EC6                    copy_data1 0EE6  
          _actualtemperature 002E                  _INIT_INTCON 11EA             ?_InitDHT11Driver 0001  
              ??i2_SetPeriod 0001             __size_of_HighISR 0C3C                  ??_SetPeriod 00CD  
         _SecondStateRequest 11F6             ??_TMR0_WRITE_LOW 00CD                     __Hrparam 0000  
                   __Lrparam 0000                     _StartPWM 123E          ?_SecondStateRequest 0001  
           __size_of_StopPWM 000A             __size_of___awdiv 00BE        i2___wmul@multiplicand 0003  
          i2SetPWM@dutycycle 0012                  _lightperday 003C        __end_of_RecievingData 0FBC  
 __size_of_DHTSignalResponse 0022     i2TMR0_WRITE_LOW@valorLow 0001              _TMR0_WRITE_HIGH 1216  
       __end_of_TurnOnLights 1172                 _TimerCounter 002B                     __ptext10 112C  
                   __ptext11 125E                     __ptext20 1194                     __ptext12 0E22  
                   __ptext21 1220                     __ptext13 103C                     __ptext30 1264  
                   __ptext22 11D0                     __ptext14 0C44                     __ptext31 0F00  
                   __ptext23 11EA                     __ptext15 10E8                     __ptext40 11F6  
                   __ptext32 10C2                     __ptext24 122A                     __ptext16 126A  
                   __ptext41 0000                     __ptext33 0D9E                     __ptext25 0FBC  
                   __ptext17 11B4                     __ptext34 124E                     __ptext18 1184  
                   __ptext35 1256                     __ptext27 1172                     __ptext19 11C2  
                   __ptext36 0F68                     __ptext28 1246                     __ptext37 110A  
                   __ptext29 1148                     __ptext38 1002                     __ptext39 126E  
                   _bitcount 002F         ??_SecondStateRequest 0001                __size_of_Idle 0002  
              __size_of_main 009C                     _lasttime 00B8              _IntegerHumidity 0029  
        __end_ofi2_SetPeriod 126A                     int$flags 0045            ??_ConfigureTimer1 00CD  
      __CFG_CPUDIV$OSC1_PLL2 000000                   _INTCONbits 000FF2                     intlevel2 0000  
             i2_SetDutyCycle 0F00                  _serialcount 0037      __end_of_TMR0_WRITE_HIGH 1220  
      SetDutyCycle@dutycycle 00DD          __CFG_FOSC$INTOSC_HS 000000       __end_ofi2_SetDutyCycle 0F68  
                i2_SetPeriod 1264  
