

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon Apr 11 13:48:49 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           	psect	idataCOMRAM
    53  000BC0                     __pidataCOMRAM:
    54                           	opt stack 0
    55                           
    56                           ;initializer for _DHT_StateMachine
    57  000BC0  98                 	db	low _Idle
    58  000BC1  0C                 	db	high _Idle
    59  000BC2  C8                 	db	low _FirstStateRequest
    60  000BC3  0A                 	db	high _FirstStateRequest
    61  000BC4  32                 	db	low _SecondStateRequest
    62  000BC5  0C                 	db	high _SecondStateRequest
    63  000BC6  8E                 	db	low _DHTSignalResponse
    64  000BC7  0B                 	db	high _DHTSignalResponse
    65  000BC8  E6                 	db	low _RecievingData
    66  000BC9  09                 	db	high _RecievingData
    67                           
    68                           ;initializer for _firstbyte
    69  000BCA  23                 	db	35
    70  000BCB  25                 	db	37
    71  000BCC  40                 	db	64
    72                           
    73                           ;initializer for _endbyte
    74  000BCD  24                 	db	36
    75                           
    76                           ;initializer for _prescaler
    77  000BCE  04                 	db	4
    78                           
    79                           ;initializer for _splitbyte
    80  000BCF  2B                 	db	43
    81                           
    82                           	psect	smallconst
    83  000800                     __psmallconst:
    84                           	opt stack 0
    85  000800  00                 	db	0
    86  000801  0C                 	db	12
    87  000802                     __end_of__SPBRG:
    88                           	opt stack 0
    89  0000                     _CCPR1	set	4030
    90  0000                     _TMR0	set	4054
    91  0000                     _TMR1	set	4046
    92  0000                     _CCP1CON	set	4029
    93  0000                     _CCP2CON	set	4026
    94  0000                     _CCPR1H	set	4031
    95  0000                     _CCPR1L	set	4030
    96  0000                     _CCPR2L	set	4027
    97  0000                     _INTCON2bits	set	4081
    98  0000                     _INTCON3bits	set	4080
    99  0000                     _INTCONbits	set	4082
   100  0000                     _IPR1bits	set	3999
   101  0000                     _IPR2bits	set	4002
   102  0000                     _OSCCON	set	4051
   103  0000                     _PIE1bits	set	3997
   104  0000                     _PIE2bits	set	4000
   105  0000                     _PR2	set	4043
   106  0000                     _RCONbits	set	4048
   107  0000                     _T0CON	set	4053
   108  0000                     _T1CON	set	4045
   109  0000                     _T1CONbits	set	4045
   110  0000                     _T2CON	set	4042
   111  0000                     _T3CON	set	4017
   112  0000                     _TMR0H	set	4055
   113  0000                     _TMR0L	set	4054
   114  0000                     _TMR1H	set	4047
   115  0000                     _TMR1L	set	4046
   116  0000                     _TRISBbits	set	3987
   117  0000                     _ADIF	set	31990
   118  0000                     _CCP1IE	set	31978
   119  0000                     _CCP1IF	set	31986
   120  0000                     _INT2IF	set	32641
   121  0000                     _INTEDG2	set	32652
   122  0000                     _LATB3	set	31827
   123  0000                     _T0IF	set	32658
   124  0000                     _T1OSCEN	set	32363
   125  0000                     _T1RUN	set	32366
   126  0000                     _TMR0IF	set	32658
   127  0000                     _TMR0ON	set	32431
   128  0000                     _TMR1CS	set	32361
   129  0000                     _TMR1ON	set	32360
   130                           
   131                           ; #config settings
   132  000802  00                 	db	0	; dummy byte at the end
   133  0000                     
   134                           	psect	cinit
   135  000A3A                     __pcinit:
   136                           	opt stack 0
   137  000A3A                     start_initialization:
   138                           	opt stack 0
   139  000A3A                     __initialization:
   140                           	opt stack 0
   141                           
   142                           ; Clear objects allocated to BANK0 (80 bytes)
   143  000A3A  EE00  F060         	lfsr	0,__pbssBANK0
   144  000A3E  0E50               	movlw	80
   145  000A40                     clear_0:
   146  000A40  6AEE               	clrf	postinc0,c
   147  000A42  06E8               	decf	wreg,f,c
   148  000A44  E1FD               	bnz	clear_0
   149                           
   150                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   151  000A46  6A54               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   152                           
   153                           ; Clear objects allocated to COMRAM (35 bytes)
   154  000A48  EE00  F001         	lfsr	0,__pbssCOMRAM
   155  000A4C  0E23               	movlw	35
   156  000A4E                     clear_1:
   157  000A4E  6AEE               	clrf	postinc0,c
   158  000A50  06E8               	decf	wreg,f,c
   159  000A52  E1FD               	bnz	clear_1
   160                           
   161                           ; Initialize objects allocated to COMRAM (16 bytes)
   162                           ; load TBLPTR registers with __pidataCOMRAM
   163  000A54  0EC0               	movlw	low __pidataCOMRAM
   164  000A56  6EF6               	movwf	tblptrl,c
   165  000A58  0E0B               	movlw	high __pidataCOMRAM
   166  000A5A  6EF7               	movwf	tblptrh,c
   167  000A5C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   168  000A5E  6EF8               	movwf	tblptru,c
   169  000A60  EE00  F044         	lfsr	0,__pdataCOMRAM
   170  000A64  EE10 F010          	lfsr	1,16
   171  000A68                     copy_data0:
   172  000A68  0009               	tblrd		*+
   173  000A6A  CFF5 FFEE          	movff	tablat,postinc0
   174  000A6E  50E5               	movf	postdec1,w,c
   175  000A70  50E1               	movf	fsr1l,w,c
   176  000A72  E1FA               	bnz	copy_data0
   177  000A74                     end_of_initialization:
   178                           	opt stack 0
   179  000A74                     __end_of__initialization:
   180                           	opt stack 0
   181  000A74  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   182  000A76  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   183  000A78  0E00               	movlw	low (__Lmediumconst shr (0+16))
   184  000A7A  6EF8               	movwf	tblptru,c
   185  000A7C  0100               	movlb	0
   186  000A7E  EFA5  F005         	goto	_main	;jump to C main() function
   187                           tblptru	equ	0xFF8
   188                           tblptrh	equ	0xFF7
   189                           tblptrl	equ	0xFF6
   190                           tablat	equ	0xFF5
   191                           postinc0	equ	0xFEE
   192                           wreg	equ	0xFE8
   193                           postdec1	equ	0xFE5
   194                           fsr1l	equ	0xFE1
   195                           
   196                           	psect	bitbssCOMRAM
   197  0002A0                     __pbitbssCOMRAM:
   198                           	opt stack 0
   199  0002A0                     _Door_f:
   200                           	opt stack 0
   201  0002A0                     	ds	1
   202  0002A1                     _Light_f:
   203                           	opt stack 0
   204  0002A1                     	ds	1
   205  0002A2                     _Night_f:
   206                           	opt stack 0
   207  0002A2                     	ds	1
   208                           tblptru	equ	0xFF8
   209                           tblptrh	equ	0xFF7
   210                           tblptrl	equ	0xFF6
   211                           tablat	equ	0xFF5
   212                           postinc0	equ	0xFEE
   213                           wreg	equ	0xFE8
   214                           postdec1	equ	0xFE5
   215                           fsr1l	equ	0xFE1
   216                           
   217                           	psect	bssCOMRAM
   218  000001                     __pbssCOMRAM:
   219                           	opt stack 0
   220  000001                     _temp:
   221                           	opt stack 0
   222  000001                     	ds	6
   223  000007                     _LSb:
   224                           	opt stack 0
   225  000007                     	ds	2
   226  000009                     _MSb:
   227                           	opt stack 0
   228  000009                     	ds	2
   229  00000B                     _PWMValue:
   230                           	opt stack 0
   231  00000B                     	ds	2
   232  00000D                     _counts:
   233                           	opt stack 0
   234  00000D                     	ds	2
   235  00000F                     _lasttime:
   236                           	opt stack 0
   237  00000F                     	ds	2
   238  000011                     _DecimalHumidity:
   239                           	opt stack 0
   240  000011                     	ds	1
   241  000012                     _DecimalTemperature:
   242                           	opt stack 0
   243  000012                     	ds	1
   244  000013                     _IntegerHumidity:
   245                           	opt stack 0
   246  000013                     	ds	1
   247  000014                     _IntegerTemperature:
   248                           	opt stack 0
   249  000014                     	ds	1
   250  000015                     _TimerCounter:
   251                           	opt stack 0
   252  000015                     	ds	1
   253  000016                     _bitcount:
   254                           	opt stack 0
   255  000016                     	ds	1
   256  000017                     _bytecount:
   257                           	opt stack 0
   258  000017                     	ds	1
   259  000018                     _counter:
   260                           	opt stack 0
   261  000018                     	ds	1
   262  000019                     _f_frameready:
   263                           	opt stack 0
   264  000019                     	ds	1
   265  00001A                     _f_slave1:
   266                           	opt stack 0
   267  00001A                     	ds	1
   268  00001B                     _f_slave2:
   269                           	opt stack 0
   270  00001B                     	ds	1
   271  00001C                     _firstvalue:
   272                           	opt stack 0
   273  00001C                     	ds	1
   274  00001D                     _firstvaluespaces:
   275                           	opt stack 0
   276  00001D                     	ds	1
   277  00001E                     _frame:
   278                           	opt stack 0
   279  00001E                     	ds	1
   280  00001F                     _mask:
   281                           	opt stack 0
   282  00001F                     	ds	1
   283  000020                     _secondvalue:
   284                           	opt stack 0
   285  000020                     	ds	1
   286  000021                     _secondvaluespaces:
   287                           	opt stack 0
   288  000021                     	ds	1
   289  000022                     _state:
   290                           	opt stack 0
   291  000022                     	ds	1
   292  000023                     _time:
   293                           	opt stack 0
   294  000023                     	ds	1
   295                           tblptru	equ	0xFF8
   296                           tblptrh	equ	0xFF7
   297                           tblptrl	equ	0xFF6
   298                           tablat	equ	0xFF5
   299                           postinc0	equ	0xFEE
   300                           wreg	equ	0xFE8
   301                           postdec1	equ	0xFE5
   302                           fsr1l	equ	0xFE1
   303                           
   304                           	psect	dataCOMRAM
   305  000044                     __pdataCOMRAM:
   306                           	opt stack 0
   307  000044                     _DHT_StateMachine:
   308                           	opt stack 0
   309  000044                     	ds	10
   310  00004E                     _firstbyte:
   311                           	opt stack 0
   312  00004E                     	ds	3
   313  000051                     _endbyte:
   314                           	opt stack 0
   315  000051                     	ds	1
   316  000052                     _prescaler:
   317                           	opt stack 0
   318  000052                     	ds	1
   319  000053                     _splitbyte:
   320                           	opt stack 0
   321  000053                     	ds	1
   322                           tblptru	equ	0xFF8
   323                           tblptrh	equ	0xFF7
   324                           tblptrl	equ	0xFF6
   325                           tablat	equ	0xFF5
   326                           postinc0	equ	0xFEE
   327                           wreg	equ	0xFE8
   328                           postdec1	equ	0xFE5
   329                           fsr1l	equ	0xFE1
   330                           
   331                           	psect	bssBANK0
   332  000060                     __pbssBANK0:
   333                           	opt stack 0
   334  000060                     _times:
   335                           	opt stack 0
   336  000060                     	ds	80
   337                           tblptru	equ	0xFF8
   338                           tblptrh	equ	0xFF7
   339                           tblptrl	equ	0xFF6
   340                           tablat	equ	0xFF5
   341                           postinc0	equ	0xFEE
   342                           wreg	equ	0xFE8
   343                           postdec1	equ	0xFE5
   344                           fsr1l	equ	0xFE1
   345                           
   346                           	psect	cstackBANK0
   347  0000B0                     __pcstackBANK0:
   348                           	opt stack 0
   349  0000B0                     TMR0_INIT@bits:
   350                           	opt stack 0
   351  0000B0                     TMR0_WRITE_HIGH@valorHigh:
   352                           	opt stack 0
   353  0000B0                     TMR0_WRITE_LOW@valorLow:
   354                           	opt stack 0
   355                           
   356                           ; 1 bytes @ 0x0
   357  0000B0                     	ds	1
   358  0000B1                     TMR0_INIT@T0PS:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0x1
   362  0000B1                     	ds	1
   363  0000B2                     tblptru	equ	0xFF8
   364                           tblptrh	equ	0xFF7
   365                           tblptrl	equ	0xFF6
   366                           tablat	equ	0xFF5
   367                           postinc0	equ	0xFEE
   368                           wreg	equ	0xFE8
   369                           postdec1	equ	0xFE5
   370                           fsr1l	equ	0xFE1
   371                           
   372                           ; 1 bytes @ 0x2
   373                           
   374                           	psect	cstackCOMRAM
   375  000024                     __pcstackCOMRAM:
   376                           	opt stack 0
   377  000024                     ??_RecievingData:
   378  000024                     ?___wmul:
   379                           	opt stack 0
   380  000024                     i2TMR0_WRITE_HIGH@valorHigh:
   381                           	opt stack 0
   382  000024                     i2TMR0_WRITE_LOW@valorLow:
   383                           	opt stack 0
   384  000024                     ___wmul@multiplier:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0x0
   388  000024                     	ds	2
   389  000026                     ___wmul@multiplicand:
   390                           	opt stack 0
   391                           
   392                           ; 2 bytes @ 0x2
   393  000026                     	ds	2
   394  000028                     ___wmul@product:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x4
   398  000028                     	ds	2
   399  00002A                     ?___awdiv:
   400                           	opt stack 0
   401  00002A                     ___awdiv@dividend:
   402                           	opt stack 0
   403                           
   404                           ; 2 bytes @ 0x6
   405  00002A                     	ds	2
   406  00002C                     ___awdiv@divisor:
   407                           	opt stack 0
   408                           
   409                           ; 2 bytes @ 0x8
   410  00002C                     	ds	2
   411  00002E                     ___awdiv@counter:
   412                           	opt stack 0
   413                           
   414                           ; 1 bytes @ 0xA
   415  00002E                     	ds	1
   416  00002F                     ___awdiv@sign:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0xB
   420  00002F                     	ds	1
   421  000030                     ___awdiv@quotient:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0xC
   425  000030                     	ds	2
   426  000032                     ??_SetDutyCycle:
   427                           
   428                           ; 1 bytes @ 0xE
   429  000032                     	ds	2
   430  000034                     SetDutyCycle@dutycycle:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x10
   434  000034                     	ds	1
   435  000035                     SetPWM@dutycycle:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0x11
   439  000035                     	ds	1
   440  000036                     ??_HighISR:
   441                           
   442                           ; 1 bytes @ 0x12
   443  000036                     	ds	14
   444                           tblptru	equ	0xFF8
   445                           tblptrh	equ	0xFF7
   446                           tblptrl	equ	0xFF6
   447                           tablat	equ	0xFF5
   448                           postinc0	equ	0xFEE
   449                           wreg	equ	0xFE8
   450                           postdec1	equ	0xFE5
   451                           fsr1l	equ	0xFE1
   452                           
   453 ;;
   454 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   455 ;;
   456 ;; *************** function _main *****************
   457 ;; Defined at:
   458 ;;		line 76 in file "Main.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;		None
   463 ;; Return value:  Size  Location     Type
   464 ;;                  1    wreg      void 
   465 ;; Registers used:
   466 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   472 ;;      Params:         0       0       0       0       0       0       0       0       0
   473 ;;      Locals:         0       0       0       0       0       0       0       0       0
   474 ;;      Temps:          0       0       0       0       0       0       0       0       0
   475 ;;      Totals:         0       0       0       0       0       0       0       0       0
   476 ;;Total ram usage:        0 bytes
   477 ;; Hardware stack levels required when called:    7
   478 ;; This function calls:
   479 ;;		_InitDHT11Driver
   480 ;;		_Interrupt_Init
   481 ;;		_TMR0_INIT
   482 ;;		_TMR0_WRITE_HIGH
   483 ;;		_TMR0_WRITE_LOW
   484 ;; This function is called by:
   485 ;;		Startup code after reset
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	text0
   490  000B4A                     __ptext0:
   491                           	opt stack 0
   492  000B4A                     _main:
   493                           	opt stack 24
   494                           
   495                           ;Main.c: 78: OSCCON=0b01101100;
   496                           
   497                           ;incstack = 0
   498  000B4A  0E6C               	movlw	108
   499  000B4C  6ED3               	movwf	4051,c	;volatile
   500                           
   501                           ;Main.c: 79: Interrupt_Init();
   502  000B4E  ECB6  F005         	call	_Interrupt_Init	;wreg free
   503                           
   504                           ;Main.c: 81: TMR0_INIT();
   505  000B52  EC7E  F005         	call	_TMR0_INIT	;wreg free
   506                           
   507                           ;Main.c: 82: TMR0ON = 0;
   508  000B56  9ED5               	bcf	4053,7,c	;volatile
   509                           
   510                           ;Main.c: 83: TMR0_WRITE_HIGH(0xF0);
   511  000B58  0EF0               	movlw	240
   512  000B5A  EC24  F006         	call	_TMR0_WRITE_HIGH
   513                           
   514                           ;Main.c: 84: TMR0_WRITE_LOW(0xBD);
   515  000B5E  0EBD               	movlw	189
   516  000B60  EC1F  F006         	call	_TMR0_WRITE_LOW
   517                           
   518                           ;Main.c: 85: TMR0ON = 1;
   519  000B64  8ED5               	bsf	4053,7,c	;volatile
   520                           
   521                           ;Main.c: 87: InitDHT11Driver();
   522  000B66  EC2E  F006         	call	_InitDHT11Driver	;wreg free
   523  000B6A                     l92:
   524  000B6A  D7FF               	goto	l92
   525  000B6C                     __end_of_main:
   526                           	opt stack 0
   527                           tblptru	equ	0xFF8
   528                           tblptrh	equ	0xFF7
   529                           tblptrl	equ	0xFF6
   530                           tablat	equ	0xFF5
   531                           postinc0	equ	0xFEE
   532                           wreg	equ	0xFE8
   533                           postdec1	equ	0xFE5
   534                           fsr1l	equ	0xFE1
   535                           
   536 ;; *************** function _TMR0_WRITE_LOW *****************
   537 ;; Defined at:
   538 ;;		line 79 in file "Timer_0.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;  valorLow        1    wreg     unsigned char 
   541 ;; Auto vars:     Size  Location     Type
   542 ;;  valorLow        1    0[BANK0 ] unsigned char 
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   552 ;;      Params:         0       0       0       0       0       0       0       0       0
   553 ;;      Locals:         0       1       0       0       0       0       0       0       0
   554 ;;      Temps:          0       0       0       0       0       0       0       0       0
   555 ;;      Totals:         0       1       0       0       0       0       0       0       0
   556 ;;Total ram usage:        1 bytes
   557 ;; Hardware stack levels used:    1
   558 ;; Hardware stack levels required when called:    5
   559 ;; This function calls:
   560 ;;		Nothing
   561 ;; This function is called by:
   562 ;;		_main
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	text1
   567  000C3E                     __ptext1:
   568                           	opt stack 0
   569  000C3E                     _TMR0_WRITE_LOW:
   570                           	opt stack 25
   571                           
   572                           ;incstack = 0
   573                           ;TMR0_WRITE_LOW@valorLow stored from wreg
   574  000C3E  0100               	movlb	0	; () banked
   575  000C40  6FB0               	movwf	TMR0_WRITE_LOW@valorLow& (0+255),b
   576                           
   577                           ;Timer_0.c: 81: TMR0L=valorLow;
   578  000C42  C0B0  FFD6         	movff	TMR0_WRITE_LOW@valorLow,4054	;volatile
   579  000C46  0012               	return		;funcret
   580  000C48                     __end_of_TMR0_WRITE_LOW:
   581                           	opt stack 0
   582                           tblptru	equ	0xFF8
   583                           tblptrh	equ	0xFF7
   584                           tblptrl	equ	0xFF6
   585                           tablat	equ	0xFF5
   586                           postinc0	equ	0xFEE
   587                           wreg	equ	0xFE8
   588                           postdec1	equ	0xFE5
   589                           fsr1l	equ	0xFE1
   590                           
   591 ;; *************** function _TMR0_WRITE_HIGH *****************
   592 ;; Defined at:
   593 ;;		line 66 in file "Timer_0.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;  valorHigh       1    wreg     unsigned char 
   596 ;; Auto vars:     Size  Location     Type
   597 ;;  valorHigh       1    0[BANK0 ] unsigned char 
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   607 ;;      Params:         0       0       0       0       0       0       0       0       0
   608 ;;      Locals:         0       1       0       0       0       0       0       0       0
   609 ;;      Temps:          0       0       0       0       0       0       0       0       0
   610 ;;      Totals:         0       1       0       0       0       0       0       0       0
   611 ;;Total ram usage:        1 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; Hardware stack levels required when called:    5
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		_main
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           	psect	text2
   622  000C48                     __ptext2:
   623                           	opt stack 0
   624  000C48                     _TMR0_WRITE_HIGH:
   625                           	opt stack 25
   626                           
   627                           ;incstack = 0
   628                           ;TMR0_WRITE_HIGH@valorHigh stored from wreg
   629  000C48  0100               	movlb	0	; () banked
   630  000C4A  6FB0               	movwf	TMR0_WRITE_HIGH@valorHigh& (0+255),b
   631                           
   632                           ;Timer_0.c: 68: TMR0H=valorHigh;
   633  000C4C  C0B0  FFD7         	movff	TMR0_WRITE_HIGH@valorHigh,4055	;volatile
   634  000C50  0012               	return		;funcret
   635  000C52                     __end_of_TMR0_WRITE_HIGH:
   636                           	opt stack 0
   637                           tblptru	equ	0xFF8
   638                           tblptrh	equ	0xFF7
   639                           tblptrl	equ	0xFF6
   640                           tablat	equ	0xFF5
   641                           postinc0	equ	0xFEE
   642                           wreg	equ	0xFE8
   643                           postdec1	equ	0xFE5
   644                           fsr1l	equ	0xFE1
   645                           
   646 ;; *************** function _TMR0_INIT *****************
   647 ;; Defined at:
   648 ;;		line 23 in file "Timer_0.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;		None
   651 ;; Auto vars:     Size  Location     Type
   652 ;;  T0PS            1    1[BANK0 ] unsigned char 
   653 ;;  bits            1    0[BANK0 ] unsigned char 
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg, status,2, status,0, prodl, prodh
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   663 ;;      Params:         0       0       0       0       0       0       0       0       0
   664 ;;      Locals:         0       2       0       0       0       0       0       0       0
   665 ;;      Temps:          0       0       0       0       0       0       0       0       0
   666 ;;      Totals:         0       2       0       0       0       0       0       0       0
   667 ;;Total ram usage:        2 bytes
   668 ;; Hardware stack levels used:    1
   669 ;; Hardware stack levels required when called:    5
   670 ;; This function calls:
   671 ;;		Nothing
   672 ;; This function is called by:
   673 ;;		_main
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           	psect	text3
   678  000AFC                     __ptext3:
   679                           	opt stack 0
   680  000AFC                     _TMR0_INIT:
   681                           	opt stack 25
   682                           
   683                           ;Timer_0.c: 33: else {T0PS=7;}
   684                           
   685                           ; BSR set to: 0
   686                           
   687                           ; BSR set to: 0
   688                           
   689                           ; BSR set to: 0
   690                           ;Timer_0.c: 32: else if (256 == 128){T0PS=6;}
   691                           
   692                           ; BSR set to: 0
   693                           
   694                           ; BSR set to: 0
   695                           ;Timer_0.c: 31: else if (256 == 64){T0PS=5;}
   696                           
   697                           ; BSR set to: 0
   698                           
   699                           ; BSR set to: 0
   700                           ;Timer_0.c: 30: else if (256 == 32){T0PS=4;}
   701                           
   702                           ; BSR set to: 0
   703                           
   704                           ; BSR set to: 0
   705                           ;Timer_0.c: 29: else if (256 == 16){T0PS=3;}
   706                           
   707                           ; BSR set to: 0
   708                           
   709                           ; BSR set to: 0
   710                           ;Timer_0.c: 28: else if (256 == 8){T0PS=2;}
   711                           
   712                           ; BSR set to: 0
   713                           
   714                           ; BSR set to: 0
   715                           ;Timer_0.c: 27: else if (256 == 4){T0PS=1;}
   716                           
   717                           ;Timer_0.c: 25: u8 T0PS;
   718                           ;Timer_0.c: 26: if (256 == 2){T0PS=0;}
   719                           
   720                           ;incstack = 0
   721  000AFC  0E07               	movlw	7
   722  000AFE  0100               	movlb	0	; () banked
   723  000B00  6FB1               	movwf	TMR0_INIT@T0PS& (0+255),b
   724                           
   725                           ; BSR set to: 0
   726                           ;Timer_0.c: 37: else {bits=0;}
   727                           
   728                           ; BSR set to: 0
   729                           
   730                           ; BSR set to: 0
   731                           
   732                           ; BSR set to: 0
   733                           ;Timer_0.c: 35: u8 bits;
   734                           ;Timer_0.c: 36: if (16==8){bits=1;}
   735                           
   736                           ; BSR set to: 0
   737                           
   738                           ; BSR set to: 0
   739                           
   740                           ; BSR set to: 0
   741                           
   742                           ; BSR set to: 0
   743                           
   744                           ; BSR set to: 0
   745                           
   746                           ; BSR set to: 0
   747  000B02  0E00               	movlw	0
   748  000B04  0100               	movlb	0	; () banked
   749  000B06  6FB0               	movwf	TMR0_INIT@bits& (0+255),b
   750                           
   751                           ; BSR set to: 0
   752                           ;Timer_0.c: 39: T0CON=(1*128)+(bits*64)+(0*32)+(0*16)+(0*8)+T0PS;
   753                           
   754                           ; BSR set to: 0
   755  000B08  0100               	movlb	0	; () banked
   756  000B0A  51B0               	movf	TMR0_INIT@bits& (0+255),w,b
   757  000B0C  0D40               	mullw	64
   758  000B0E  50F3               	movf	prodl,w,c
   759  000B10  0100               	movlb	0	; () banked
   760  000B12  25B1               	addwf	TMR0_INIT@T0PS& (0+255),w,b
   761  000B14  0F80               	addlw	128
   762  000B16  6ED5               	movwf	4053,c	;volatile
   763                           
   764                           ; BSR set to: 0
   765                           ;Timer_0.c: 41: TMR0=0x15;
   766  000B18  0E00               	movlw	0
   767  000B1A  6ED7               	movwf	4055,c	;volatile
   768  000B1C  0E15               	movlw	21
   769  000B1E  6ED6               	movwf	4054,c	;volatile
   770                           
   771                           ; BSR set to: 0
   772                           ;Timer_0.c: 42: T0IF=0;
   773  000B20  94F2               	bcf	intcon,2,c	;volatile
   774                           
   775                           ; BSR set to: 0
   776  000B22  0012               	return		;funcret
   777  000B24                     __end_of_TMR0_INIT:
   778                           	opt stack 0
   779                           tblptru	equ	0xFF8
   780                           tblptrh	equ	0xFF7
   781                           tblptrl	equ	0xFF6
   782                           tablat	equ	0xFF5
   783                           prodl	equ	0xFF3
   784                           intcon	equ	0xFF2
   785                           postinc0	equ	0xFEE
   786                           wreg	equ	0xFE8
   787                           postdec1	equ	0xFE5
   788                           fsr1l	equ	0xFE1
   789                           
   790 ;; *************** function _Interrupt_Init *****************
   791 ;; Defined at:
   792 ;;		line 94 in file "Interrupts.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		cstack
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   806 ;;      Params:         0       0       0       0       0       0       0       0       0
   807 ;;      Locals:         0       0       0       0       0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0       0       0       0       0
   809 ;;      Totals:         0       0       0       0       0       0       0       0       0
   810 ;;Total ram usage:        0 bytes
   811 ;; Hardware stack levels used:    1
   812 ;; Hardware stack levels required when called:    6
   813 ;; This function calls:
   814 ;;		_INIT_INTCON
   815 ;;		_INIT_INTCON2
   816 ;;		_INIT_INTCON3
   817 ;;		_INIT_IPR1
   818 ;;		_INIT_IPR2
   819 ;;		_INIT_PIE1
   820 ;;		_INIT_PIE2
   821 ;;		_INIT_RCON
   822 ;; This function is called by:
   823 ;;		_main
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	text4
   828  000B6C                     __ptext4:
   829                           	opt stack 0
   830  000B6C                     _Interrupt_Init:
   831                           	opt stack 24
   832                           
   833                           ;Interrupts.c: 95: INIT_RCON();
   834                           
   835                           ; BSR set to: 0
   836                           ;incstack = 0
   837  000B6C  EC4A  F006         	call	_INIT_RCON	;wreg free
   838                           
   839                           ;Interrupts.c: 96: INIT_INTCON();
   840  000B70  EC0D  F006         	call	_INIT_INTCON	;wreg free
   841                           
   842                           ;Interrupts.c: 97: INIT_INTCON2();
   843  000B74  EC06  F006         	call	_INIT_INTCON2	;wreg free
   844                           
   845                           ;Interrupts.c: 98: INIT_INTCON3();
   846  000B78  EC29  F006         	call	_INIT_INTCON3	;wreg free
   847                           
   848                           ;Interrupts.c: 99: INIT_PIE1();
   849  000B7C  ECE8  F005         	call	_INIT_PIE1	;wreg free
   850                           
   851                           ;Interrupts.c: 100: INIT_PIE2();
   852  000B80  ECF8  F005         	call	_INIT_PIE2	;wreg free
   853                           
   854                           ;Interrupts.c: 101: INIT_IPR1();
   855  000B84  ECF0  F005         	call	_INIT_IPR1	;wreg free
   856                           
   857                           ;Interrupts.c: 102: INIT_IPR2();
   858  000B88  ECFF  F005         	call	_INIT_IPR2	;wreg free
   859  000B8C  0012               	return		;funcret
   860  000B8E                     __end_of_Interrupt_Init:
   861                           	opt stack 0
   862                           tblptru	equ	0xFF8
   863                           tblptrh	equ	0xFF7
   864                           tblptrl	equ	0xFF6
   865                           tablat	equ	0xFF5
   866                           prodl	equ	0xFF3
   867                           intcon	equ	0xFF2
   868                           postinc0	equ	0xFEE
   869                           wreg	equ	0xFE8
   870                           postdec1	equ	0xFE5
   871                           fsr1l	equ	0xFE1
   872                           
   873 ;; *************** function _INIT_RCON *****************
   874 ;; Defined at:
   875 ;;		line 47 in file "Interrupts.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;		None
   878 ;; Auto vars:     Size  Location     Type
   879 ;;		None
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		None
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   889 ;;      Params:         0       0       0       0       0       0       0       0       0
   890 ;;      Locals:         0       0       0       0       0       0       0       0       0
   891 ;;      Temps:          0       0       0       0       0       0       0       0       0
   892 ;;      Totals:         0       0       0       0       0       0       0       0       0
   893 ;;Total ram usage:        0 bytes
   894 ;; Hardware stack levels used:    1
   895 ;; Hardware stack levels required when called:    5
   896 ;; This function calls:
   897 ;;		Nothing
   898 ;; This function is called by:
   899 ;;		_Interrupt_Init
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text5
   904  000C94                     __ptext5:
   905                           	opt stack 0
   906  000C94                     _INIT_RCON:
   907                           	opt stack 24
   908                           
   909                           ;Interrupts.c: 49: RCONbits.IPEN = 1U;
   910                           
   911                           ;incstack = 0
   912  000C94  8ED0               	bsf	4048,7,c	;volatile
   913  000C96  0012               	return		;funcret
   914  000C98                     __end_of_INIT_RCON:
   915                           	opt stack 0
   916                           tblptru	equ	0xFF8
   917                           tblptrh	equ	0xFF7
   918                           tblptrl	equ	0xFF6
   919                           tablat	equ	0xFF5
   920                           prodl	equ	0xFF3
   921                           intcon	equ	0xFF2
   922                           postinc0	equ	0xFEE
   923                           wreg	equ	0xFE8
   924                           postdec1	equ	0xFE5
   925                           fsr1l	equ	0xFE1
   926                           
   927 ;; *************** function _INIT_PIE2 *****************
   928 ;; Defined at:
   929 ;;		line 63 in file "Interrupts.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;		None
   932 ;; Auto vars:     Size  Location     Type
   933 ;;		None
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      void 
   936 ;; Registers used:
   937 ;;		None
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   943 ;;      Params:         0       0       0       0       0       0       0       0       0
   944 ;;      Locals:         0       0       0       0       0       0       0       0       0
   945 ;;      Temps:          0       0       0       0       0       0       0       0       0
   946 ;;      Totals:         0       0       0       0       0       0       0       0       0
   947 ;;Total ram usage:        0 bytes
   948 ;; Hardware stack levels used:    1
   949 ;; Hardware stack levels required when called:    5
   950 ;; This function calls:
   951 ;;		Nothing
   952 ;; This function is called by:
   953 ;;		_Interrupt_Init
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text6
   958  000BF0                     __ptext6:
   959                           	opt stack 0
   960  000BF0                     _INIT_PIE2:
   961                           	opt stack 24
   962                           
   963                           ;Interrupts.c: 65: PIE2bits.OSCFIE=0U;
   964                           
   965                           ;incstack = 0
   966  000BF0  9EA0               	bcf	4000,7,c	;volatile
   967                           
   968                           ;Interrupts.c: 66: PIE2bits.CMIE=0U;
   969  000BF2  9CA0               	bcf	4000,6,c	;volatile
   970                           
   971                           ;Interrupts.c: 67: PIE2bits.EEIE=0U;
   972  000BF4  98A0               	bcf	4000,4,c	;volatile
   973                           
   974                           ;Interrupts.c: 68: PIE2bits.HLVDIE=0U;
   975  000BF6  94A0               	bcf	4000,2,c	;volatile
   976                           
   977                           ;Interrupts.c: 69: PIE2bits.BCLIE=0U;
   978  000BF8  96A0               	bcf	4000,3,c	;volatile
   979                           
   980                           ;Interrupts.c: 70: PIE2bits.TMR3IE=0U;
   981  000BFA  92A0               	bcf	4000,1,c	;volatile
   982  000BFC  0012               	return		;funcret
   983  000BFE                     __end_of_INIT_PIE2:
   984                           	opt stack 0
   985                           tblptru	equ	0xFF8
   986                           tblptrh	equ	0xFF7
   987                           tblptrl	equ	0xFF6
   988                           tablat	equ	0xFF5
   989                           prodl	equ	0xFF3
   990                           intcon	equ	0xFF2
   991                           postinc0	equ	0xFEE
   992                           wreg	equ	0xFE8
   993                           postdec1	equ	0xFE5
   994                           fsr1l	equ	0xFE1
   995                           
   996 ;; *************** function _INIT_PIE1 *****************
   997 ;; Defined at:
   998 ;;		line 52 in file "Interrupts.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;		None
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;		None
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		None
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1012 ;;      Params:         0       0       0       0       0       0       0       0       0
  1013 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1015 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1016 ;;Total ram usage:        0 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; Hardware stack levels required when called:    5
  1019 ;; This function calls:
  1020 ;;		Nothing
  1021 ;; This function is called by:
  1022 ;;		_Interrupt_Init
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           	psect	text7
  1027  000BD0                     __ptext7:
  1028                           	opt stack 0
  1029  000BD0                     _INIT_PIE1:
  1030                           	opt stack 24
  1031                           
  1032                           ;Interrupts.c: 54: PIE1bits.ADIE = 1U;
  1033                           
  1034                           ;incstack = 0
  1035  000BD0  8C9D               	bsf	3997,6,c	;volatile
  1036                           
  1037                           ;Interrupts.c: 55: PIE1bits.RCIE = 0U;
  1038  000BD2  9A9D               	bcf	3997,5,c	;volatile
  1039                           
  1040                           ;Interrupts.c: 56: PIE1bits.TXIE = 0U;
  1041  000BD4  989D               	bcf	3997,4,c	;volatile
  1042                           
  1043                           ;Interrupts.c: 57: PIE1bits.SSPIE = 0U;
  1044  000BD6  969D               	bcf	3997,3,c	;volatile
  1045                           
  1046                           ;Interrupts.c: 58: PIE1bits.CCP1IE = 0U;
  1047  000BD8  949D               	bcf	3997,2,c	;volatile
  1048                           
  1049                           ;Interrupts.c: 59: PIE1bits.TMR2IE = 0U;
  1050  000BDA  929D               	bcf	3997,1,c	;volatile
  1051                           
  1052                           ;Interrupts.c: 60: PIE1bits.TMR1IE = 0U;
  1053  000BDC  909D               	bcf	3997,0,c	;volatile
  1054  000BDE  0012               	return		;funcret
  1055  000BE0                     __end_of_INIT_PIE1:
  1056                           	opt stack 0
  1057                           tblptru	equ	0xFF8
  1058                           tblptrh	equ	0xFF7
  1059                           tblptrl	equ	0xFF6
  1060                           tablat	equ	0xFF5
  1061                           prodl	equ	0xFF3
  1062                           intcon	equ	0xFF2
  1063                           postinc0	equ	0xFEE
  1064                           wreg	equ	0xFE8
  1065                           postdec1	equ	0xFE5
  1066                           fsr1l	equ	0xFE1
  1067                           
  1068 ;; *************** function _INIT_IPR2 *****************
  1069 ;; Defined at:
  1070 ;;		line 84 in file "Interrupts.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;		None
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      void 
  1077 ;; Registers used:
  1078 ;;		None
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1084 ;;      Params:         0       0       0       0       0       0       0       0       0
  1085 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1086 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1087 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1088 ;;Total ram usage:        0 bytes
  1089 ;; Hardware stack levels used:    1
  1090 ;; Hardware stack levels required when called:    5
  1091 ;; This function calls:
  1092 ;;		Nothing
  1093 ;; This function is called by:
  1094 ;;		_Interrupt_Init
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text8
  1099  000BFE                     __ptext8:
  1100                           	opt stack 0
  1101  000BFE                     _INIT_IPR2:
  1102                           	opt stack 24
  1103                           
  1104                           ;Interrupts.c: 85: IPR2bits.OSCFIP=0U;
  1105                           
  1106                           ;incstack = 0
  1107  000BFE  9EA2               	bcf	4002,7,c	;volatile
  1108                           
  1109                           ;Interrupts.c: 86: IPR2bits.CMIP=0U;
  1110  000C00  9CA2               	bcf	4002,6,c	;volatile
  1111                           
  1112                           ;Interrupts.c: 87: IPR2bits.EEIP=0U;
  1113  000C02  98A2               	bcf	4002,4,c	;volatile
  1114                           
  1115                           ;Interrupts.c: 88: IPR2bits.HLVDIP=0U;
  1116  000C04  94A2               	bcf	4002,2,c	;volatile
  1117                           
  1118                           ;Interrupts.c: 89: IPR2bits.BCLIP=0U;
  1119  000C06  96A2               	bcf	4002,3,c	;volatile
  1120                           
  1121                           ;Interrupts.c: 90: IPR2bits.TMR3IP=0U;
  1122  000C08  92A2               	bcf	4002,1,c	;volatile
  1123  000C0A  0012               	return		;funcret
  1124  000C0C                     __end_of_INIT_IPR2:
  1125                           	opt stack 0
  1126                           tblptru	equ	0xFF8
  1127                           tblptrh	equ	0xFF7
  1128                           tblptrl	equ	0xFF6
  1129                           tablat	equ	0xFF5
  1130                           prodl	equ	0xFF3
  1131                           intcon	equ	0xFF2
  1132                           postinc0	equ	0xFEE
  1133                           wreg	equ	0xFE8
  1134                           postdec1	equ	0xFE5
  1135                           fsr1l	equ	0xFE1
  1136                           
  1137 ;; *************** function _INIT_IPR1 *****************
  1138 ;; Defined at:
  1139 ;;		line 74 in file "Interrupts.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;		None
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;		None
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  1    wreg      void 
  1146 ;; Registers used:
  1147 ;;		None
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1153 ;;      Params:         0       0       0       0       0       0       0       0       0
  1154 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1156 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1157 ;;Total ram usage:        0 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:    5
  1160 ;; This function calls:
  1161 ;;		Nothing
  1162 ;; This function is called by:
  1163 ;;		_Interrupt_Init
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text9
  1168  000BE0                     __ptext9:
  1169                           	opt stack 0
  1170  000BE0                     _INIT_IPR1:
  1171                           	opt stack 24
  1172                           
  1173                           ;Interrupts.c: 75: IPR1bits.ADIP=1U;
  1174                           
  1175                           ;incstack = 0
  1176  000BE0  8C9F               	bsf	3999,6,c	;volatile
  1177                           
  1178                           ;Interrupts.c: 76: IPR1bits.RCIP=0U;
  1179  000BE2  9A9F               	bcf	3999,5,c	;volatile
  1180                           
  1181                           ;Interrupts.c: 77: IPR1bits.TXIP=0U;
  1182  000BE4  989F               	bcf	3999,4,c	;volatile
  1183                           
  1184                           ;Interrupts.c: 78: IPR1bits.SSPIP=0U;
  1185  000BE6  969F               	bcf	3999,3,c	;volatile
  1186                           
  1187                           ;Interrupts.c: 79: IPR1bits.CCP1IP=1U;
  1188  000BE8  849F               	bsf	3999,2,c	;volatile
  1189                           
  1190                           ;Interrupts.c: 80: IPR1bits.TMR2IP=0U;
  1191  000BEA  929F               	bcf	3999,1,c	;volatile
  1192                           
  1193                           ;Interrupts.c: 81: IPR1bits.TMR1IP=0U;
  1194  000BEC  909F               	bcf	3999,0,c	;volatile
  1195  000BEE  0012               	return		;funcret
  1196  000BF0                     __end_of_INIT_IPR1:
  1197                           	opt stack 0
  1198                           tblptru	equ	0xFF8
  1199                           tblptrh	equ	0xFF7
  1200                           tblptrl	equ	0xFF6
  1201                           tablat	equ	0xFF5
  1202                           prodl	equ	0xFF3
  1203                           intcon	equ	0xFF2
  1204                           postinc0	equ	0xFEE
  1205                           wreg	equ	0xFE8
  1206                           postdec1	equ	0xFE5
  1207                           fsr1l	equ	0xFE1
  1208                           
  1209 ;; *************** function _INIT_INTCON3 *****************
  1210 ;; Defined at:
  1211 ;;		line 39 in file "Interrupts.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;		None
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;		None
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		None
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1225 ;;      Params:         0       0       0       0       0       0       0       0       0
  1226 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1227 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1228 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1229 ;;Total ram usage:        0 bytes
  1230 ;; Hardware stack levels used:    1
  1231 ;; Hardware stack levels required when called:    5
  1232 ;; This function calls:
  1233 ;;		Nothing
  1234 ;; This function is called by:
  1235 ;;		_Interrupt_Init
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           	psect	text10
  1240  000C52                     __ptext10:
  1241                           	opt stack 0
  1242  000C52                     _INIT_INTCON3:
  1243                           	opt stack 24
  1244                           
  1245                           ;Interrupts.c: 40: INTCON3bits.INT2IP=1U;
  1246                           
  1247                           ;incstack = 0
  1248  000C52  8EF0               	bsf	intcon3,7,c	;volatile
  1249                           
  1250                           ;Interrupts.c: 41: INTCON3bits.INT1IP=0U;
  1251  000C54  9CF0               	bcf	intcon3,6,c	;volatile
  1252                           
  1253                           ;Interrupts.c: 43: INTCON3bits.INT2IE=1U;
  1254  000C56  88F0               	bsf	intcon3,4,c	;volatile
  1255                           
  1256                           ;Interrupts.c: 44: INTCON3bits.INT1IE=0U;
  1257  000C58  96F0               	bcf	intcon3,3,c	;volatile
  1258  000C5A  0012               	return		;funcret
  1259  000C5C                     __end_of_INIT_INTCON3:
  1260                           	opt stack 0
  1261                           tblptru	equ	0xFF8
  1262                           tblptrh	equ	0xFF7
  1263                           tblptrl	equ	0xFF6
  1264                           tablat	equ	0xFF5
  1265                           prodl	equ	0xFF3
  1266                           intcon	equ	0xFF2
  1267                           intcon3	equ	0xFF0
  1268                           postinc0	equ	0xFEE
  1269                           wreg	equ	0xFE8
  1270                           postdec1	equ	0xFE5
  1271                           fsr1l	equ	0xFE1
  1272                           
  1273 ;; *************** function _INIT_INTCON2 *****************
  1274 ;; Defined at:
  1275 ;;		line 28 in file "Interrupts.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;		None
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;		None
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      void 
  1282 ;; Registers used:
  1283 ;;		None
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1289 ;;      Params:         0       0       0       0       0       0       0       0       0
  1290 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1291 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1292 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1293 ;;Total ram usage:        0 bytes
  1294 ;; Hardware stack levels used:    1
  1295 ;; Hardware stack levels required when called:    5
  1296 ;; This function calls:
  1297 ;;		Nothing
  1298 ;; This function is called by:
  1299 ;;		_Interrupt_Init
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           	psect	text11
  1304  000C0C                     __ptext11:
  1305                           	opt stack 0
  1306  000C0C                     _INIT_INTCON2:
  1307                           	opt stack 24
  1308                           
  1309                           ;Interrupts.c: 29: INTCON2bits.nRBPU=0U;
  1310                           
  1311                           ;incstack = 0
  1312  000C0C  9EF1               	bcf	intcon2,7,c	;volatile
  1313                           
  1314                           ;Interrupts.c: 30: INTCON2bits.INTEDG0=0U;
  1315  000C0E  9CF1               	bcf	intcon2,6,c	;volatile
  1316                           
  1317                           ;Interrupts.c: 31: INTCON2bits.INTEDG1=0U;
  1318  000C10  9AF1               	bcf	intcon2,5,c	;volatile
  1319                           
  1320                           ;Interrupts.c: 32: INTCON2bits.INTEDG2=1U;
  1321  000C12  88F1               	bsf	intcon2,4,c	;volatile
  1322                           
  1323                           ;Interrupts.c: 34: INTCON2bits.T0IP=1U;
  1324  000C14  84F1               	bsf	intcon2,2,c	;volatile
  1325                           
  1326                           ;Interrupts.c: 36: INTCON2bits.RBIP=0U;
  1327  000C16  90F1               	bcf	intcon2,0,c	;volatile
  1328  000C18  0012               	return		;funcret
  1329  000C1A                     __end_of_INIT_INTCON2:
  1330                           	opt stack 0
  1331                           tblptru	equ	0xFF8
  1332                           tblptrh	equ	0xFF7
  1333                           tblptrl	equ	0xFF6
  1334                           tablat	equ	0xFF5
  1335                           prodl	equ	0xFF3
  1336                           intcon	equ	0xFF2
  1337                           intcon2	equ	0xFF1
  1338                           intcon3	equ	0xFF0
  1339                           postinc0	equ	0xFEE
  1340                           wreg	equ	0xFE8
  1341                           postdec1	equ	0xFE5
  1342                           fsr1l	equ	0xFE1
  1343                           
  1344 ;; *************** function _INIT_INTCON *****************
  1345 ;; Defined at:
  1346 ;;		line 11 in file "Interrupts.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;		None
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;		None
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  1    wreg      void 
  1353 ;; Registers used:
  1354 ;;		None
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1360 ;;      Params:         0       0       0       0       0       0       0       0       0
  1361 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1362 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1363 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1364 ;;Total ram usage:        0 bytes
  1365 ;; Hardware stack levels used:    1
  1366 ;; Hardware stack levels required when called:    5
  1367 ;; This function calls:
  1368 ;;		Nothing
  1369 ;; This function is called by:
  1370 ;;		_Interrupt_Init
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text12
  1375  000C1A                     __ptext12:
  1376                           	opt stack 0
  1377  000C1A                     _INIT_INTCON:
  1378                           	opt stack 24
  1379                           
  1380                           ;Interrupts.c: 13: INTCONbits.GIE = 1U;
  1381                           
  1382                           ;incstack = 0
  1383  000C1A  8EF2               	bsf	intcon,7,c	;volatile
  1384                           
  1385                           ;Interrupts.c: 14: INTCONbits.PEIE = 0U;
  1386  000C1C  9CF2               	bcf	intcon,6,c	;volatile
  1387                           
  1388                           ;Interrupts.c: 15: INTCONbits.TMR0IE = 1U;
  1389  000C1E  8AF2               	bsf	intcon,5,c	;volatile
  1390                           
  1391                           ;Interrupts.c: 16: INTCONbits.INT0E=0U;
  1392  000C20  98F2               	bcf	intcon,4,c	;volatile
  1393                           
  1394                           ;Interrupts.c: 17: INTCONbits.RBIE=0U;
  1395  000C22  96F2               	bcf	intcon,3,c	;volatile
  1396  000C24  0012               	return		;funcret
  1397  000C26                     __end_of_INIT_INTCON:
  1398                           	opt stack 0
  1399                           tblptru	equ	0xFF8
  1400                           tblptrh	equ	0xFF7
  1401                           tblptrl	equ	0xFF6
  1402                           tablat	equ	0xFF5
  1403                           prodl	equ	0xFF3
  1404                           intcon	equ	0xFF2
  1405                           intcon2	equ	0xFF1
  1406                           intcon3	equ	0xFF0
  1407                           postinc0	equ	0xFEE
  1408                           wreg	equ	0xFE8
  1409                           postdec1	equ	0xFE5
  1410                           fsr1l	equ	0xFE1
  1411                           
  1412 ;; *************** function _InitDHT11Driver *****************
  1413 ;; Defined at:
  1414 ;;		line 104 in file "DHT11Driver.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;		None
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;		None
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		wreg, status,2, status,0, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1428 ;;      Params:         0       0       0       0       0       0       0       0       0
  1429 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1431 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1432 ;;Total ram usage:        0 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; Hardware stack levels required when called:    6
  1435 ;; This function calls:
  1436 ;;		_ConfigureTimer1
  1437 ;; This function is called by:
  1438 ;;		_main
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text13
  1443  000C5C                     __ptext13:
  1444                           	opt stack 0
  1445  000C5C                     _InitDHT11Driver:
  1446                           	opt stack 24
  1447                           
  1448                           ;DHT11Driver.c: 105: (TRISBbits.TRISB3 = 0);
  1449                           
  1450                           ;incstack = 0
  1451  000C5C  9693               	bcf	3987,3,c	;volatile
  1452                           
  1453                           ;DHT11Driver.c: 106: (LATB3=1U);
  1454  000C5E  868A               	bsf	3978,3,c	;volatile
  1455                           
  1456                           ;DHT11Driver.c: 107: ConfigureTimer1();
  1457  000C60  EC41  F005         	call	_ConfigureTimer1	;wreg free
  1458  000C64  0012               	return		;funcret
  1459  000C66                     __end_of_InitDHT11Driver:
  1460                           	opt stack 0
  1461                           tblptru	equ	0xFF8
  1462                           tblptrh	equ	0xFF7
  1463                           tblptrl	equ	0xFF6
  1464                           tablat	equ	0xFF5
  1465                           prodl	equ	0xFF3
  1466                           intcon	equ	0xFF2
  1467                           intcon2	equ	0xFF1
  1468                           intcon3	equ	0xFF0
  1469                           postinc0	equ	0xFEE
  1470                           wreg	equ	0xFE8
  1471                           postdec1	equ	0xFE5
  1472                           fsr1l	equ	0xFE1
  1473                           
  1474 ;; *************** function _ConfigureTimer1 *****************
  1475 ;; Defined at:
  1476 ;;		line 6 in file "CCP1.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;		None
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  2  249[None  ] int 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, status,0
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1490 ;;      Params:         0       0       0       0       0       0       0       0       0
  1491 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1492 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1493 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1494 ;;Total ram usage:        0 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    5
  1497 ;; This function calls:
  1498 ;;		Nothing
  1499 ;; This function is called by:
  1500 ;;		_InitDHT11Driver
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text14
  1505  000A82                     __ptext14:
  1506                           	opt stack 0
  1507  000A82                     _ConfigureTimer1:
  1508                           	opt stack 24
  1509                           
  1510                           ;CCP1.c: 7: T1CONbits.RD16=1;
  1511                           
  1512                           ;incstack = 0
  1513  000A82  8ECD               	bsf	4045,7,c	;volatile
  1514                           
  1515                           ;CCP1.c: 8: T1RUN=1U;
  1516  000A84  8CCD               	bsf	4045,6,c	;volatile
  1517                           
  1518                           ;CCP1.c: 9: T1OSCEN=1U;
  1519  000A86  86CD               	bsf	4045,3,c	;volatile
  1520                           
  1521                           ;CCP1.c: 10: TMR1CS=0U;
  1522  000A88  92CD               	bcf	4045,1,c	;volatile
  1523                           
  1524                           ;CCP1.c: 11: TMR1ON=0U;
  1525  000A8A  90CD               	bcf	4045,0,c	;volatile
  1526                           
  1527                           ;CCP1.c: 13: mask = T1CON & 0xCF;
  1528  000A8C  50CD               	movf	4045,w,c	;volatile
  1529  000A8E  0BCF               	andlw	207
  1530  000A90  6E1F               	movwf	_mask,c
  1531                           
  1532                           ;CCP1.c: 14: if (prescaler == 8) T1CON = mask | 0x30;
  1533  000A92  0E08               	movlw	8
  1534  000A94  1852               	xorwf	_prescaler,w,c
  1535  000A96  A4D8               	btfss	status,2,c
  1536  000A98  D004               	goto	l1377
  1537  000A9A  501F               	movf	_mask,w,c
  1538  000A9C  0930               	iorlw	48
  1539  000A9E  6ECD               	movwf	4045,c	;volatile
  1540  000AA0  0012               	return	
  1541  000AA2                     l1377:
  1542                           
  1543                           ;CCP1.c: 15: else if (prescaler == 4) T1CON = mask | 0x20;
  1544  000AA2  0E04               	movlw	4
  1545  000AA4  1852               	xorwf	_prescaler,w,c
  1546  000AA6  A4D8               	btfss	status,2,c
  1547  000AA8  D004               	goto	l1381
  1548  000AAA  501F               	movf	_mask,w,c
  1549  000AAC  0920               	iorlw	32
  1550  000AAE  6ECD               	movwf	4045,c	;volatile
  1551  000AB0  0012               	return	
  1552  000AB2                     l1381:
  1553                           
  1554                           ;CCP1.c: 16: else if (prescaler == 2) T1CON = mask | 0x10;
  1555  000AB2  0E02               	movlw	2
  1556  000AB4  1852               	xorwf	_prescaler,w,c
  1557  000AB6  A4D8               	btfss	status,2,c
  1558  000AB8  D004               	goto	l325
  1559  000ABA  501F               	movf	_mask,w,c
  1560  000ABC  0910               	iorlw	16
  1561  000ABE  6ECD               	movwf	4045,c	;volatile
  1562  000AC0  0012               	return	
  1563  000AC2                     l325:
  1564                           
  1565                           ;CCP1.c: 17: else T1CON = mask;
  1566  000AC2  C01F  FFCD         	movff	_mask,4045	;volatile
  1567  000AC6  0012               	return	
  1568  000AC8                     __end_of_ConfigureTimer1:
  1569                           	opt stack 0
  1570                           tblptru	equ	0xFF8
  1571                           tblptrh	equ	0xFF7
  1572                           tblptrl	equ	0xFF6
  1573                           tablat	equ	0xFF5
  1574                           prodl	equ	0xFF3
  1575                           intcon	equ	0xFF2
  1576                           intcon2	equ	0xFF1
  1577                           intcon3	equ	0xFF0
  1578                           postinc0	equ	0xFEE
  1579                           wreg	equ	0xFE8
  1580                           postdec1	equ	0xFE5
  1581                           fsr1l	equ	0xFE1
  1582                           status	equ	0xFD8
  1583                           
  1584 ;; *************** function _HighISR *****************
  1585 ;; Defined at:
  1586 ;;		line 33 in file "Main.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;		None
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1600 ;;      Params:         0       0       0       0       0       0       0       0       0
  1601 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1602 ;;      Temps:         14       0       0       0       0       0       0       0       0
  1603 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1604 ;;Total ram usage:       14 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; Hardware stack levels required when called:    4
  1607 ;; This function calls:
  1608 ;;		_DHTSignalResponse
  1609 ;;		_FirstStateRequest
  1610 ;;		_Idle
  1611 ;;		_RecievingData
  1612 ;;		_SecondStateRequest
  1613 ;;		_TurnOffLights
  1614 ;;		_TurnOnLights
  1615 ;;		i2_TMR0_WRITE_HIGH
  1616 ;;		i2_TMR0_WRITE_LOW
  1617 ;; This function is called by:
  1618 ;;		Interrupt level 2
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           	psect	intcode
  1623  000008                     __pintcode:
  1624                           	opt stack 0
  1625  000008                     _HighISR:
  1626                           	opt stack 24
  1627                           
  1628                           ;incstack = 0
  1629  000008  8255               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1630  00000A  CFFA F036          	movff	pclath,??_HighISR
  1631  00000E  CFFB F037          	movff	pclatu,??_HighISR+1
  1632  000012  ED02  F004         	call	int_func,f	;refresh shadow registers
  1633                           pclatu	equ	0xFFB
  1634                           pclath	equ	0xFFA
  1635                           tblptru	equ	0xFF8
  1636                           tblptrh	equ	0xFF7
  1637                           tblptrl	equ	0xFF6
  1638                           tablat	equ	0xFF5
  1639                           prodl	equ	0xFF3
  1640                           intcon	equ	0xFF2
  1641                           intcon2	equ	0xFF1
  1642                           intcon3	equ	0xFF0
  1643                           postinc0	equ	0xFEE
  1644                           wreg	equ	0xFE8
  1645                           postdec1	equ	0xFE5
  1646                           fsr1l	equ	0xFE1
  1647                           status	equ	0xFD8
  1648                           
  1649                           	psect	intcode_body
  1650  000804                     __pintcode_body:
  1651                           	opt stack 24
  1652  000804                     int_func:
  1653                           	opt stack 24
  1654  000804  0006               	pop		; remove dummy address from shadow register refresh
  1655  000806  CFE9 F038          	movff	fsr0l,??_HighISR+2
  1656  00080A  CFEA F039          	movff	fsr0h,??_HighISR+3
  1657  00080E  CFE1 F03A          	movff	fsr1l,??_HighISR+4
  1658  000812  CFE2 F03B          	movff	fsr1h,??_HighISR+5
  1659  000816  CFD9 F03C          	movff	fsr2l,??_HighISR+6
  1660  00081A  CFDA F03D          	movff	fsr2h,??_HighISR+7
  1661  00081E  CFF3 F03E          	movff	prodl,??_HighISR+8
  1662  000822  CFF4 F03F          	movff	prodh,??_HighISR+9
  1663  000826  CFF6 F040          	movff	tblptrl,??_HighISR+10
  1664  00082A  CFF7 F041          	movff	tblptrh,??_HighISR+11
  1665  00082E  CFF8 F042          	movff	tblptru,??_HighISR+12
  1666  000832  CFF5 F043          	movff	tablat,??_HighISR+13
  1667                           
  1668                           ;Main.c: 35: if(INT2IF){
  1669  000836  A2F0               	btfss	intcon3,1,c	;volatile
  1670  000838  D00C               	goto	i2l1329
  1671                           
  1672                           ;Main.c: 36: INT2IF=0;
  1673  00083A  92F0               	bcf	intcon3,1,c	;volatile
  1674                           
  1675                           ;Main.c: 37: if(Light_f){
  1676  00083C  A254               	btfss	_Light_f/(0+8),_Light_f& (0+7),c
  1677  00083E  D005               	goto	i2l1323
  1678                           
  1679                           ;Main.c: 38: TurnOffLights();
  1680  000840  EC47  F006         	call	_TurnOffLights	;wreg free
  1681                           
  1682                           ;Main.c: 39: INTEDG2=0U;
  1683  000844  98F1               	bcf	intcon2,4,c	;volatile
  1684                           
  1685                           ;Main.c: 40: Light_f=0;
  1686  000846  9254               	bcf	_Light_f/(0+8),_Light_f& (0+7),c
  1687                           
  1688                           ;Main.c: 41: }
  1689  000848  D004               	goto	i2l1329
  1690  00084A                     i2l1323:
  1691                           
  1692                           ;Main.c: 42: else{
  1693                           ;Main.c: 43: TurnOnLights();
  1694  00084A  EC13  F006         	call	_TurnOnLights	;wreg free
  1695                           
  1696                           ;Main.c: 44: INTEDG2=1U;
  1697  00084E  88F1               	bsf	intcon2,4,c	;volatile
  1698                           
  1699                           ;Main.c: 45: Light_f=1;
  1700  000850  8254               	bsf	_Light_f/(0+8),_Light_f& (0+7),c
  1701  000852                     i2l1329:
  1702                           
  1703                           ;Main.c: 46: }
  1704                           ;Main.c: 47: }
  1705                           ;Main.c: 49: if(ADIF){
  1706  000852  BC9E               	btfsc	3998,6,c	;volatile
  1707                           
  1708                           ;Main.c: 50: ADIF=0;
  1709  000854  9C9E               	bcf	3998,6,c	;volatile
  1710                           
  1711                           ;Main.c: 52: }
  1712                           ;Main.c: 54: if(TMR0IF){
  1713  000856  A4F2               	btfss	intcon,2,c	;volatile
  1714  000858  D01E               	goto	i2l1349
  1715                           
  1716                           ;Main.c: 56: TMR0IF=0;
  1717  00085A  94F2               	bcf	intcon,2,c	;volatile
  1718                           
  1719                           ;Main.c: 57: if(TimerCounter<5) TimerCounter++;
  1720  00085C  0E05               	movlw	5
  1721  00085E  6015               	cpfslt	_TimerCounter,c
  1722  000860  D002               	goto	i2l86
  1723  000862  2A15               	incf	_TimerCounter,f,c
  1724  000864  D011               	goto	i2l1343
  1725  000866                     i2l86:
  1726                           
  1727                           ;Main.c: 58: else{
  1728                           ;Main.c: 59: TMR0ON = 0;
  1729  000866  9ED5               	bcf	4053,7,c	;volatile
  1730                           
  1731                           ;Main.c: 60: DHT_StateMachine[_FirstStateRequest]();
  1732  000868  EE20  F046         	lfsr	2,_DHT_StateMachine+2
  1733  00086C  D801               	call	i2u31_48
  1734  00086E  D00A               	goto	i2l1341
  1735  000870                     i2u31_48:
  1736  000870  0005               	push	
  1737  000872  6EFA               	movwf	pclath,c
  1738  000874  50DE               	movf	postinc2,w,c
  1739  000876  6EFD               	movwf	tosl,c
  1740  000878  50DE               	movf	postinc2,w,c
  1741  00087A  6EFE               	movwf	tosh,c
  1742  00087C  50F8               	movf	tblptru,w,c
  1743  00087E  6EFF               	movwf	tosu,c
  1744  000880  50FA               	movf	pclath,w,c
  1745  000882  0012               	return		;indir
  1746  000884                     i2l1341:
  1747                           
  1748                           ;Main.c: 61: TimerCounter=0;
  1749  000884  0E00               	movlw	0
  1750  000886  6E15               	movwf	_TimerCounter,c
  1751  000888                     i2l1343:
  1752                           
  1753                           ;Main.c: 62: }
  1754                           ;Main.c: 63: TMR0_WRITE_HIGH(0xF0);
  1755  000888  0EF0               	movlw	240
  1756  00088A  EC3C  F006         	call	i2_TMR0_WRITE_HIGH
  1757                           
  1758                           ;Main.c: 64: TMR0_WRITE_LOW(0xBD);
  1759  00088E  0EBD               	movlw	189
  1760  000890  EC38  F006         	call	i2_TMR0_WRITE_LOW
  1761                           
  1762                           ;Main.c: 65: TMR0ON = 1;
  1763  000894  8ED5               	bsf	4053,7,c	;volatile
  1764  000896                     i2l1349:
  1765                           
  1766                           ;Main.c: 66: }
  1767                           ;Main.c: 68: if (CCP1IF){
  1768  000896  A49E               	btfss	3998,2,c	;volatile
  1769  000898  D015               	goto	i2l89
  1770                           
  1771                           ;Main.c: 69: CCP1IF=0;
  1772  00089A  949E               	bcf	3998,2,c	;volatile
  1773                           
  1774                           ;Main.c: 70: (*DHT_StateMachine[state])();
  1775  00089C  5022               	movf	_state,w,c
  1776  00089E  0D02               	mullw	2
  1777  0008A0  0E44               	movlw	low _DHT_StateMachine
  1778  0008A2  24F3               	addwf	prodl,w,c
  1779  0008A4  6ED9               	movwf	fsr2l,c
  1780  0008A6  0E00               	movlw	high _DHT_StateMachine
  1781  0008A8  20F4               	addwfc	prodh,w,c
  1782  0008AA  6EDA               	movwf	fsr2h,c
  1783  0008AC  D801               	call	i2u33_48
  1784  0008AE  D00A               	goto	i2l89
  1785  0008B0                     i2u33_48:
  1786  0008B0  0005               	push	
  1787  0008B2  6EFA               	movwf	pclath,c
  1788  0008B4  50DE               	movf	postinc2,w,c
  1789  0008B6  6EFD               	movwf	tosl,c
  1790  0008B8  50DE               	movf	postinc2,w,c
  1791  0008BA  6EFE               	movwf	tosh,c
  1792  0008BC  50F8               	movf	tblptru,w,c
  1793  0008BE  6EFF               	movwf	tosu,c
  1794  0008C0  50FA               	movf	pclath,w,c
  1795  0008C2  0012               	return		;indir
  1796  0008C4                     i2l89:
  1797  0008C4  C043  FFF5         	movff	??_HighISR+13,tablat
  1798  0008C8  C042  FFF8         	movff	??_HighISR+12,tblptru
  1799  0008CC  C041  FFF7         	movff	??_HighISR+11,tblptrh
  1800  0008D0  C040  FFF6         	movff	??_HighISR+10,tblptrl
  1801  0008D4  C03F  FFF4         	movff	??_HighISR+9,prodh
  1802  0008D8  C03E  FFF3         	movff	??_HighISR+8,prodl
  1803  0008DC  C03D  FFDA         	movff	??_HighISR+7,fsr2h
  1804  0008E0  C03C  FFD9         	movff	??_HighISR+6,fsr2l
  1805  0008E4  C03B  FFE2         	movff	??_HighISR+5,fsr1h
  1806  0008E8  C03A  FFE1         	movff	??_HighISR+4,fsr1l
  1807  0008EC  C039  FFEA         	movff	??_HighISR+3,fsr0h
  1808  0008F0  C038  FFE9         	movff	??_HighISR+2,fsr0l
  1809  0008F4  C037  FFFB         	movff	??_HighISR+1,pclatu
  1810  0008F8  C036  FFFA         	movff	??_HighISR,pclath
  1811  0008FC  9255               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1812  0008FE  0011               	retfie		f
  1813  000900                     __end_of_HighISR:
  1814                           	opt stack 0
  1815                           tosu	equ	0xFFF
  1816                           tosh	equ	0xFFE
  1817                           tosl	equ	0xFFD
  1818                           pclatu	equ	0xFFB
  1819                           pclath	equ	0xFFA
  1820                           tblptru	equ	0xFF8
  1821                           tblptrh	equ	0xFF7
  1822                           tblptrl	equ	0xFF6
  1823                           tablat	equ	0xFF5
  1824                           prodh	equ	0xFF4
  1825                           prodl	equ	0xFF3
  1826                           intcon	equ	0xFF2
  1827                           intcon2	equ	0xFF1
  1828                           intcon3	equ	0xFF0
  1829                           postinc0	equ	0xFEE
  1830                           fsr0h	equ	0xFEA
  1831                           fsr0l	equ	0xFE9
  1832                           wreg	equ	0xFE8
  1833                           postdec1	equ	0xFE5
  1834                           fsr1h	equ	0xFE2
  1835                           fsr1l	equ	0xFE1
  1836                           postinc2	equ	0xFDE
  1837                           fsr2h	equ	0xFDA
  1838                           fsr2l	equ	0xFD9
  1839                           status	equ	0xFD8
  1840                           
  1841 ;; *************** function i2_TMR0_WRITE_LOW *****************
  1842 ;; Defined at:
  1843 ;;		line 79 in file "Timer_0.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  valorLow        1    wreg     unsigned char 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  valorLow        1    0[COMRAM] unsigned char 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1857 ;;      Params:         0       0       0       0       0       0       0       0       0
  1858 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1859 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1860 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1861 ;;Total ram usage:        1 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_HighISR
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text16
  1871  000C70                     __ptext16:
  1872                           	opt stack 0
  1873  000C70                     i2_TMR0_WRITE_LOW:
  1874                           	opt stack 27
  1875                           
  1876                           ;incstack = 0
  1877                           ;i2TMR0_WRITE_LOW@valorLow stored from wreg
  1878  000C70  6E24               	movwf	i2TMR0_WRITE_LOW@valorLow,c
  1879                           
  1880                           ;Timer_0.c: 81: TMR0L=valorLow;
  1881  000C72  C024  FFD6         	movff	i2TMR0_WRITE_LOW@valorLow,4054	;volatile
  1882  000C76  0012               	return		;funcret
  1883  000C78                     __end_ofi2_TMR0_WRITE_LOW:
  1884                           	opt stack 0
  1885                           tosu	equ	0xFFF
  1886                           tosh	equ	0xFFE
  1887                           tosl	equ	0xFFD
  1888                           pclatu	equ	0xFFB
  1889                           pclath	equ	0xFFA
  1890                           tblptru	equ	0xFF8
  1891                           tblptrh	equ	0xFF7
  1892                           tblptrl	equ	0xFF6
  1893                           tablat	equ	0xFF5
  1894                           prodh	equ	0xFF4
  1895                           prodl	equ	0xFF3
  1896                           intcon	equ	0xFF2
  1897                           intcon2	equ	0xFF1
  1898                           intcon3	equ	0xFF0
  1899                           postinc0	equ	0xFEE
  1900                           fsr0h	equ	0xFEA
  1901                           fsr0l	equ	0xFE9
  1902                           wreg	equ	0xFE8
  1903                           postdec1	equ	0xFE5
  1904                           fsr1h	equ	0xFE2
  1905                           fsr1l	equ	0xFE1
  1906                           postinc2	equ	0xFDE
  1907                           fsr2h	equ	0xFDA
  1908                           fsr2l	equ	0xFD9
  1909                           status	equ	0xFD8
  1910                           
  1911 ;; *************** function i2_TMR0_WRITE_HIGH *****************
  1912 ;; Defined at:
  1913 ;;		line 66 in file "Timer_0.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;  valorHigh       1    wreg     unsigned char 
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;  valorHigh       1    0[COMRAM] unsigned char 
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		wreg
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1927 ;;      Params:         0       0       0       0       0       0       0       0       0
  1928 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1929 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1930 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1931 ;;Total ram usage:        1 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; This function calls:
  1934 ;;		Nothing
  1935 ;; This function is called by:
  1936 ;;		_HighISR
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text17
  1941  000C78                     __ptext17:
  1942                           	opt stack 0
  1943  000C78                     i2_TMR0_WRITE_HIGH:
  1944                           	opt stack 27
  1945                           
  1946                           ;incstack = 0
  1947                           ;i2TMR0_WRITE_HIGH@valorHigh stored from wreg
  1948  000C78  6E24               	movwf	i2TMR0_WRITE_HIGH@valorHigh,c
  1949                           
  1950                           ;Timer_0.c: 68: TMR0H=valorHigh;
  1951  000C7A  C024  FFD7         	movff	i2TMR0_WRITE_HIGH@valorHigh,4055	;volatile
  1952  000C7E  0012               	return		;funcret
  1953  000C80                     __end_ofi2_TMR0_WRITE_HIGH:
  1954                           	opt stack 0
  1955                           tosu	equ	0xFFF
  1956                           tosh	equ	0xFFE
  1957                           tosl	equ	0xFFD
  1958                           pclatu	equ	0xFFB
  1959                           pclath	equ	0xFFA
  1960                           tblptru	equ	0xFF8
  1961                           tblptrh	equ	0xFF7
  1962                           tblptrl	equ	0xFF6
  1963                           tablat	equ	0xFF5
  1964                           prodh	equ	0xFF4
  1965                           prodl	equ	0xFF3
  1966                           intcon	equ	0xFF2
  1967                           intcon2	equ	0xFF1
  1968                           intcon3	equ	0xFF0
  1969                           postinc0	equ	0xFEE
  1970                           fsr0h	equ	0xFEA
  1971                           fsr0l	equ	0xFE9
  1972                           wreg	equ	0xFE8
  1973                           postdec1	equ	0xFE5
  1974                           fsr1h	equ	0xFE2
  1975                           fsr1l	equ	0xFE1
  1976                           postinc2	equ	0xFDE
  1977                           fsr2h	equ	0xFDA
  1978                           fsr2l	equ	0xFD9
  1979                           status	equ	0xFD8
  1980                           
  1981 ;; *************** function _TurnOnLights *****************
  1982 ;; Defined at:
  1983 ;;		line 7 in file "LedDriver.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;		None
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;		None
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  2   18[None  ] int 
  1990 ;; Registers used:
  1991 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1997 ;;      Params:         0       0       0       0       0       0       0       0       0
  1998 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1999 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2000 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2001 ;;Total ram usage:        0 bytes
  2002 ;; Hardware stack levels used:    1
  2003 ;; Hardware stack levels required when called:    3
  2004 ;; This function calls:
  2005 ;;		_SetPWM
  2006 ;;		_StartPWM
  2007 ;; This function is called by:
  2008 ;;		_HighISR
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           	psect	text18
  2013  000C26                     __ptext18:
  2014                           	opt stack 0
  2015  000C26                     _TurnOnLights:
  2016                           	opt stack 24
  2017                           
  2018                           ;LedDriver.c: 8: SetPWM(50);
  2019                           
  2020                           ;incstack = 0
  2021  000C26  0E32               	movlw	50
  2022  000C28  ECD4  F005         	call	_SetPWM
  2023                           
  2024                           ;LedDriver.c: 9: StartPWM();
  2025  000C2C  EC40  F006         	call	_StartPWM	;wreg free
  2026  000C30  0012               	return		;funcret
  2027  000C32                     __end_of_TurnOnLights:
  2028                           	opt stack 0
  2029                           tosu	equ	0xFFF
  2030                           tosh	equ	0xFFE
  2031                           tosl	equ	0xFFD
  2032                           pclatu	equ	0xFFB
  2033                           pclath	equ	0xFFA
  2034                           tblptru	equ	0xFF8
  2035                           tblptrh	equ	0xFF7
  2036                           tblptrl	equ	0xFF6
  2037                           tablat	equ	0xFF5
  2038                           prodh	equ	0xFF4
  2039                           prodl	equ	0xFF3
  2040                           intcon	equ	0xFF2
  2041                           intcon2	equ	0xFF1
  2042                           intcon3	equ	0xFF0
  2043                           postinc0	equ	0xFEE
  2044                           fsr0h	equ	0xFEA
  2045                           fsr0l	equ	0xFE9
  2046                           wreg	equ	0xFE8
  2047                           postdec1	equ	0xFE5
  2048                           fsr1h	equ	0xFE2
  2049                           fsr1l	equ	0xFE1
  2050                           postinc2	equ	0xFDE
  2051                           fsr2h	equ	0xFDA
  2052                           fsr2l	equ	0xFD9
  2053                           status	equ	0xFD8
  2054                           
  2055 ;; *************** function _StartPWM *****************
  2056 ;; Defined at:
  2057 ;;		line 16 in file "PWM.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;		None
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, status,2
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2071 ;;      Params:         0       0       0       0       0       0       0       0       0
  2072 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2073 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2074 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2075 ;;Total ram usage:        0 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; This function calls:
  2078 ;;		Nothing
  2079 ;; This function is called by:
  2080 ;;		_TurnOnLights
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text19
  2085  000C80                     __ptext19:
  2086                           	opt stack 0
  2087  000C80                     _StartPWM:
  2088                           	opt stack 26
  2089                           
  2090                           ;PWM.c: 17: CCP2CON=0x0C;
  2091                           
  2092                           ;incstack = 0
  2093  000C80  0E0C               	movlw	12
  2094  000C82  6EBA               	movwf	4026,c	;volatile
  2095                           
  2096                           ;PWM.c: 18: T1OSCEN=1U;
  2097  000C84  86CD               	bsf	4045,3,c	;volatile
  2098  000C86  0012               	return		;funcret
  2099  000C88                     __end_of_StartPWM:
  2100                           	opt stack 0
  2101                           tosu	equ	0xFFF
  2102                           tosh	equ	0xFFE
  2103                           tosl	equ	0xFFD
  2104                           pclatu	equ	0xFFB
  2105                           pclath	equ	0xFFA
  2106                           tblptru	equ	0xFF8
  2107                           tblptrh	equ	0xFF7
  2108                           tblptrl	equ	0xFF6
  2109                           tablat	equ	0xFF5
  2110                           prodh	equ	0xFF4
  2111                           prodl	equ	0xFF3
  2112                           intcon	equ	0xFF2
  2113                           intcon2	equ	0xFF1
  2114                           intcon3	equ	0xFF0
  2115                           postinc0	equ	0xFEE
  2116                           fsr0h	equ	0xFEA
  2117                           fsr0l	equ	0xFE9
  2118                           wreg	equ	0xFE8
  2119                           postdec1	equ	0xFE5
  2120                           fsr1h	equ	0xFE2
  2121                           fsr1l	equ	0xFE1
  2122                           postinc2	equ	0xFDE
  2123                           fsr2h	equ	0xFDA
  2124                           fsr2l	equ	0xFD9
  2125                           status	equ	0xFD8
  2126                           
  2127 ;; *************** function _SetPWM *****************
  2128 ;; Defined at:
  2129 ;;		line 43 in file "PWM.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  dutycycle       1    wreg     unsigned char 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  dutycycle       1   17[COMRAM] unsigned char 
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2143 ;;      Params:         0       0       0       0       0       0       0       0       0
  2144 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2146 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2147 ;;Total ram usage:        1 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    2
  2150 ;; This function calls:
  2151 ;;		_SetDutyCycle
  2152 ;;		_SetPeriod
  2153 ;; This function is called by:
  2154 ;;		_TurnOnLights
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           	psect	text20
  2159  000BA8                     __ptext20:
  2160                           	opt stack 0
  2161  000BA8                     _SetPWM:
  2162                           	opt stack 24
  2163                           
  2164                           ;incstack = 0
  2165                           ;SetPWM@dutycycle stored from wreg
  2166  000BA8  6E35               	movwf	SetPWM@dutycycle,c
  2167                           
  2168                           ;PWM.c: 44: T2CON=0x00;
  2169  000BAA  0E00               	movlw	0
  2170  000BAC  6ECA               	movwf	4042,c	;volatile
  2171                           
  2172                           ;PWM.c: 45: SetPeriod();
  2173  000BAE  EC44  F006         	call	_SetPeriod	;wreg free
  2174                           
  2175                           ;PWM.c: 46: SetDutyCycle(dutycycle);
  2176  000BB2  5035               	movf	SetPWM@dutycycle,w,c
  2177  000BB4  ECC2  F004         	call	_SetDutyCycle
  2178                           
  2179                           ;PWM.c: 47: (TRISBbits.TRISB3 = 0);
  2180  000BB8  9693               	bcf	3987,3,c	;volatile
  2181                           
  2182                           ;PWM.c: 48: T2CON=0b110;
  2183  000BBA  0E06               	movlw	6
  2184  000BBC  6ECA               	movwf	4042,c	;volatile
  2185  000BBE  0012               	return		;funcret
  2186  000BC0                     __end_of_SetPWM:
  2187                           	opt stack 0
  2188                           tosu	equ	0xFFF
  2189                           tosh	equ	0xFFE
  2190                           tosl	equ	0xFFD
  2191                           pclatu	equ	0xFFB
  2192                           pclath	equ	0xFFA
  2193                           tblptru	equ	0xFF8
  2194                           tblptrh	equ	0xFF7
  2195                           tblptrl	equ	0xFF6
  2196                           tablat	equ	0xFF5
  2197                           prodh	equ	0xFF4
  2198                           prodl	equ	0xFF3
  2199                           intcon	equ	0xFF2
  2200                           intcon2	equ	0xFF1
  2201                           intcon3	equ	0xFF0
  2202                           postinc0	equ	0xFEE
  2203                           fsr0h	equ	0xFEA
  2204                           fsr0l	equ	0xFE9
  2205                           wreg	equ	0xFE8
  2206                           postdec1	equ	0xFE5
  2207                           fsr1h	equ	0xFE2
  2208                           fsr1l	equ	0xFE1
  2209                           postinc2	equ	0xFDE
  2210                           fsr2h	equ	0xFDA
  2211                           fsr2l	equ	0xFD9
  2212                           status	equ	0xFD8
  2213                           
  2214 ;; *************** function _SetPeriod *****************
  2215 ;; Defined at:
  2216 ;;		line 27 in file "PWM.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;		None
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;		None
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      void 
  2223 ;; Registers used:
  2224 ;;		wreg, status,2
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2230 ;;      Params:         0       0       0       0       0       0       0       0       0
  2231 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2233 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2234 ;;Total ram usage:        0 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; This function calls:
  2237 ;;		Nothing
  2238 ;; This function is called by:
  2239 ;;		_SetPWM
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text21
  2244  000C88                     __ptext21:
  2245                           	opt stack 0
  2246  000C88                     _SetPeriod:
  2247                           	opt stack 25
  2248                           
  2249                           ;PWM.c: 29: PR2=124;
  2250                           
  2251                           ;incstack = 0
  2252  000C88  0E7C               	movlw	124
  2253  000C8A  6ECB               	movwf	4043,c	;volatile
  2254  000C8C  0012               	return		;funcret
  2255  000C8E                     __end_of_SetPeriod:
  2256                           	opt stack 0
  2257                           tosu	equ	0xFFF
  2258                           tosh	equ	0xFFE
  2259                           tosl	equ	0xFFD
  2260                           pclatu	equ	0xFFB
  2261                           pclath	equ	0xFFA
  2262                           tblptru	equ	0xFF8
  2263                           tblptrh	equ	0xFF7
  2264                           tblptrl	equ	0xFF6
  2265                           tablat	equ	0xFF5
  2266                           prodh	equ	0xFF4
  2267                           prodl	equ	0xFF3
  2268                           intcon	equ	0xFF2
  2269                           intcon2	equ	0xFF1
  2270                           intcon3	equ	0xFF0
  2271                           postinc0	equ	0xFEE
  2272                           fsr0h	equ	0xFEA
  2273                           fsr0l	equ	0xFE9
  2274                           wreg	equ	0xFE8
  2275                           postdec1	equ	0xFE5
  2276                           fsr1h	equ	0xFE2
  2277                           fsr1l	equ	0xFE1
  2278                           postinc2	equ	0xFDE
  2279                           fsr2h	equ	0xFDA
  2280                           fsr2l	equ	0xFD9
  2281                           status	equ	0xFD8
  2282                           
  2283 ;; *************** function _SetDutyCycle *****************
  2284 ;; Defined at:
  2285 ;;		line 32 in file "PWM.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  dutycycle       1    wreg     unsigned char 
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;  dutycycle       1   16[COMRAM] unsigned char 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      void 
  2292 ;; Registers used:
  2293 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2299 ;;      Params:         0       0       0       0       0       0       0       0       0
  2300 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2301 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2302 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2303 ;;Total ram usage:        3 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; Hardware stack levels required when called:    1
  2306 ;; This function calls:
  2307 ;;		___awdiv
  2308 ;;		___wmul
  2309 ;; This function is called by:
  2310 ;;		_SetPWM
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           	psect	text22
  2315  000984                     __ptext22:
  2316                           	opt stack 0
  2317  000984                     _SetDutyCycle:
  2318                           	opt stack 24
  2319                           
  2320                           ;incstack = 0
  2321                           ;SetDutyCycle@dutycycle stored from wreg
  2322  000984  6E34               	movwf	SetDutyCycle@dutycycle,c
  2323                           
  2324                           ;PWM.c: 33: PWMValue=((dutycycle)*470)/100;
  2325  000986  C034  F024         	movff	SetDutyCycle@dutycycle,___wmul@multiplier
  2326  00098A  6A25               	clrf	___wmul@multiplier+1,c
  2327  00098C  0E01               	movlw	1
  2328  00098E  6E27               	movwf	___wmul@multiplicand+1,c
  2329  000990  0ED6               	movlw	214
  2330  000992  6E26               	movwf	___wmul@multiplicand,c
  2331  000994  EC92  F005         	call	___wmul	;wreg free
  2332  000998  C024  F02A         	movff	?___wmul,___awdiv@dividend
  2333  00099C  C025  F02B         	movff	?___wmul+1,___awdiv@dividend+1
  2334  0009A0  0E00               	movlw	0
  2335  0009A2  6E2D               	movwf	___awdiv@divisor+1,c
  2336  0009A4  0E64               	movlw	100
  2337  0009A6  6E2C               	movwf	___awdiv@divisor,c
  2338  0009A8  EC80  F004         	call	___awdiv	;wreg free
  2339  0009AC  C02A  F00B         	movff	?___awdiv,_PWMValue
  2340  0009B0  C02B  F00C         	movff	?___awdiv+1,_PWMValue+1
  2341                           
  2342                           ;PWM.c: 34: LSb=PWMValue&0x03;
  2343  0009B4  0E03               	movlw	3
  2344  0009B6  140B               	andwf	_PWMValue,w,c
  2345  0009B8  6E07               	movwf	_LSb,c
  2346  0009BA  6A08               	clrf	_LSb+1,c
  2347                           
  2348                           ;PWM.c: 35: MSb=PWMValue>>2;
  2349  0009BC  C00B  F032         	movff	_PWMValue,??_SetDutyCycle
  2350  0009C0  C00C  F033         	movff	_PWMValue+1,??_SetDutyCycle+1
  2351  0009C4  90D8               	bcf	status,0,c
  2352  0009C6  3233               	rrcf	??_SetDutyCycle+1,f,c
  2353  0009C8  3232               	rrcf	??_SetDutyCycle,f,c
  2354  0009CA  90D8               	bcf	status,0,c
  2355  0009CC  3233               	rrcf	??_SetDutyCycle+1,f,c
  2356  0009CE  3232               	rrcf	??_SetDutyCycle,f,c
  2357  0009D0  C032  F009         	movff	??_SetDutyCycle,_MSb
  2358  0009D4  C033  F00A         	movff	??_SetDutyCycle+1,_MSb+1
  2359                           
  2360                           ;PWM.c: 37: CCPR2L=MSb;
  2361  0009D8  C009  FFBB         	movff	_MSb,4027	;volatile
  2362                           
  2363                           ;PWM.c: 38: CCP2CON=CCP2CON|(LSb<<4);
  2364  0009DC  3807               	swapf	_LSb,w,c
  2365  0009DE  0BF0               	andlw	240
  2366  0009E0  10BA               	iorwf	4026,w,c
  2367  0009E2  6EBA               	movwf	4026,c	;volatile
  2368  0009E4  0012               	return		;funcret
  2369  0009E6                     __end_of_SetDutyCycle:
  2370                           	opt stack 0
  2371                           tosu	equ	0xFFF
  2372                           tosh	equ	0xFFE
  2373                           tosl	equ	0xFFD
  2374                           pclatu	equ	0xFFB
  2375                           pclath	equ	0xFFA
  2376                           tblptru	equ	0xFF8
  2377                           tblptrh	equ	0xFF7
  2378                           tblptrl	equ	0xFF6
  2379                           tablat	equ	0xFF5
  2380                           prodh	equ	0xFF4
  2381                           prodl	equ	0xFF3
  2382                           intcon	equ	0xFF2
  2383                           intcon2	equ	0xFF1
  2384                           intcon3	equ	0xFF0
  2385                           postinc0	equ	0xFEE
  2386                           fsr0h	equ	0xFEA
  2387                           fsr0l	equ	0xFE9
  2388                           wreg	equ	0xFE8
  2389                           postdec1	equ	0xFE5
  2390                           fsr1h	equ	0xFE2
  2391                           fsr1l	equ	0xFE1
  2392                           postinc2	equ	0xFDE
  2393                           fsr2h	equ	0xFDA
  2394                           fsr2l	equ	0xFD9
  2395                           status	equ	0xFD8
  2396                           
  2397 ;; *************** function ___wmul *****************
  2398 ;; Defined at:
  2399 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  multiplier      2    0[COMRAM] unsigned int 
  2402 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;  product         2    4[COMRAM] unsigned int 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  2    0[COMRAM] unsigned int 
  2407 ;; Registers used:
  2408 ;;		wreg, status,2, status,0, prodl, prodh
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2414 ;;      Params:         4       0       0       0       0       0       0       0       0
  2415 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2416 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2417 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2418 ;;Total ram usage:        6 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_SetDutyCycle
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text23
  2428  000B24                     __ptext23:
  2429                           	opt stack 0
  2430  000B24                     ___wmul:
  2431                           	opt stack 24
  2432                           
  2433                           ;incstack = 0
  2434  000B24  5024               	movf	___wmul@multiplier,w,c
  2435  000B26  0226               	mulwf	___wmul@multiplicand,c
  2436  000B28  CFF3 F028          	movff	prodl,___wmul@product
  2437  000B2C  CFF4 F029          	movff	prodh,___wmul@product+1
  2438  000B30  5024               	movf	___wmul@multiplier,w,c
  2439  000B32  0227               	mulwf	___wmul@multiplicand+1,c
  2440  000B34  50F3               	movf	prodl,w,c
  2441  000B36  2629               	addwf	___wmul@product+1,f,c
  2442  000B38  5025               	movf	___wmul@multiplier+1,w,c
  2443  000B3A  0226               	mulwf	___wmul@multiplicand,c
  2444  000B3C  50F3               	movf	prodl,w,c
  2445  000B3E  2629               	addwf	___wmul@product+1,f,c
  2446  000B40  C028  F024         	movff	___wmul@product,?___wmul
  2447  000B44  C029  F025         	movff	___wmul@product+1,?___wmul+1
  2448  000B48  0012               	return	
  2449  000B4A                     __end_of___wmul:
  2450                           	opt stack 0
  2451                           tosu	equ	0xFFF
  2452                           tosh	equ	0xFFE
  2453                           tosl	equ	0xFFD
  2454                           pclatu	equ	0xFFB
  2455                           pclath	equ	0xFFA
  2456                           tblptru	equ	0xFF8
  2457                           tblptrh	equ	0xFF7
  2458                           tblptrl	equ	0xFF6
  2459                           tablat	equ	0xFF5
  2460                           prodh	equ	0xFF4
  2461                           prodl	equ	0xFF3
  2462                           intcon	equ	0xFF2
  2463                           intcon2	equ	0xFF1
  2464                           intcon3	equ	0xFF0
  2465                           postinc0	equ	0xFEE
  2466                           fsr0h	equ	0xFEA
  2467                           fsr0l	equ	0xFE9
  2468                           wreg	equ	0xFE8
  2469                           postdec1	equ	0xFE5
  2470                           fsr1h	equ	0xFE2
  2471                           fsr1l	equ	0xFE1
  2472                           postinc2	equ	0xFDE
  2473                           fsr2h	equ	0xFDA
  2474                           fsr2l	equ	0xFD9
  2475                           status	equ	0xFD8
  2476                           
  2477 ;; *************** function ___awdiv *****************
  2478 ;; Defined at:
  2479 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  dividend        2    6[COMRAM] int 
  2482 ;;  divisor         2    8[COMRAM] int 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  quotient        2   12[COMRAM] int 
  2485 ;;  sign            1   11[COMRAM] unsigned char 
  2486 ;;  counter         1   10[COMRAM] unsigned char 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  2    6[COMRAM] int 
  2489 ;; Registers used:
  2490 ;;		wreg, status,2, status,0
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2496 ;;      Params:         4       0       0       0       0       0       0       0       0
  2497 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2499 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2500 ;;Total ram usage:        8 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_SetDutyCycle
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text24
  2510  000900                     __ptext24:
  2511                           	opt stack 0
  2512  000900                     ___awdiv:
  2513                           	opt stack 24
  2514                           
  2515                           ;incstack = 0
  2516  000900  0E00               	movlw	0
  2517  000902  6E2F               	movwf	___awdiv@sign,c
  2518  000904  AE2D               	btfss	___awdiv@divisor+1,7,c
  2519  000906  D006               	goto	i2l1229
  2520  000908  6C2C               	negf	___awdiv@divisor,c
  2521  00090A  1E2D               	comf	___awdiv@divisor+1,f,c
  2522  00090C  B0D8               	btfsc	status,0,c
  2523  00090E  2A2D               	incf	___awdiv@divisor+1,f,c
  2524  000910  0E01               	movlw	1
  2525  000912  6E2F               	movwf	___awdiv@sign,c
  2526  000914                     i2l1229:
  2527  000914  AE2B               	btfss	___awdiv@dividend+1,7,c
  2528  000916  D006               	goto	i2l1235
  2529  000918  6C2A               	negf	___awdiv@dividend,c
  2530  00091A  1E2B               	comf	___awdiv@dividend+1,f,c
  2531  00091C  B0D8               	btfsc	status,0,c
  2532  00091E  2A2B               	incf	___awdiv@dividend+1,f,c
  2533  000920  0E01               	movlw	1
  2534  000922  1A2F               	xorwf	___awdiv@sign,f,c
  2535  000924                     i2l1235:
  2536  000924  0E00               	movlw	0
  2537  000926  6E31               	movwf	___awdiv@quotient+1,c
  2538  000928  0E00               	movlw	0
  2539  00092A  6E30               	movwf	___awdiv@quotient,c
  2540  00092C  502C               	movf	___awdiv@divisor,w,c
  2541  00092E  102D               	iorwf	___awdiv@divisor+1,w,c
  2542  000930  B4D8               	btfsc	status,2,c
  2543  000932  D01C               	goto	i2l1257
  2544  000934  0E01               	movlw	1
  2545  000936  6E2E               	movwf	___awdiv@counter,c
  2546  000938  D004               	goto	i2l1243
  2547  00093A                     i2l1241:
  2548  00093A  90D8               	bcf	status,0,c
  2549  00093C  362C               	rlcf	___awdiv@divisor,f,c
  2550  00093E  362D               	rlcf	___awdiv@divisor+1,f,c
  2551  000940  2A2E               	incf	___awdiv@counter,f,c
  2552  000942                     i2l1243:
  2553  000942  AE2D               	btfss	___awdiv@divisor+1,7,c
  2554  000944  D7FA               	goto	i2l1241
  2555  000946                     i2l1245:
  2556  000946  90D8               	bcf	status,0,c
  2557  000948  3630               	rlcf	___awdiv@quotient,f,c
  2558  00094A  3631               	rlcf	___awdiv@quotient+1,f,c
  2559  00094C  502C               	movf	___awdiv@divisor,w,c
  2560  00094E  5C2A               	subwf	___awdiv@dividend,w,c
  2561  000950  502D               	movf	___awdiv@divisor+1,w,c
  2562  000952  582B               	subwfb	___awdiv@dividend+1,w,c
  2563  000954  A0D8               	btfss	status,0,c
  2564  000956  D005               	goto	i2l1253
  2565  000958  502C               	movf	___awdiv@divisor,w,c
  2566  00095A  5E2A               	subwf	___awdiv@dividend,f,c
  2567  00095C  502D               	movf	___awdiv@divisor+1,w,c
  2568  00095E  5A2B               	subwfb	___awdiv@dividend+1,f,c
  2569  000960  8030               	bsf	___awdiv@quotient,0,c
  2570  000962                     i2l1253:
  2571  000962  90D8               	bcf	status,0,c
  2572  000964  322D               	rrcf	___awdiv@divisor+1,f,c
  2573  000966  322C               	rrcf	___awdiv@divisor,f,c
  2574  000968  2E2E               	decfsz	___awdiv@counter,f,c
  2575  00096A  D7ED               	goto	i2l1245
  2576  00096C                     i2l1257:
  2577  00096C  502F               	movf	___awdiv@sign,w,c
  2578  00096E  B4D8               	btfsc	status,2,c
  2579  000970  D004               	goto	i2l1261
  2580  000972  6C30               	negf	___awdiv@quotient,c
  2581  000974  1E31               	comf	___awdiv@quotient+1,f,c
  2582  000976  B0D8               	btfsc	status,0,c
  2583  000978  2A31               	incf	___awdiv@quotient+1,f,c
  2584  00097A                     i2l1261:
  2585  00097A  C030  F02A         	movff	___awdiv@quotient,?___awdiv
  2586  00097E  C031  F02B         	movff	___awdiv@quotient+1,?___awdiv+1
  2587  000982  0012               	return	
  2588  000984                     __end_of___awdiv:
  2589                           	opt stack 0
  2590                           tosu	equ	0xFFF
  2591                           tosh	equ	0xFFE
  2592                           tosl	equ	0xFFD
  2593                           pclatu	equ	0xFFB
  2594                           pclath	equ	0xFFA
  2595                           tblptru	equ	0xFF8
  2596                           tblptrh	equ	0xFF7
  2597                           tblptrl	equ	0xFF6
  2598                           tablat	equ	0xFF5
  2599                           prodh	equ	0xFF4
  2600                           prodl	equ	0xFF3
  2601                           intcon	equ	0xFF2
  2602                           intcon2	equ	0xFF1
  2603                           intcon3	equ	0xFF0
  2604                           postinc0	equ	0xFEE
  2605                           fsr0h	equ	0xFEA
  2606                           fsr0l	equ	0xFE9
  2607                           wreg	equ	0xFE8
  2608                           postdec1	equ	0xFE5
  2609                           fsr1h	equ	0xFE2
  2610                           fsr1l	equ	0xFE1
  2611                           postinc2	equ	0xFDE
  2612                           fsr2h	equ	0xFDA
  2613                           fsr2l	equ	0xFD9
  2614                           status	equ	0xFD8
  2615                           
  2616 ;; *************** function _TurnOffLights *****************
  2617 ;; Defined at:
  2618 ;;		line 3 in file "LedDriver.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;		None
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;		None
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  2   14[None  ] int 
  2625 ;; Registers used:
  2626 ;;		wreg, status,2, cstack
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2632 ;;      Params:         0       0       0       0       0       0       0       0       0
  2633 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2634 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2635 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2636 ;;Total ram usage:        0 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; Hardware stack levels required when called:    1
  2639 ;; This function calls:
  2640 ;;		_StopPWM
  2641 ;; This function is called by:
  2642 ;;		_HighISR
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text25
  2647  000C8E                     __ptext25:
  2648                           	opt stack 0
  2649  000C8E                     _TurnOffLights:
  2650                           	opt stack 26
  2651                           
  2652                           ;LedDriver.c: 4: StopPWM();
  2653                           
  2654                           ;incstack = 0
  2655  000C8E  EC33  F006         	call	_StopPWM	;wreg free
  2656  000C92  0012               	return		;funcret
  2657  000C94                     __end_of_TurnOffLights:
  2658                           	opt stack 0
  2659                           tosu	equ	0xFFF
  2660                           tosh	equ	0xFFE
  2661                           tosl	equ	0xFFD
  2662                           pclatu	equ	0xFFB
  2663                           pclath	equ	0xFFA
  2664                           tblptru	equ	0xFF8
  2665                           tblptrh	equ	0xFF7
  2666                           tblptrl	equ	0xFF6
  2667                           tablat	equ	0xFF5
  2668                           prodh	equ	0xFF4
  2669                           prodl	equ	0xFF3
  2670                           intcon	equ	0xFF2
  2671                           intcon2	equ	0xFF1
  2672                           intcon3	equ	0xFF0
  2673                           postinc0	equ	0xFEE
  2674                           fsr0h	equ	0xFEA
  2675                           fsr0l	equ	0xFE9
  2676                           wreg	equ	0xFE8
  2677                           postdec1	equ	0xFE5
  2678                           fsr1h	equ	0xFE2
  2679                           fsr1l	equ	0xFE1
  2680                           postinc2	equ	0xFDE
  2681                           fsr2h	equ	0xFDA
  2682                           fsr2l	equ	0xFD9
  2683                           status	equ	0xFD8
  2684                           
  2685 ;; *************** function _StopPWM *****************
  2686 ;; Defined at:
  2687 ;;		line 21 in file "PWM.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;		None
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;		None
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1    wreg      void 
  2694 ;; Registers used:
  2695 ;;		wreg, status,2
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2701 ;;      Params:         0       0       0       0       0       0       0       0       0
  2702 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2703 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2704 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2705 ;;Total ram usage:        0 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; This function calls:
  2708 ;;		Nothing
  2709 ;; This function is called by:
  2710 ;;		_TurnOffLights
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text26
  2715  000C66                     __ptext26:
  2716                           	opt stack 0
  2717  000C66                     _StopPWM:
  2718                           	opt stack 26
  2719                           
  2720                           ;PWM.c: 22: CCP2CON=0x00;
  2721                           
  2722                           ;incstack = 0
  2723  000C66  0E00               	movlw	0
  2724  000C68  6EBA               	movwf	4026,c	;volatile
  2725                           
  2726                           ;PWM.c: 23: T1OSCEN=0U;
  2727  000C6A  96CD               	bcf	4045,3,c	;volatile
  2728                           
  2729                           ;PWM.c: 24: (LATB3=0U);
  2730  000C6C  968A               	bcf	3978,3,c	;volatile
  2731  000C6E  0012               	return		;funcret
  2732  000C70                     __end_of_StopPWM:
  2733                           	opt stack 0
  2734                           tosu	equ	0xFFF
  2735                           tosh	equ	0xFFE
  2736                           tosl	equ	0xFFD
  2737                           pclatu	equ	0xFFB
  2738                           pclath	equ	0xFFA
  2739                           tblptru	equ	0xFF8
  2740                           tblptrh	equ	0xFF7
  2741                           tblptrl	equ	0xFF6
  2742                           tablat	equ	0xFF5
  2743                           prodh	equ	0xFF4
  2744                           prodl	equ	0xFF3
  2745                           intcon	equ	0xFF2
  2746                           intcon2	equ	0xFF1
  2747                           intcon3	equ	0xFF0
  2748                           postinc0	equ	0xFEE
  2749                           fsr0h	equ	0xFEA
  2750                           fsr0l	equ	0xFE9
  2751                           wreg	equ	0xFE8
  2752                           postdec1	equ	0xFE5
  2753                           fsr1h	equ	0xFE2
  2754                           fsr1l	equ	0xFE1
  2755                           postinc2	equ	0xFDE
  2756                           fsr2h	equ	0xFDA
  2757                           fsr2l	equ	0xFD9
  2758                           status	equ	0xFD8
  2759                           
  2760 ;; *************** function _RecievingData *****************
  2761 ;; Defined at:
  2762 ;;		line 62 in file "DHT11Driver.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;		None
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;		None
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2776 ;;      Params:         0       0       0       0       0       0       0       0       0
  2777 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2778 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2779 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2780 ;;Total ram usage:        2 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; This function calls:
  2783 ;;		Nothing
  2784 ;; This function is called by:
  2785 ;;		_HighISR
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text27
  2790  0009E6                     __ptext27:
  2791                           	opt stack 0
  2792  0009E6                     _RecievingData:
  2793                           	opt stack 27
  2794                           
  2795                           ;DHT11Driver.c: 64: times[bitcount]=CCPR1-lasttime;
  2796                           
  2797                           ;incstack = 0
  2798  0009E6  C00F  F024         	movff	_lasttime,??_RecievingData
  2799  0009EA  C010  F025         	movff	_lasttime+1,??_RecievingData+1
  2800  0009EE  1E24               	comf	??_RecievingData,f,c
  2801  0009F0  1E25               	comf	??_RecievingData+1,f,c
  2802  0009F2  4A24               	infsnz	??_RecievingData,f,c
  2803  0009F4  2A25               	incf	??_RecievingData+1,f,c
  2804  0009F6  50BE               	movf	4030,w,c	;volatile
  2805  0009F8  2624               	addwf	??_RecievingData,f,c
  2806  0009FA  50BF               	movf	4031,w,c	;volatile
  2807  0009FC  2225               	addwfc	??_RecievingData+1,f,c
  2808  0009FE  5016               	movf	_bitcount,w,c
  2809  000A00  0D02               	mullw	2
  2810  000A02  0E60               	movlw	low _times
  2811  000A04  24F3               	addwf	prodl,w,c
  2812  000A06  6ED9               	movwf	fsr2l,c
  2813  000A08  0E00               	movlw	high _times
  2814  000A0A  20F4               	addwfc	prodh,w,c
  2815  000A0C  6EDA               	movwf	fsr2h,c
  2816  000A0E  C024  FFDE         	movff	??_RecievingData,postinc2
  2817  000A12  C025  FFDD         	movff	??_RecievingData+1,postdec2
  2818                           
  2819                           ;DHT11Driver.c: 65: lasttime=CCPR1;
  2820  000A16  CFBE F00F          	movff	4030,_lasttime	;volatile
  2821  000A1A  CFBF F010          	movff	4031,_lasttime+1	;volatile
  2822                           
  2823                           ;DHT11Driver.c: 66: bitcount++;
  2824  000A1E  2A16               	incf	_bitcount,f,c
  2825                           
  2826                           ;DHT11Driver.c: 89: if(bitcount==40){
  2827  000A20  0E28               	movlw	40
  2828  000A22  1816               	xorwf	_bitcount,w,c
  2829  000A24  A4D8               	btfss	status,2,c
  2830  000A26  0012               	return	
  2831                           
  2832                           ;DHT11Driver.c: 92: T1CON--;
  2833  000A28  06CD               	decf	4045,f,c	;volatile
  2834                           
  2835                           ;DHT11Driver.c: 93: CCP1IE=0;
  2836  000A2A  949D               	bcf	3997,2,c	;volatile
  2837                           
  2838                           ;DHT11Driver.c: 95: (TRISBbits.TRISB3 = 0);
  2839  000A2C  9693               	bcf	3987,3,c	;volatile
  2840                           
  2841                           ;DHT11Driver.c: 97: (LATB3=1U);
  2842  000A2E  868A               	bsf	3978,3,c	;volatile
  2843                           
  2844                           ;DHT11Driver.c: 98: bitcount=0;
  2845  000A30  0E00               	movlw	0
  2846  000A32  6E16               	movwf	_bitcount,c
  2847                           
  2848                           ;DHT11Driver.c: 99: state = _Idle;
  2849  000A34  0E00               	movlw	0
  2850  000A36  6E22               	movwf	_state,c
  2851  000A38  0012               	return	
  2852  000A3A                     __end_of_RecievingData:
  2853                           	opt stack 0
  2854                           tosu	equ	0xFFF
  2855                           tosh	equ	0xFFE
  2856                           tosl	equ	0xFFD
  2857                           pclatu	equ	0xFFB
  2858                           pclath	equ	0xFFA
  2859                           tblptru	equ	0xFF8
  2860                           tblptrh	equ	0xFF7
  2861                           tblptrl	equ	0xFF6
  2862                           tablat	equ	0xFF5
  2863                           prodh	equ	0xFF4
  2864                           prodl	equ	0xFF3
  2865                           intcon	equ	0xFF2
  2866                           intcon2	equ	0xFF1
  2867                           intcon3	equ	0xFF0
  2868                           postinc0	equ	0xFEE
  2869                           fsr0h	equ	0xFEA
  2870                           fsr0l	equ	0xFE9
  2871                           wreg	equ	0xFE8
  2872                           postdec1	equ	0xFE5
  2873                           fsr1h	equ	0xFE2
  2874                           fsr1l	equ	0xFE1
  2875                           postinc2	equ	0xFDE
  2876                           postdec2	equ	0xFDD
  2877                           fsr2h	equ	0xFDA
  2878                           fsr2l	equ	0xFD9
  2879                           status	equ	0xFD8
  2880                           
  2881 ;; *************** function _DHTSignalResponse *****************
  2882 ;; Defined at:
  2883 ;;		line 51 in file "DHT11Driver.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;		None
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;		None
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      void 
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, status,0
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2897 ;;      Params:         0       0       0       0       0       0       0       0       0
  2898 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2899 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2900 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2901 ;;Total ram usage:        0 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; This function calls:
  2904 ;;		Nothing
  2905 ;; This function is called by:
  2906 ;;		_HighISR
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text28
  2911  000B8E                     __ptext28:
  2912                           	opt stack 0
  2913  000B8E                     _DHTSignalResponse:
  2914                           	opt stack 27
  2915                           
  2916                           ;DHT11Driver.c: 52: T1CON--;
  2917                           
  2918                           ;incstack = 0
  2919  000B8E  06CD               	decf	4045,f,c	;volatile
  2920                           
  2921                           ;DHT11Driver.c: 53: TMR1H=0;
  2922  000B90  0E00               	movlw	0
  2923  000B92  6ECF               	movwf	4047,c	;volatile
  2924                           
  2925                           ;DHT11Driver.c: 54: TMR1L=0;
  2926  000B94  0E00               	movlw	0
  2927  000B96  6ECE               	movwf	4046,c	;volatile
  2928                           
  2929                           ;DHT11Driver.c: 55: T1CON++;
  2930  000B98  2ACD               	incf	4045,f,c	;volatile
  2931                           
  2932                           ;DHT11Driver.c: 57: lasttime=TMR1;
  2933  000B9A  CFCE F00F          	movff	4046,_lasttime	;volatile
  2934  000B9E  CFCF F010          	movff	4047,_lasttime+1	;volatile
  2935                           
  2936                           ;DHT11Driver.c: 59: state=_RecievingData;
  2937  000BA2  0E04               	movlw	4
  2938  000BA4  6E22               	movwf	_state,c
  2939  000BA6  0012               	return		;funcret
  2940  000BA8                     __end_of_DHTSignalResponse:
  2941                           	opt stack 0
  2942                           tosu	equ	0xFFF
  2943                           tosh	equ	0xFFE
  2944                           tosl	equ	0xFFD
  2945                           pclatu	equ	0xFFB
  2946                           pclath	equ	0xFFA
  2947                           tblptru	equ	0xFF8
  2948                           tblptrh	equ	0xFF7
  2949                           tblptrl	equ	0xFF6
  2950                           tablat	equ	0xFF5
  2951                           prodh	equ	0xFF4
  2952                           prodl	equ	0xFF3
  2953                           intcon	equ	0xFF2
  2954                           intcon2	equ	0xFF1
  2955                           intcon3	equ	0xFF0
  2956                           postinc0	equ	0xFEE
  2957                           fsr0h	equ	0xFEA
  2958                           fsr0l	equ	0xFE9
  2959                           wreg	equ	0xFE8
  2960                           postdec1	equ	0xFE5
  2961                           fsr1h	equ	0xFE2
  2962                           fsr1l	equ	0xFE1
  2963                           postinc2	equ	0xFDE
  2964                           postdec2	equ	0xFDD
  2965                           fsr2h	equ	0xFDA
  2966                           fsr2l	equ	0xFD9
  2967                           status	equ	0xFD8
  2968                           
  2969 ;; *************** function _FirstStateRequest *****************
  2970 ;; Defined at:
  2971 ;;		line 22 in file "DHT11Driver.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;		None
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;		None
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  1    wreg      void 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2985 ;;      Params:         0       0       0       0       0       0       0       0       0
  2986 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2987 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2988 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2989 ;;Total ram usage:        0 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_HighISR
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text29
  2999  000AC8                     __ptext29:
  3000                           	opt stack 0
  3001  000AC8                     _FirstStateRequest:
  3002                           	opt stack 27
  3003                           
  3004                           ;DHT11Driver.c: 24: CCP1IE=1U;
  3005                           
  3006                           ;incstack = 0
  3007  000AC8  849D               	bsf	3997,2,c	;volatile
  3008                           
  3009                           ;DHT11Driver.c: 26: CCP1CON=0x08;
  3010  000ACA  0E08               	movlw	8
  3011  000ACC  6EBD               	movwf	4029,c	;volatile
  3012                           
  3013                           ;DHT11Driver.c: 28: TMR1H=0;
  3014  000ACE  0E00               	movlw	0
  3015  000AD0  6ECF               	movwf	4047,c	;volatile
  3016                           
  3017                           ;DHT11Driver.c: 29: TMR1L=0;
  3018  000AD2  0E00               	movlw	0
  3019  000AD4  6ECE               	movwf	4046,c	;volatile
  3020                           
  3021                           ;DHT11Driver.c: 31: counts=TMR1+65534;
  3022  000AD6  0EFE               	movlw	254
  3023  000AD8  24CE               	addwf	4046,w,c	;volatile
  3024  000ADA  6E0D               	movwf	_counts,c
  3025  000ADC  0EFF               	movlw	255
  3026  000ADE  20CF               	addwfc	4047,w,c	;volatile
  3027  000AE0  6E0E               	movwf	_counts+1,c
  3028                           
  3029                           ;DHT11Driver.c: 32: T3CON=0b10100000;
  3030  000AE2  0EA0               	movlw	160
  3031  000AE4  6EB1               	movwf	4017,c	;volatile
  3032                           
  3033                           ;DHT11Driver.c: 33: T1CON=0b11001000;
  3034  000AE6  0EC8               	movlw	200
  3035  000AE8  6ECD               	movwf	4045,c	;volatile
  3036                           
  3037                           ;DHT11Driver.c: 35: (TRISBbits.TRISB3 = 0);
  3038  000AEA  9693               	bcf	3987,3,c	;volatile
  3039                           
  3040                           ;DHT11Driver.c: 38: CCPR1H=counts>>8;
  3041  000AEC  500E               	movf	_counts+1,w,c
  3042  000AEE  6EBF               	movwf	4031,c	;volatile
  3043                           
  3044                           ;DHT11Driver.c: 39: CCPR1L=(u8)counts;
  3045  000AF0  C00D  FFBE         	movff	_counts,4030	;volatile
  3046                           
  3047                           ;DHT11Driver.c: 41: T1CON++;
  3048  000AF4  2ACD               	incf	4045,f,c	;volatile
  3049                           
  3050                           ;DHT11Driver.c: 42: state = _SecondStateRequest;
  3051  000AF6  0E02               	movlw	2
  3052  000AF8  6E22               	movwf	_state,c
  3053  000AFA  0012               	return		;funcret
  3054  000AFC                     __end_of_FirstStateRequest:
  3055                           	opt stack 0
  3056                           tosu	equ	0xFFF
  3057                           tosh	equ	0xFFE
  3058                           tosl	equ	0xFFD
  3059                           pclatu	equ	0xFFB
  3060                           pclath	equ	0xFFA
  3061                           tblptru	equ	0xFF8
  3062                           tblptrh	equ	0xFF7
  3063                           tblptrl	equ	0xFF6
  3064                           tablat	equ	0xFF5
  3065                           prodh	equ	0xFF4
  3066                           prodl	equ	0xFF3
  3067                           intcon	equ	0xFF2
  3068                           intcon2	equ	0xFF1
  3069                           intcon3	equ	0xFF0
  3070                           postinc0	equ	0xFEE
  3071                           fsr0h	equ	0xFEA
  3072                           fsr0l	equ	0xFE9
  3073                           wreg	equ	0xFE8
  3074                           postdec1	equ	0xFE5
  3075                           fsr1h	equ	0xFE2
  3076                           fsr1l	equ	0xFE1
  3077                           postinc2	equ	0xFDE
  3078                           postdec2	equ	0xFDD
  3079                           fsr2h	equ	0xFDA
  3080                           fsr2l	equ	0xFD9
  3081                           status	equ	0xFD8
  3082                           
  3083 ;; *************** function _Idle *****************
  3084 ;; Defined at:
  3085 ;;		line 19 in file "DHT11Driver.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;		None
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;		None
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      void 
  3092 ;; Registers used:
  3093 ;;		None
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3099 ;;      Params:         0       0       0       0       0       0       0       0       0
  3100 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3101 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3102 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3103 ;;Total ram usage:        0 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_HighISR
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text30
  3113  000C98                     __ptext30:
  3114                           	opt stack 0
  3115  000C98                     _Idle:
  3116                           	opt stack 27
  3117                           
  3118                           ;incstack = 0
  3119  000C98  0012               	return		;funcret
  3120  000C9A                     __end_of_Idle:
  3121                           	opt stack 0
  3122                           tosu	equ	0xFFF
  3123                           tosh	equ	0xFFE
  3124                           tosl	equ	0xFFD
  3125                           pclatu	equ	0xFFB
  3126                           pclath	equ	0xFFA
  3127                           tblptru	equ	0xFF8
  3128                           tblptrh	equ	0xFF7
  3129                           tblptrl	equ	0xFF6
  3130                           tablat	equ	0xFF5
  3131                           prodh	equ	0xFF4
  3132                           prodl	equ	0xFF3
  3133                           intcon	equ	0xFF2
  3134                           intcon2	equ	0xFF1
  3135                           intcon3	equ	0xFF0
  3136                           postinc0	equ	0xFEE
  3137                           fsr0h	equ	0xFEA
  3138                           fsr0l	equ	0xFE9
  3139                           wreg	equ	0xFE8
  3140                           postdec1	equ	0xFE5
  3141                           fsr1h	equ	0xFE2
  3142                           fsr1l	equ	0xFE1
  3143                           postinc2	equ	0xFDE
  3144                           postdec2	equ	0xFDD
  3145                           fsr2h	equ	0xFDA
  3146                           fsr2l	equ	0xFD9
  3147                           status	equ	0xFD8
  3148                           
  3149 ;; *************** function _SecondStateRequest *****************
  3150 ;; Defined at:
  3151 ;;		line 44 in file "DHT11Driver.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;		None
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;		None
  3156 ;; Return value:  Size  Location     Type
  3157 ;;                  1    wreg      void 
  3158 ;; Registers used:
  3159 ;;		wreg, status,2
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3165 ;;      Params:         0       0       0       0       0       0       0       0       0
  3166 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3167 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3168 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3169 ;;Total ram usage:        0 bytes
  3170 ;; Hardware stack levels used:    1
  3171 ;; This function calls:
  3172 ;;		Nothing
  3173 ;; This function is called by:
  3174 ;;		_HighISR
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           	psect	text31
  3179  000C32                     __ptext31:
  3180                           	opt stack 0
  3181  000C32                     _SecondStateRequest:
  3182                           	opt stack 27
  3183                           
  3184                           ;DHT11Driver.c: 45: CCP1CON=0x04;
  3185                           
  3186                           ;incstack = 0
  3187  000C32  0E04               	movlw	4
  3188  000C34  6EBD               	movwf	4029,c	;volatile
  3189                           
  3190                           ;DHT11Driver.c: 47: (TRISBbits.TRISB3 = 1);
  3191  000C36  8693               	bsf	3987,3,c	;volatile
  3192                           
  3193                           ;DHT11Driver.c: 48: state = _DHTSignalResponse;
  3194  000C38  0E03               	movlw	3
  3195  000C3A  6E22               	movwf	_state,c
  3196  000C3C  0012               	return		;funcret
  3197  000C3E                     __end_of_SecondStateRequest:
  3198                           	opt stack 0
  3199                           tosu	equ	0xFFF
  3200                           tosh	equ	0xFFE
  3201                           tosl	equ	0xFFD
  3202                           pclatu	equ	0xFFB
  3203                           pclath	equ	0xFFA
  3204                           tblptru	equ	0xFF8
  3205                           tblptrh	equ	0xFF7
  3206                           tblptrl	equ	0xFF6
  3207                           tablat	equ	0xFF5
  3208                           prodh	equ	0xFF4
  3209                           prodl	equ	0xFF3
  3210                           intcon	equ	0xFF2
  3211                           intcon2	equ	0xFF1
  3212                           intcon3	equ	0xFF0
  3213                           postinc0	equ	0xFEE
  3214                           fsr0h	equ	0xFEA
  3215                           fsr0l	equ	0xFE9
  3216                           wreg	equ	0xFE8
  3217                           postdec1	equ	0xFE5
  3218                           fsr1h	equ	0xFE2
  3219                           fsr1l	equ	0xFE1
  3220                           postinc2	equ	0xFDE
  3221                           postdec2	equ	0xFDD
  3222                           fsr2h	equ	0xFDA
  3223                           fsr2l	equ	0xFD9
  3224                           status	equ	0xFD8
  3225                           tosu	equ	0xFFF
  3226                           tosh	equ	0xFFE
  3227                           tosl	equ	0xFFD
  3228                           pclatu	equ	0xFFB
  3229                           pclath	equ	0xFFA
  3230                           tblptru	equ	0xFF8
  3231                           tblptrh	equ	0xFF7
  3232                           tblptrl	equ	0xFF6
  3233                           tablat	equ	0xFF5
  3234                           prodh	equ	0xFF4
  3235                           prodl	equ	0xFF3
  3236                           intcon	equ	0xFF2
  3237                           intcon2	equ	0xFF1
  3238                           intcon3	equ	0xFF0
  3239                           postinc0	equ	0xFEE
  3240                           fsr0h	equ	0xFEA
  3241                           fsr0l	equ	0xFE9
  3242                           wreg	equ	0xFE8
  3243                           postdec1	equ	0xFE5
  3244                           fsr1h	equ	0xFE2
  3245                           fsr1l	equ	0xFE1
  3246                           postinc2	equ	0xFDE
  3247                           postdec2	equ	0xFDD
  3248                           fsr2h	equ	0xFDA
  3249                           fsr2l	equ	0xFD9
  3250                           status	equ	0xFD8
  3251                           
  3252                           	psect	text32
  3253  000000                     __ptext32:
  3254                           	opt stack 0
  3255                           tosu	equ	0xFFF
  3256                           tosh	equ	0xFFE
  3257                           tosl	equ	0xFFD
  3258                           pclatu	equ	0xFFB
  3259                           pclath	equ	0xFFA
  3260                           tblptru	equ	0xFF8
  3261                           tblptrh	equ	0xFF7
  3262                           tblptrl	equ	0xFF6
  3263                           tablat	equ	0xFF5
  3264                           prodh	equ	0xFF4
  3265                           prodl	equ	0xFF3
  3266                           intcon	equ	0xFF2
  3267                           intcon2	equ	0xFF1
  3268                           intcon3	equ	0xFF0
  3269                           postinc0	equ	0xFEE
  3270                           fsr0h	equ	0xFEA
  3271                           fsr0l	equ	0xFE9
  3272                           wreg	equ	0xFE8
  3273                           postdec1	equ	0xFE5
  3274                           fsr1h	equ	0xFE2
  3275                           fsr1l	equ	0xFE1
  3276                           postinc2	equ	0xFDE
  3277                           postdec2	equ	0xFDD
  3278                           fsr2h	equ	0xFDA
  3279                           fsr2l	equ	0xFD9
  3280                           status	equ	0xFD8
  3281                           
  3282                           	psect	rparam
  3283  0000                     tosu	equ	0xFFF
  3284                           tosh	equ	0xFFE
  3285                           tosl	equ	0xFFD
  3286                           pclatu	equ	0xFFB
  3287                           pclath	equ	0xFFA
  3288                           tblptru	equ	0xFF8
  3289                           tblptrh	equ	0xFF7
  3290                           tblptrl	equ	0xFF6
  3291                           tablat	equ	0xFF5
  3292                           prodh	equ	0xFF4
  3293                           prodl	equ	0xFF3
  3294                           intcon	equ	0xFF2
  3295                           intcon2	equ	0xFF1
  3296                           intcon3	equ	0xFF0
  3297                           postinc0	equ	0xFEE
  3298                           fsr0h	equ	0xFEA
  3299                           fsr0l	equ	0xFE9
  3300                           wreg	equ	0xFE8
  3301                           postdec1	equ	0xFE5
  3302                           fsr1h	equ	0xFE2
  3303                           fsr1l	equ	0xFE1
  3304                           postinc2	equ	0xFDE
  3305                           postdec2	equ	0xFDD
  3306                           fsr2h	equ	0xFDA
  3307                           fsr2l	equ	0xFD9
  3308                           status	equ	0xFD8
  3309                           
  3310                           	psect	temp
  3311  000055                     btemp:
  3312                           	opt stack 0
  3313  000055                     	ds	1
  3314  0000                     int$flags	set	btemp
  3315                           tosu	equ	0xFFF
  3316                           tosh	equ	0xFFE
  3317                           tosl	equ	0xFFD
  3318                           pclatu	equ	0xFFB
  3319                           pclath	equ	0xFFA
  3320                           tblptru	equ	0xFF8
  3321                           tblptrh	equ	0xFF7
  3322                           tblptrl	equ	0xFF6
  3323                           tablat	equ	0xFF5
  3324                           prodh	equ	0xFF4
  3325                           prodl	equ	0xFF3
  3326                           intcon	equ	0xFF2
  3327                           intcon2	equ	0xFF1
  3328                           intcon3	equ	0xFF0
  3329                           postinc0	equ	0xFEE
  3330                           fsr0h	equ	0xFEA
  3331                           fsr0l	equ	0xFE9
  3332                           wreg	equ	0xFE8
  3333                           postdec1	equ	0xFE5
  3334                           fsr1h	equ	0xFE2
  3335                           fsr1l	equ	0xFE1
  3336                           postinc2	equ	0xFDE
  3337                           postdec2	equ	0xFDD
  3338                           fsr2h	equ	0xFDA
  3339                           fsr2l	equ	0xFD9
  3340                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1
    Data        16
    BSS         115
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      84
    BANK0           160      2      82
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    DHT_StateMachine	PTR FTN()void [5] size(2) Largest target is 1
		 -> RecievingData(), DHTSignalResponse(), SecondStateRequest(), FirstStateRequest(), 
		 -> Idle(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    _TurnOnLights->_SetPWM
    _SetPWM->_SetDutyCycle
    _SetDutyCycle->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_TMR0_INIT

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      98
                    _InitDHT11Driver
                     _Interrupt_Init
                          _TMR0_INIT
                    _TMR0_WRITE_HIGH
                     _TMR0_WRITE_LOW
 ---------------------------------------------------------------------------------
 (1) _TMR0_WRITE_LOW                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WRITE_HIGH                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_INIT                                            2     2      0      54
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Interrupt_Init                                       0     0      0       0
                        _INIT_INTCON
                       _INIT_INTCON2
                       _INIT_INTCON3
                          _INIT_IPR1
                          _INIT_IPR2
                          _INIT_PIE1
                          _INIT_PIE2
                          _INIT_RCON
 ---------------------------------------------------------------------------------
 (2) _INIT_RCON                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_PIE2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_PIE1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_IPR2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_IPR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_INTCON3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_INTCON2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_INTCON                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitDHT11Driver                                      0     0      0       0
                    _ConfigureTimer1
 ---------------------------------------------------------------------------------
 (2) _ConfigureTimer1                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _HighISR                                             14    14      0     879
                                             18 COMRAM    14    14      0
                  _DHTSignalResponse *
                  _FirstStateRequest *
                               _Idle *
                      _RecievingData *
                 _SecondStateRequest *
                      _TurnOffLights
                       _TurnOnLights
                  i2_TMR0_WRITE_HIGH
                   i2_TMR0_WRITE_LOW
 ---------------------------------------------------------------------------------
 (4) i2_TMR0_WRITE_LOW                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) i2_TMR0_WRITE_HIGH                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TurnOnLights                                         0     0      0     835
                             _SetPWM
                           _StartPWM
 ---------------------------------------------------------------------------------
 (5) _StartPWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SetPWM                                               1     1      0     835
                                             17 COMRAM     1     1      0
                       _SetDutyCycle
                          _SetPeriod
 ---------------------------------------------------------------------------------
 (6) _SetPeriod                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetDutyCycle                                         3     3      0     813
                                             14 COMRAM     3     3      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     363
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     428
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _TurnOffLights                                        0     0      0       0
                            _StopPWM
 ---------------------------------------------------------------------------------
 (5) _StopPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _SecondStateRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RecievingData                                        2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Idle                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _FirstStateRequest                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _DHTSignalResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitDHT11Driver
     _ConfigureTimer1
   _Interrupt_Init
     _INIT_INTCON
     _INIT_INTCON2
     _INIT_INTCON3
     _INIT_IPR1
     _INIT_IPR2
     _INIT_PIE1
     _INIT_PIE2
     _INIT_RCON
   _TMR0_INIT
   _TMR0_WRITE_HIGH
   _TMR0_WRITE_LOW

 _HighISR (ROOT)
   _DHTSignalResponse *
   _FirstStateRequest *
   _Idle *
   _RecievingData *
   _SecondStateRequest *
   _TurnOffLights *
     _StopPWM
   _TurnOnLights *
     _SetPWM
       _SetDutyCycle
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _SetPeriod
     _StartPWM
   i2_TMR0_WRITE_HIGH *
   i2_TMR0_WRITE_LOW *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      2      52       5       51.3%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     20      54       1       89.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A6      20        0.0%
DATA                 0      0      A6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon Apr 11 13:48:49 2016

           ??_Interrupt_Init 00B0                  __CFG_CP0$ON 000000                  __CFG_CP1$ON 000000  
                __CFG_CP2$ON 000000                  __CFG_CP3$ON 000000                           l92 0B6A  
                __CFG_CPB$ON 000000                  __CFG_CPD$ON 000000                 ___awdiv@sign 002F  
        ___wmul@multiplicand 0026                  __CFG_BORV$3 000000        __size_of_TurnOnLights 000C  
                __CFG_LVP$ON 000000                          l325 0AC2                          _PR2 000FCB  
                        _LSb 0007                          _MSb 0009     TMR0_WRITE_HIGH@valorHigh 00B0  
                        prod 000FF3       __size_of_TurnOffLights 0006                          tosl 000FFD  
                        wreg 000FE8                 __CFG_WDT$OFF 000000                         l1381 0AB2  
                       l1377 0AA2                         _ADIF 007CF6                         _T0IF 007F92  
               ?_INIT_INTCON 0024                         i2l86 0866                         i2l89 08C4  
                       _TMR0 000FD6                         _TMR1 000FCE                         _Idle 0C98  
               __CFG_WRT0$ON 000000                 __CFG_WRT1$ON 000000                 __CFG_WRT2$ON 000000  
               __CFG_WRT3$ON 000000                __CFG_EBTR0$ON 000000                __CFG_EBTR1$ON 000000  
              __CFG_EBTR2$ON 000000                __CFG_EBTR3$ON 000000                 __CFG_WRTB$ON 000000  
               __CFG_WRTC$ON 000000                __CFG_BOR$SOFT 000000                 __CFG_WRTD$ON 000000  
              __CFG_EBTRB$ON 000000                         _main 0B4A                         _mask 001F  
                       _temp 0001                         _time 0023                         fsr0h 000FEA  
  __size_ofi2_TMR0_WRITE_LOW 0008                         fsr1h 000FE2                         fsr0l 000FE9  
                       fsr2h 000FDA                         fsr1l 000FE1                         fsr2l 000FD9  
         _IntegerTemperature 0014                         btemp 0055                         pclat 000FFA  
                       prodh 000FF4                         prodl 000FF3                         start 0016  
              __CFG_IESO$OFF 000000           __size_of_INIT_IPR1 0010           __size_of_INIT_IPR2 000E  
         __size_of_INIT_PIE1 0010           __size_of_INIT_PIE2 000E              __end_of_HighISR 0900  
         __size_of_INIT_RCON 0004                 _TurnOnLights 0C26                 ___param_bank 000010  
              __CFG_PLLDIV$1 000000                        ?_Idle 0024             ?_TMR0_WRITE_HIGH 0024  
            __end_of_StopPWM 0C70                        ?_main 0024              __end_of___awdiv 0984  
                      _CCPR1 000FBE                        _T0CON 000FD5              ___awdiv@divisor 002C  
                      _T1CON 000FCD                        _T2CON 000FCA                        _LATB3 007C53  
                      _T3CON 000FB1                ?_INIT_INTCON2 0024                ?_INIT_INTCON3 0024  
                      _T1RUN 007E6E              ___awdiv@counter 002E                        _TMR0H 000FD7  
                      _TMR1H 000FCF                        _TMR0L 000FD6                        _TMR1L 000FCE  
              __CFG_USBDIV$1 000000                __CFG_PWRT$OFF 000000           __size_of_TMR0_INIT 0028  
             __CFG_FCMEN$OFF 000000                        _frame 001E                        _times 0060  
                      _state 0022               __pbitbssCOMRAM 02A0                        pclath 000FFA  
                      tablat 000FF5                        status 000FD8                _TurnOffLights 0C8E  
            _ConfigureTimer1 0A82               __CFG_MCLRE$OFF 000000                 __end_of_Idle 0C9A  
            __initialization 0A3A     __size_of_InitDHT11Driver 000A                 __end_of_main 0B6C  
            SetPWM@dutycycle 0035                       ??_Idle 0024                       ??_main 00B2  
             ??_INIT_INTCON2 00B0               ??_INIT_INTCON3 00B0                __activetblptr 000002  
          __end_of_INIT_IPR1 0BF0            __end_of_INIT_IPR2 0C0C            __end_of_INIT_PIE1 0BE0  
          __end_of_INIT_PIE2 0BFE            __end_of_INIT_RCON 0C98              __CFG_CCP2MX$OFF 000000  
           __end_of_StartPWM 0C88                       _CCP1IE 007CEA                       _CCP1IF 007CF2  
                     _CCPR1H 000FBF                       _CCPR1L 000FBE                       _CCPR2L 000FBB  
           ___awdiv@dividend 002A  __size_of_SecondStateRequest 000C                       _INT2IF 007F81  
                     i2l1241 093A                       i2l1243 0942                       i2l1235 0924  
                     i2l1323 084A                       i2l1261 097A                       i2l1253 0962  
                     i2l1245 0946                       i2l1229 0914                       i2l1341 0884  
                     i2l1343 0888                       i2l1257 096C                       i2l1329 0852  
                     i2l1349 0896                       _OSCCON 000FD3                    ??_HighISR 0036  
                     _TMR0IF 007F92                       _TMR1CS 007E69                       _TMR0ON 007EAF  
                     _TMR1ON 007E68               ?_TurnOffLights 0024                       __SPBRG 0801  
                     _Door_f 02A0                       _SetPWM 0BA8               __CFG_XINST$OFF 000000  
     __size_of_RecievingData 0054            __end_of_TMR0_INIT 0B24                    ??_StopPWM 0024  
                     ___wmul 0B24                    ??___awdiv 002E               __CFG_STVREN$ON 000000  
         __size_of_SetPeriod 0006                       _counts 000D                       clear_0 0A40  
                     clear_1 0A4E             ___awdiv@quotient 0030      __size_of_TMR0_WRITE_LOW 000A  
               __pdataCOMRAM 0044                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                ?_SetDutyCycle 0024  
    __end_of_ConfigureTimer1 0AC8                   __accesstop 0060      __end_of__initialization 0A74  
            __CFG_PBADEN$OFF 000000             i2_TMR0_WRITE_LOW 0C70         __size_of_INIT_INTCON 000C  
              ___rparam_used 000001               __pcstackCOMRAM 0024                 _f_frameready 0019  
          ??_InitDHT11Driver 00B0                _RecievingData 09E6               ??_SetDutyCycle 0032  
          __end_of_SetPeriod 0C8E                   __pbssBANK0 0060              ??_TurnOffLights 0024  
       __end_of_INIT_INTCON2 0C1A         __end_of_INIT_INTCON3 0C5C              _DecimalHumidity 0011  
                    ?_SetPWM 0024                      ?___wmul 0024                    ?_StartPWM 0024  
                    _CCP1CON 000FBD                      _CCP2CON 000FBA            _FirstStateRequest 0AC8  
                    _T1OSCEN 007E6B                      _INTEDG2 007F8C               ?_RecievingData 0024  
         ?_FirstStateRequest 0024                      i2u31_48 0870                      i2u33_48 08B0  
        ??_FirstStateRequest 0024              __CFG_VREGEN$OFF 000000             ?_ConfigureTimer1 0024  
                    _HighISR 0008                      _Light_f 02A1                      _Night_f 02A2  
                    __Hparam 0000                      __Lparam 0000                   _firstvalue 001C  
            __size_of_SetPWM 0018                      _StopPWM 0C66                      ___awdiv 0900  
                 ??_StartPWM 0024              __size_of___wmul 0026                 __psmallconst 0800  
  __end_of_FirstStateRequest 0AFC                      __pcinit 0A3A               _TMR0_WRITE_LOW 0C3E  
                    __ramtop 0800                      __ptext0 0B4A                      __ptext1 0C3E  
                    __ptext2 0C48                      __ptext3 0AFC                      __ptext4 0B6C  
                    __ptext5 0C94                      __ptext6 0BF0                      __ptext7 0BD0  
                    __ptext8 0BFE                      __ptext9 0BE0                      _endbyte 0051  
                  _T1CONbits 000FCD                      _counter 0018      __size_of_Interrupt_Init 0022  
   __size_of_TMR0_WRITE_HIGH 000A               __pintcode_body 0804       TMR0_WRITE_LOW@valorLow 00B0  
       end_of_initialization 0A74                    _INIT_IPR1 0BE0                    _INIT_IPR2 0BFE  
                  _INIT_PIE1 0BD0                    _INIT_PIE2 0BF0                    _INIT_RCON 0C94  
              __Lmediumconst 0000                      int_func 0804         __end_of_SetDutyCycle 09E6  
                    postdec1 000FE5                      postdec2 000FDD                      postinc0 000FEE  
                    postinc2 000FDE       __end_of_TMR0_WRITE_LOW 0C48                    _TMR0_INIT 0AFC  
            ??_RecievingData 0024     __end_ofi2_TMR0_WRITE_LOW 0C78                    _TRISBbits 000F93  
 __end_of_SecondStateRequest 0C3E            i2_TMR0_WRITE_HIGH 0C78             _firstvaluespaces 001D  
      __size_of_INIT_INTCON2 000E        __size_of_INIT_INTCON3 000A                   ?_INIT_IPR1 0024  
                 ?_INIT_IPR2 0024                   ?_INIT_PIE1 0024                   ?_INIT_PIE2 0024  
                 ?_INIT_RCON 0024           ?i2_TMR0_WRITE_HIGH 0024          ??i2_TMR0_WRITE_HIGH 0024  
            _InitDHT11Driver 0C5C               __end_of__SPBRG 0802               __end_of_SetPWM 0BC0  
            ?_TMR0_WRITE_LOW 0024   __size_of_FirstStateRequest 0034               __end_of___wmul 0B4A  
                 ?_TMR0_INIT 0024             _DHT_StateMachine 0044                __pidataCOMRAM 0BC0  
               _INIT_INTCON2 0C0C                 _INIT_INTCON3 0C52            _secondvaluespaces 0021  
        start_initialization 0A3A    __end_ofi2_TMR0_WRITE_HIGH 0C80                ??_INIT_INTCON 00B0  
          ??_TMR0_WRITE_HIGH 00B0                    _SetPeriod 0C88                     ??_SetPWM 0035  
              ?_TurnOnLights 0024                     ??___wmul 0028             __CFG_LPT1OSC$OFF 000000  
              TMR0_INIT@T0PS 00B1            __size_of_StartPWM 0008                TMR0_INIT@bits 00B0  
             _Interrupt_Init 0B6C                  __pbssCOMRAM 0001                __pcstackBANK0 00B0  
          _DHTSignalResponse 0B8E                  ??_INIT_IPR1 00B0                  ??_INIT_IPR2 00B0  
                ??_INIT_PIE1 00B0                  ??_INIT_PIE2 00B0           ?_DHTSignalResponse 0024  
                ??_INIT_RCON 00B0      __end_of_InitDHT11Driver 0C66                     ?_HighISR 0024  
      __size_of_SetDutyCycle 0062                   ?_SetPeriod 0024        __end_of_TurnOffLights 0C94  
        ??_DHTSignalResponse 0024               ??_TurnOnLights 0036          __end_of_INIT_INTCON 0C26  
                  __pintcode 0008                     ?_StopPWM 0024                     ?___awdiv 002A  
                ??_TMR0_INIT 00B0       __end_of_Interrupt_Init 0B8E           _DecimalTemperature 0012  
                __smallconst 0800    __end_of_DHTSignalResponse 0BA8   __size_ofi2_TMR0_WRITE_HIGH 0008  
                  _firstbyte 004E                 _SetDutyCycle 0984                    _bytecount 0017  
             ___wmul@product 0028                     _IPR1bits 000F9F                     _IPR2bits 000FA2  
                   _PIE1bits 000F9D                     _PIE2bits 000FA0                     _RCONbits 000FD0  
   __size_of_ConfigureTimer1 0046             __CFG_WDTPS$32768 000000                    _prescaler 0052  
            ?_Interrupt_Init 0024            ___wmul@multiplier 0024                     _PWMValue 000B  
 i2TMR0_WRITE_HIGH@valorHigh 0024                    _splitbyte 0053            ?i2_TMR0_WRITE_LOW 0024  
         ??i2_TMR0_WRITE_LOW 0024                  _INTCON2bits 000FF1                  _INTCON3bits 000FF0  
                  copy_data0 0A68                  _INIT_INTCON 0C1A             ?_InitDHT11Driver 0024  
           __size_of_HighISR 08F8                  ??_SetPeriod 0024           _SecondStateRequest 0C32  
           ??_TMR0_WRITE_LOW 00B0                     __Hrparam 0000                     __Lrparam 0000  
                   _StartPWM 0C80          ?_SecondStateRequest 0024             __size_of_StopPWM 000A  
           __size_of___awdiv 0084        __end_of_RecievingData 0A3A   __size_of_DHTSignalResponse 001A  
   i2TMR0_WRITE_LOW@valorLow 0024              _TMR0_WRITE_HIGH 0C48         __end_of_TurnOnLights 0C32  
                   _f_slave1 001A                     _f_slave2 001B                 _TimerCounter 0015  
                   __ptext10 0C52                     __ptext11 0C0C                     __ptext20 0BA8  
                   __ptext12 0C1A                     __ptext21 0C88                     __ptext13 0C5C  
                   __ptext30 0C98                     __ptext22 0984                     __ptext14 0A82  
                   __ptext31 0C32                     __ptext23 0B24                     __ptext32 0000  
                   __ptext24 0900                     __ptext16 0C70                     __ptext25 0C8E  
                   __ptext17 0C78                     __ptext26 0C66                     __ptext18 0C26  
                   __ptext27 09E6                     __ptext19 0C80                     __ptext28 0B8E  
                   __ptext29 0AC8                     _bitcount 0016         ??_SecondStateRequest 0024  
              __size_of_Idle 0002                __size_of_main 0022                     _lasttime 000F  
            _IntegerHumidity 0013                     int$flags 0055            ??_ConfigureTimer1 00B0  
      __CFG_CPUDIV$OSC1_PLL2 000000                   _INTCONbits 000FF2                  _secondvalue 0020  
                   intlevel2 0000      __end_of_TMR0_WRITE_HIGH 0C52        SetDutyCycle@dutycycle 0034  
        __CFG_FOSC$INTOSC_HS 000000  
